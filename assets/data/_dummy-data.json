[
  {
    "id": "23345414343",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10681349674,
      "size": 6,
      "distinct_size": 6,
      "ref": "refs/heads/master",
      "head": "15205c2829ca2cbb5ece5ceaafe1171a8470e62b",
      "before": "426b4ca2d6a5ab51f6b6175d06e4f8ddea434cdf",
      "commits": [
        {
          "sha": "c56f9ec8b20f931014574b943590c4d830109380",
          "author": {
            "email": "dhowells@redhat.com",
            "name": "David Howells"
          },
          "message": "afs: Use refcount_t rather than atomic_t\n\nUse refcount_t rather than atomic_t in afs to make use of the count\nchecking facilities provided.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nReviewed-by: Marc Dionne <marc.dionne@auristor.com>\ncc: linux-afs@lists.infradead.org\nLink: https://lore.kernel.org/r/165911277768.3745403.423349776836296452.stgit@warthog.procyon.org.uk/ # v1",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c56f9ec8b20f931014574b943590c4d830109380"
        },
        {
          "sha": "2757a4dc184997c66ef1de32636f73b9f21aac14",
          "author": {
            "email": "dhowells@redhat.com",
            "name": "David Howells"
          },
          "message": "afs: Fix access after dec in put functions\n\nReference-putting functions should not access the object being put after\ndecrementing the refcount unless they reduce the refcount to zero.\n\nFix a couple of instances of this in afs by copying the information to be\nlogged by tracepoint to local variables before doing the decrement.\n\n[Fixed a bit in afs_put_server() that I'd missed but Marc caught]\n\nFixes: 341f741f04be (\"afs: Refcount the afs_call struct\")\nFixes: 452181936931 (\"afs: Trace afs_server usage\")\nFixes: 977e5f8ed0ab (\"afs: Split the usage count on struct afs_server\")\nSigned-off-by: David Howells <dhowells@redhat.com>\ncc: Marc Dionne <marc.dionne@auristor.com>\ncc: linux-afs@lists.infradead.org\nLink: https://lore.kernel.org/r/165911278430.3745403.16526310736054780645.stgit@warthog.procyon.org.uk/ # v1",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2757a4dc184997c66ef1de32636f73b9f21aac14"
        },
        {
          "sha": "fb24771faf72a2fd62b3b6287af3c610c3ec9cf1",
          "author": {
            "email": "jlayton@kernel.org",
            "name": "Jeff Layton"
          },
          "message": "fscache: don't leak cookie access refs if invalidation is in progress or failed\n\nIt's possible for a request to invalidate a fscache_cookie will come in\nwhile we're already processing an invalidation. If that happens we\ncurrently take an extra access reference that will leak. Only call\n__fscache_begin_cookie_access if the FSCACHE_COOKIE_DO_INVALIDATE bit\nwas previously clear.\n\nAlso, ensure that we attempt to clear the bit when the cookie is\n\"FAILED\" and put the reference to avoid an access leak.\n\nFixes: 85e4ea1049c7 (\"fscache: Fix invalidation/lookup race\")\nSuggested-by: David Howells <dhowells@redhat.com>\nSigned-off-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: David Howells <dhowells@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fb24771faf72a2fd62b3b6287af3c610c3ec9cf1"
        },
        {
          "sha": "1a1e3aca9d4957e282945cdc2b58e7c560b8e0d2",
          "author": {
            "email": "jlayton@kernel.org",
            "name": "Jeff Layton"
          },
          "message": "fscache: add tracepoint when failing cookie\n\nSigned-off-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: David Howells <dhowells@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1a1e3aca9d4957e282945cdc2b58e7c560b8e0d2"
        },
        {
          "sha": "4b22e2074195097c9d6bdc688288d12b7b236bae",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'afs-fixes-20220802' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs\n\nPull AFS fixes from David Howells:\n \"Fix AFS refcount handling.\n\n  The first patch converts afs to use refcount_t for its refcounts and\n  the second patch fixes afs_put_call() and afs_put_server() to save the\n  values they're going to log in the tracepoint before decrementing the\n  refcount\"\n\n* tag 'afs-fixes-20220802' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  afs: Fix access after dec in put functions\n  afs: Use refcount_t rather than atomic_t",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4b22e2074195097c9d6bdc688288d12b7b236bae"
        },
        {
          "sha": "15205c2829ca2cbb5ece5ceaafe1171a8470e62b",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'fscache-fixes-20220809' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs\n\nPull fscache updates from David Howells:\n\n - Fix a cookie access ref leak if a cookie is invalidated a second time\n   before the first invalidation is actually processed.\n\n - Add a tracepoint to log cookie lookup failure\n\n* tag 'fscache-fixes-20220809' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs:\n  fscache: add tracepoint when failing cookie\n  fscache: don't leak cookie access refs if invalidation is in progress or failed",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/15205c2829ca2cbb5ece5ceaafe1171a8470e62b"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-09T17:28:22Z"
  },
  {
    "id": "23344940029",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10681118552,
      "size": 21,
      "distinct_size": 21,
      "ref": "refs/heads/master",
      "head": "426b4ca2d6a5ab51f6b6175d06e4f8ddea434cdf",
      "before": "eb555cb5b794f4e12a9897f3d46d5a72104cd4a7",
      "commits": [
        {
          "sha": "28e1a8f4b0ff1eafc320ec733b9c61ee7eb633ea",
          "author": {
            "email": "tjytimi@163.com",
            "name": "Jinyu Tang"
          },
          "message": "memblock: avoid some repeat when add new range\n\nThe worst case is that the new memory range overlaps all existing\nregions, which requires type->cnt + 1 empty struct memblock_region slots in\nthe type->regions array.\nSo if type->cnt + 1 + type->cnt is less than type->max, we can insert\nregions directly rather than calculate the needed amount before the\ninsertion.\nAnd becase of merge operation in the end of function, tpye->cnt will\nincrease slowly for many cases.\n\nThis change allows to avoid unnecessary repeat of memblock ranges traversal\nfor many cases when adding new memory range.\n\nSigned-off-by: Jinyu Tang <tjytimi@163.com>\n[rppt: massaged comment and changelog text]\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/28e1a8f4b0ff1eafc320ec733b9c61ee7eb633ea"
        },
        {
          "sha": "946dccb35d74079436677afcdc767d0406e99a88",
          "author": {
            "email": "remckee0@gmail.com",
            "name": "Rebecca Mckeever"
          },
          "message": "memblock tests: Makefile: add arguments to control verbosity\n\nAdd VERBOSE and MEMBLOCK_DEBUG user-provided arguments. VERBOSE will\nenable verbose output from Memblock simulator. MEMBLOCK_DEBUG will enable\nmemblock_dbg() messages.\n\nUpdate the help message to include VERBOSE and MEMBLOCK_DEBUG. Update\nthe README to include VERBOSE. The README does not include all available\noptions and refers to the help message for the remaining options.\nTherefore, omit MEMBLOCK_DEBUG from README.\n\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Rebecca Mckeever <remckee0@gmail.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/5503f3efe82ecef5c99961a1d53003c8ad06cf27.1656907314.git.remckee0@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/946dccb35d74079436677afcdc767d0406e99a88"
        },
        {
          "sha": "76586c00e74d189964d2fde26345a4a15f2ea02e",
          "author": {
            "email": "remckee0@gmail.com",
            "name": "Rebecca Mckeever"
          },
          "message": "memblock tests: add verbose output to memblock tests\n\nAdd and use functions and macros for printing verbose testing output.\n\nIf the Memblock simulator was compiled with VERBOSE=1:\n- prefix_push(): appends the given string to a prefix string that will be\n  printed in test_fail() and test_pass*().\n\n- prefix_pop(): removes the last prefix from the prefix string.\n\n- prefix_reset(): clears the prefix string.\n\n- test_fail(): prints a message after a test fails containing the test\n  number of the failing test and the prefix.\n\n- test_pass(): prints a message after a test passes containing its test\n  number and the prefix.\n\n- test_print(): prints the given formatted output string.\n\n- test_pass_pop(): runs test_pass() followed by prefix_pop().\n\n- PREFIX_PUSH(): runs prefix_push(__func__).\n\nIf the Memblock simulator was not compiled with VERBOSE=1, these\nfunctions/macros do nothing.\n\nAdd the assert wrapper macros ASSERT_EQ(), ASSERT_NE(), and ASSERT_LT().\nIf the assert condition fails, these macros call test_fail() before\nexecuting assert().\n\nAcked-by: David Hildenbrand <david@redhat.com>\nReviewed-by: Shaoqin Huang <shaoqin.huang@intel.com>\nSigned-off-by: Rebecca Mckeever <remckee0@gmail.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/f234d443fe154d5ae8d8aa07284aff69edfb6f61.1656907314.git.remckee0@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/76586c00e74d189964d2fde26345a4a15f2ea02e"
        },
        {
          "sha": "c55b31a124a68171e5915b1036ca42d8a683eca2",
          "author": {
            "email": "remckee0@gmail.com",
            "name": "Rebecca Mckeever"
          },
          "message": "memblock tests: set memblock_debug to enable memblock_dbg() messages\n\nIf Memblock simulator was compiled with MEMBLOCK_DEBUG=1, set\nmemblock_debug to 1 so that memblock_dbg() will print debug information\nwhen memblock functions are tested in Memblock simulator.\n\nSigned-off-by: Rebecca Mckeever <remckee0@gmail.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/aee4200cce1c09992ed055006a81fde1b6b5b567.1656907314.git.remckee0@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c55b31a124a68171e5915b1036ca42d8a683eca2"
        },
        {
          "sha": "fe833b4edc594a4a6f1ce2d68975733e17b8f8ed",
          "author": {
            "email": "remckee0@gmail.com",
            "name": "Rebecca Mckeever"
          },
          "message": "memblock tests: remove completed TODO items\n\nRemove completed items from TODO list.\n\nSigned-off-by: Rebecca Mckeever <remckee0@gmail.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/6a3e74fcb51a07e8d9fbbcbe84bdb8aa8b00e843.1656907314.git.remckee0@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fe833b4edc594a4a6f1ce2d68975733e17b8f8ed"
        },
        {
          "sha": "2b3416ceff5e6bd4922f6d1c61fb68113dd82302",
          "author": {
            "email": "xuyang2018.jy@fujitsu.com",
            "name": "Yang Xu"
          },
          "message": "fs: add mode_strip_sgid() helper\n\nAdd a dedicated helper to handle the setgid bit when creating a new file\nin a setgid directory. This is a preparatory patch for moving setgid\nstripping into the vfs. The patch contains no functional changes.\n\nCurrently the setgid stripping logic is open-coded directly in\ninode_init_owner() and the individual filesystems are responsible for\nhandling setgid inheritance. Since this has proven to be brittle as\nevidenced by old issues we uncovered over the last months (see [1] to\n[3] below) we will try to move this logic into the vfs.\n\nLink: e014f37db1a2 (\"xfs: use setattr_copy to set vfs inode attributes\") [1]\nLink: 01ea173e103e (\"xfs: fix up non-directory creation in SGID directories\") [2]\nLink: fd84bfdddd16 (\"ceph: fix up non-directory creation in SGID directories\") [3]\nLink: https://lore.kernel.org/r/1657779088-2242-1-git-send-email-xuyang2018.jy@fujitsu.com\nReviewed-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nReviewed-and-Tested-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>\nSigned-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2b3416ceff5e6bd4922f6d1c61fb68113dd82302"
        },
        {
          "sha": "ac6800e279a22b28f4fc21439843025a0d5bf03e",
          "author": {
            "email": "xuyang2018.jy@fujitsu.com",
            "name": "Yang Xu"
          },
          "message": "fs: Add missing umask strip in vfs_tmpfile\n\nAll creation paths except for O_TMPFILE handle umask in the vfs directly\nif the filesystem doesn't support or enable POSIX ACLs. If the filesystem\ndoes then umask handling is deferred until posix_acl_create().\nBecause, O_TMPFILE misses umask handling in the vfs it will not honor\numask settings. Fix this by adding the missing umask handling.\n\nLink: https://lore.kernel.org/r/1657779088-2242-2-git-send-email-xuyang2018.jy@fujitsu.com\nFixes: 60545d0d4610 (\"[O_TMPFILE] it's still short a few helpers, but infrastructure should be OK now...\")\nCc: <stable@vger.kernel.org> # 4.19+\nReported-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nReviewed-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-and-Tested-by: Jeff Layton <jlayton@kernel.org>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>\nSigned-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ac6800e279a22b28f4fc21439843025a0d5bf03e"
        },
        {
          "sha": "06c8580aa23ddc9b1c37b9c7c5e2cc504e460207",
          "author": {
            "email": "remckee0@gmail.com",
            "name": "Rebecca Mckeever"
          },
          "message": "memblock tests: change build options to run-time options\n\nChange verbose and movable node build options to run-time options.\n\nMovable node usage:\n    $ ./main -m\n\n    Or:\n    $ ./main --movable-node\n\nVerbose usage:\n    $ ./main -v\n\n    Or:\n    $ ./main --verbose\n\nSigned-off-by: Rebecca Mckeever <remckee0@gmail.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220714031717.12258-1-remckee0@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/06c8580aa23ddc9b1c37b9c7c5e2cc504e460207"
        },
        {
          "sha": "1639a49ccdce58ea248841ed9b23babcce6dbb0b",
          "author": {
            "email": "xuyang2018.jy@fujitsu.com",
            "name": "Yang Xu"
          },
          "message": "fs: move S_ISGID stripping into the vfs_*() helpers\n\nMove setgid handling out of individual filesystems and into the VFS\nitself to stop the proliferation of setgid inheritance bugs.\n\nCreating files that have both the S_IXGRP and S_ISGID bit raised in\ndirectories that themselves have the S_ISGID bit set requires additional\nprivileges to avoid security issues.\n\nWhen a filesystem creates a new inode it needs to take care that the\ncaller is either in the group of the newly created inode or they have\nCAP_FSETID in their current user namespace and are privileged over the\nparent directory of the new inode. If any of these two conditions is\ntrue then the S_ISGID bit can be raised for an S_IXGRP file and if not\nit needs to be stripped.\n\nHowever, there are several key issues with the current implementation:\n\n* S_ISGID stripping logic is entangled with umask stripping.\n\n  If a filesystem doesn't support or enable POSIX ACLs then umask\n  stripping is done directly in the vfs before calling into the\n  filesystem.\n  If the filesystem does support POSIX ACLs then unmask stripping may be\n  done in the filesystem itself when calling posix_acl_create().\n\n  Since umask stripping has an effect on S_ISGID inheritance, e.g., by\n  stripping the S_IXGRP bit from the file to be created and all relevant\n  filesystems have to call posix_acl_create() before inode_init_owner()\n  where we currently take care of S_ISGID handling S_ISGID handling is\n  order dependent. IOW, whether or not you get a setgid bit depends on\n  POSIX ACLs and umask and in what order they are called.\n\n  Note that technically filesystems are free to impose their own\n  ordering between posix_acl_create() and inode_init_owner() meaning\n  that there's additional ordering issues that influence S_SIGID\n  inheritance.\n\n* Filesystems that don't rely on inode_init_owner() don't get S_ISGID\n  stripping logic.\n\n  While that may be intentional (e.g. network filesystems might just\n  defer setgid stripping to a server) it is often just a security issue.\n\nThis is not just ugly it's unsustainably messy especially since we do\nstill have bugs in this area years after the initial round of setgid\nbugfixes.\n\nSo the current state is quite messy and while we won't be able to make\nit completely clean as posix_acl_create() is still a filesystem specific\ncall we can improve the S_SIGD stripping situation quite a bit by\nhoisting it out of inode_init_owner() and into the vfs creation\noperations. This means we alleviate the burden for filesystems to handle\nS_ISGID stripping correctly and can standardize the ordering between\nS_ISGID and umask stripping in the vfs.\n\nWe add a new helper vfs_prepare_mode() so S_ISGID handling is now done\nin the VFS before umask handling. This has S_ISGID handling is\nunaffected unaffected by whether umask stripping is done by the VFS\nitself (if no POSIX ACLs are supported or enabled) or in the filesystem\nin posix_acl_create() (if POSIX ACLs are supported).\n\nThe vfs_prepare_mode() helper is called directly in vfs_*() helpers that\ncreate new filesystem objects. We need to move them into there to make\nsure that filesystems like overlayfs hat have callchains like:\n\nsys_mknod()\n-> do_mknodat(mode)\n   -> .mknod = ovl_mknod(mode)\n      -> ovl_create(mode)\n         -> vfs_mknod(mode)\n\nget S_ISGID stripping done when calling into lower filesystems via\nvfs_*() creation helpers. Moving vfs_prepare_mode() into e.g.\nvfs_mknod() takes care of that. This is in any case semantically cleaner\nbecause S_ISGID stripping is VFS security requirement.\n\nSecurity hooks so far have seen the mode with the umask applied but\nwithout S_ISGID handling done. The relevant hooks are called outside of\nvfs_*() creation helpers so by calling vfs_prepare_mode() from vfs_*()\nhelpers the security hooks would now see the mode without umask\nstripping applied. For now we fix this by passing the mode with umask\nsettings applied to not risk any regressions for LSM hooks. IOW, nothing\nchanges for LSM hooks. It is worth pointing out that security hooks\nnever saw the mode that is seen by the filesystem when actually creating\nthe file. They have always been completely misplaced for that to work.\n\nThe following filesystems use inode_init_owner() and thus relied on\nS_ISGID stripping: spufs, 9p, bfs, btrfs, ext2, ext4, f2fs, hfsplus,\nhugetlbfs, jfs, minix, nilfs2, ntfs3, ocfs2, omfs, overlayfs, ramfs,\nreiserfs, sysv, ubifs, udf, ufs, xfs, zonefs, bpf, tmpfs.\n\nAll of the above filesystems end up calling inode_init_owner() when new\nfilesystem objects are created through the ->mkdir(), ->mknod(),\n->create(), ->tmpfile(), ->rename() inode operations.\n\nSince directories always inherit the S_ISGID bit with the exception of\nxfs when irix_sgid_inherit mode is turned on S_ISGID stripping doesn't\napply. The ->symlink() and ->link() inode operations trivially inherit\nthe mode from the target and the ->rename() inode operation inherits the\nmode from the source inode. All other creation inode operations will get\nS_ISGID handling via vfs_prepare_mode() when called from their relevant\nvfs_*() helpers.\n\nIn addition to this there are filesystems which allow the creation of\nfilesystem objects through ioctl()s or - in the case of spufs -\ncircumventing the vfs in other ways. If filesystem objects are created\nthrough ioctl()s the vfs doesn't know about it and can't apply regular\npermission checking including S_ISGID logic. Therfore, a filesystem\nrelying on S_ISGID stripping in inode_init_owner() in their ioctl()\ncallpath will be affected by moving this logic into the vfs. We audited\nthose filesystems:\n\n* btrfs allows the creation of filesystem objects through various\n  ioctls(). Snapshot creation literally takes a snapshot and so the mode\n  is fully preserved and S_ISGID stripping doesn't apply.\n\n  Creating a new subvolum relies on inode_init_owner() in\n  btrfs_new_subvol_inode() but only creates directories and doesn't\n  raise S_ISGID.\n\n* ocfs2 has a peculiar implementation of reflinks. In contrast to e.g.\n  xfs and btrfs FICLONE/FICLONERANGE ioctl() that is only concerned with\n  the actual extents ocfs2 uses a separate ioctl() that also creates the\n  target file.\n\n  Iow, ocfs2 circumvents the vfs entirely here and did indeed rely on\n  inode_init_owner() to strip the S_ISGID bit. This is the only place\n  where a filesystem needs to call mode_strip_sgid() directly but this\n  is self-inflicted pain.\n\n* spufs doesn't go through the vfs at all and doesn't use ioctl()s\n  either. Instead it has a dedicated system call spufs_create() which\n  allows the creation of filesystem objects. But spufs only creates\n  directories and doesn't allo S_SIGID bits, i.e. it specifically only\n  allows 0777 bits.\n\n* bpf uses vfs_mkobj() but also doesn't allow S_ISGID bits to be created.\n\nThe patch will have an effect on ext2 when the EXT2_MOUNT_GRPID mount\noption is used, on ext4 when the EXT4_MOUNT_GRPID mount option is used,\nand on xfs when the XFS_FEAT_GRPID mount option is used. When any of\nthese filesystems are mounted with their respective GRPID option then\nnewly created files inherit the parent directories group\nunconditionally. In these cases non of the filesystems call\ninode_init_owner() and thus did never strip the S_ISGID bit for newly\ncreated files. Moving this logic into the VFS means that they now get\nthe S_ISGID bit stripped. This is a user visible change. If this leads\nto regressions we will either need to figure out a better way or we need\nto revert. However, given the various setgid bugs that we found just in\nthe last two years this is a regression risk we should take.\n\nAssociated with this change is a new set of fstests to enforce the\nsemantics for all new filesystems.\n\nLink: https://lore.kernel.org/ceph-devel/20220427092201.wvsdjbnc7b4dttaw@wittgenstein [1]\nLink: e014f37db1a2 (\"xfs: use setattr_copy to set vfs inode attributes\") [2]\nLink: 01ea173e103e (\"xfs: fix up non-directory creation in SGID directories\") [3]\nLink: fd84bfdddd16 (\"ceph: fix up non-directory creation in SGID directories\") [4]\nLink: https://lore.kernel.org/r/1657779088-2242-3-git-send-email-xuyang2018.jy@fujitsu.com\nSuggested-by: Dave Chinner <david@fromorbit.com>\nSuggested-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nReviewed-by: Darrick J. Wong <djwong@kernel.org>\nReviewed-and-Tested-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>\n[<brauner@kernel.org>: rewrote commit message]\nSigned-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1639a49ccdce58ea248841ed9b23babcce6dbb0b"
        },
        {
          "sha": "5fadbd992996e9dda7ebcb62f5352866057bd619",
          "author": {
            "email": "xuyang2018.jy@fujitsu.com",
            "name": "Yang Xu"
          },
          "message": "ceph: rely on vfs for setgid stripping\n\nNow that we finished moving setgid stripping for regular files in setgid\ndirectories into the vfs, individual filesystem don't need to manually\nstrip the setgid bit anymore. Drop the now unneeded code from ceph.\n\nLink: https://lore.kernel.org/r/1657779088-2242-4-git-send-email-xuyang2018.jy@fujitsu.com\nReviewed-by: Xiubo Li <xiubli@redhat.com>\nReviewed-by: Christian Brauner (Microsoft)<brauner@kernel.org>\nReviewed-and-Tested-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>\nSigned-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5fadbd992996e9dda7ebcb62f5352866057bd619"
        },
        {
          "sha": "3c2bf173501652fced1d058834e9c983d295b126",
          "author": {
            "email": "rdunlap@infradead.org",
            "name": "Randy Dunlap"
          },
          "message": "m68k: coldfire/device.c: protect FLEXCAN blocks\n\nWhen CAN_FLEXCAN=y and M5441x is not set/enabled, there are build\nerrors in coldfire/device.c:\n\n../arch/m68k/coldfire/device.c:595:26: error: 'MCFFLEXCAN_BASE0' undeclared here (not in a function); did you mean 'MCFDMA_BASE0'?\n  595 |                 .start = MCFFLEXCAN_BASE0,\n../arch/m68k/coldfire/device.c:596:43: error: 'MCFFLEXCAN_SIZE' undeclared here (not in a function)\n  596 |                 .end = MCFFLEXCAN_BASE0 + MCFFLEXCAN_SIZE,\n../arch/m68k/coldfire/device.c:600:26: error: 'MCF_IRQ_IFL0' undeclared here (not in a function); did you mean 'MCF_IRQ_I2C0'?\n  600 |                 .start = MCF_IRQ_IFL0,\n../arch/m68k/coldfire/device.c:605:26: error: 'MCF_IRQ_BOFF0' undeclared here (not in a function); did you mean 'MCF_IRQ_I2C0'?\n  605 |                 .start = MCF_IRQ_BOFF0,\n../arch/m68k/coldfire/device.c:610:26: error: 'MCF_IRQ_ERR0' undeclared here (not in a function); did you mean 'MCF_IRQ_I2C0'?\n  610 |                 .start = MCF_IRQ_ERR0,\n\nProtect the FLEXCAN code blocks by checking if MCFFLEXCAN_SIZE\nis defined.\n\nFixes: 35a9f9363a89 (\"m68k: m5441x: add flexcan support\")\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nCc: Greg Ungerer <gerg@linux-m68k.org>\nCc: Geert Uytterhoeven <geert@linux-m68k.org>\nCc: linux-m68k@lists.linux-m68k.org\nCc: uclinux-dev@uclinux.org\nCc: Angelo Dureghello <angelo@kernel-space.org>\nSigned-off-by: Greg Ungerer <gerg@linux-m68k.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3c2bf173501652fced1d058834e9c983d295b126"
        },
        {
          "sha": "90ebf501262da7a05ebe18042907dbe57f616825",
          "author": {
            "email": "wangjingjin1@huawei.com",
            "name": "Wang Jingjin"
          },
          "message": "m68k: coldfire: make symbol m523x_clk_lookup static\n\nFix sparse warnings:\n\narch/m68k/coldfire/m523x.c:31:19: sparse: sparse: symbol 'm523x_clk_lookup' was not declared. Should it be static?\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Wang Jingjin <wangjingjin1@huawei.com>\nSigned-off-by: Greg Ungerer <gerg@linux-m68k.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/90ebf501262da7a05ebe18042907dbe57f616825"
        },
        {
          "sha": "472e68df4a5eacdbe4fd07cffef1b5ffdd95516b",
          "author": {
            "email": "wangxiang@cdjrlc.com",
            "name": "Xiang wangx"
          },
          "message": "m68k: Fix syntax errors in comments\n\ncomments \"the the\" should be replaced by \"of the\" instead.\n\nSigned-off-by: Xiang wangx <wangxiang@cdjrlc.com>\nSigned-off-by: Greg Ungerer <gerg@linux-m68k.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/472e68df4a5eacdbe4fd07cffef1b5ffdd95516b"
        },
        {
          "sha": "0a7e91528202bec8e8dc5787c7568e6c60ce7f43",
          "author": {
            "email": "liuxp11@chinatelecom.cn",
            "name": "Liu Xinpeng"
          },
          "message": "memblock tests: fix compilation errors\n\nDo 'make -C tools/testing/memblock', get the following errors:\n\nmemblock.o: In function `memblock_find_in_range.constprop.9':\nmemblock.c:(.text+0x4651): undefined reference to `pr_warn_ratelimited'\nmemblock.o: In function `memblock_mark_mirror':\nmemblock.c:(.text+0x7171): undefined reference to `mirrored_kernelcore'\n\nFixes: 902c2d91582c (\"memblock: Disable mirror feature if kernelcore is not specified\")\nFixes: 14d9a675fd0d (\"mm: Ratelimited mirrored memory related warning messages\")\n\nSigned-off-by: Liu Xinpeng <liuxp11@chinatelecom.cn>\nTested-by: Ma Wupeng <mawupeng1@huawei.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/1658916453-26312-1-git-send-email-liuxp11@chinatelecom.cn",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0a7e91528202bec8e8dc5787c7568e6c60ce7f43"
        },
        {
          "sha": "04d9490986d1e04a38db88276115e6b3c9ec3faa",
          "author": {
            "email": "shaoqin.huang@intel.com",
            "name": "Shaoqin Huang"
          },
          "message": "memblock test: Modify the obsolete description in README\n\nThe VERBOSE option in Makefile has been moved, but there still have the\ndescription left in README. For now, we use `-v` options when running\nmemblock test to print information, so using the new to replace the\nobsolete items.\n\nSigned-off-by: Shaoqin Huang <shaoqin.huang@intel.com>\nAcked-by: Rebecca Mckeever <remckee0@gmail.com>\nSigned-off-by: Mike Rapoport <rppt@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220729161125.190845-1-shaoqin.huang@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/04d9490986d1e04a38db88276115e6b3c9ec3faa"
        },
        {
          "sha": "2b1299322016731d56807aa49254a5ea3080b6b3",
          "author": {
            "email": "daniel.sneddon@linux.intel.com",
            "name": "Daniel Sneddon"
          },
          "message": "x86/speculation: Add RSB VM Exit protections\n\ntl;dr: The Enhanced IBRS mitigation for Spectre v2 does not work as\ndocumented for RET instructions after VM exits. Mitigate it with a new\none-entry RSB stuffing mechanism and a new LFENCE.\n\n== Background ==\n\nIndirect Branch Restricted Speculation (IBRS) was designed to help\nmitigate Branch Target Injection and Speculative Store Bypass, i.e.\nSpectre, attacks. IBRS prevents software run in less privileged modes\nfrom affecting branch prediction in more privileged modes. IBRS requires\nthe MSR to be written on every privilege level change.\n\nTo overcome some of the performance issues of IBRS, Enhanced IBRS was\nintroduced.  eIBRS is an \"always on\" IBRS, in other words, just turn\nit on once instead of writing the MSR on every privilege level change.\nWhen eIBRS is enabled, more privileged modes should be protected from\nless privileged modes, including protecting VMMs from guests.\n\n== Problem ==\n\nHere's a simplification of how guests are run on Linux' KVM:\n\nvoid run_kvm_guest(void)\n{\n\t// Prepare to run guest\n\tVMRESUME();\n\t// Clean up after guest runs\n}\n\nThe execution flow for that would look something like this to the\nprocessor:\n\n1. Host-side: call run_kvm_guest()\n2. Host-side: VMRESUME\n3. Guest runs, does \"CALL guest_function\"\n4. VM exit, host runs again\n5. Host might make some \"cleanup\" function calls\n6. Host-side: RET from run_kvm_guest()\n\nNow, when back on the host, there are a couple of possible scenarios of\npost-guest activity the host needs to do before executing host code:\n\n* on pre-eIBRS hardware (legacy IBRS, or nothing at all), the RSB is not\ntouched and Linux has to do a 32-entry stuffing.\n\n* on eIBRS hardware, VM exit with IBRS enabled, or restoring the host\nIBRS=1 shortly after VM exit, has a documented side effect of flushing\nthe RSB except in this PBRSB situation where the software needs to stuff\nthe last RSB entry \"by hand\".\n\nIOW, with eIBRS supported, host RET instructions should no longer be\ninfluenced by guest behavior after the host retires a single CALL\ninstruction.\n\nHowever, if the RET instructions are \"unbalanced\" with CALLs after a VM\nexit as is the RET in #6, it might speculatively use the address for the\ninstruction after the CALL in #3 as an RSB prediction. This is a problem\nsince the (untrusted) guest controls this address.\n\nBalanced CALL/RET instruction pairs such as in step #5 are not affected.\n\n== Solution ==\n\nThe PBRSB issue affects a wide variety of Intel processors which\nsupport eIBRS. But not all of them need mitigation. Today,\nX86_FEATURE_RSB_VMEXIT triggers an RSB filling sequence that mitigates\nPBRSB. Systems setting RSB_VMEXIT need no further mitigation - i.e.,\neIBRS systems which enable legacy IBRS explicitly.\n\nHowever, such systems (X86_FEATURE_IBRS_ENHANCED) do not set RSB_VMEXIT\nand most of them need a new mitigation.\n\nTherefore, introduce a new feature flag X86_FEATURE_RSB_VMEXIT_LITE\nwhich triggers a lighter-weight PBRSB mitigation versus RSB_VMEXIT.\n\nThe lighter-weight mitigation performs a CALL instruction which is\nimmediately followed by a speculative execution barrier (INT3). This\nsteers speculative execution to the barrier -- just like a retpoline\n-- which ensures that speculation can never reach an unbalanced RET.\nThen, ensure this CALL is retired before continuing execution with an\nLFENCE.\n\nIn other words, the window of exposure is opened at VM exit where RET\nbehavior is troublesome. While the window is open, force RSB predictions\nsampling for RET targets to a dead end at the INT3. Close the window\nwith the LFENCE.\n\nThere is a subset of eIBRS systems which are not vulnerable to PBRSB.\nAdd these systems to the cpu_vuln_whitelist[] as NO_EIBRS_PBRSB.\nFuture systems that aren't vulnerable will set ARCH_CAP_PBRSB_NO.\n\n  [ bp: Massage, incorporate review comments from Andy Cooper. ]\n\nSigned-off-by: Daniel Sneddon <daniel.sneddon@linux.intel.com>\nCo-developed-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2b1299322016731d56807aa49254a5ea3080b6b3"
        },
        {
          "sha": "ba6e31af2be96c4d0536f2152ed6f7b6c11bca47",
          "author": {
            "email": "pawan.kumar.gupta@linux.intel.com",
            "name": "Pawan Gupta"
          },
          "message": "x86/speculation: Add LFENCE to RSB fill sequence\n\nRSB fill sequence does not have any protection for miss-prediction of\nconditional branch at the end of the sequence. CPU can speculatively\nexecute code immediately after the sequence, while RSB filling hasn't\ncompleted yet.\n\n  #define __FILL_RETURN_BUFFER(reg, nr, sp)       \\\n          mov     $(nr/2), reg;                   \\\n  771:                                            \\\n          ANNOTATE_INTRA_FUNCTION_CALL;           \\\n          call    772f;                           \\\n  773:    /* speculation trap */                  \\\n          UNWIND_HINT_EMPTY;                      \\\n          pause;                                  \\\n          lfence;                                 \\\n          jmp     773b;                           \\\n  772:                                            \\\n          ANNOTATE_INTRA_FUNCTION_CALL;           \\\n          call    774f;                           \\\n  775:    /* speculation trap */                  \\\n          UNWIND_HINT_EMPTY;                      \\\n          pause;                                  \\\n          lfence;                                 \\\n          jmp     775b;                           \\\n  774:                                            \\\n          add     $(BITS_PER_LONG/8) * 2, sp;     \\\n          dec     reg;                            \\\n          jnz     771b;        <----- CPU can miss-predict here.\n\nBefore RSB is filled, RETs that come in program order after this macro\ncan be executed speculatively, making them vulnerable to RSB-based\nattacks.\n\nMitigate it by adding an LFENCE after the conditional branch to prevent\nspeculation while RSB is being filled.\n\nSuggested-by: Andrew Cooper <andrew.cooper3@citrix.com>\nSigned-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ba6e31af2be96c4d0536f2152ed6f7b6c11bca47"
        },
        {
          "sha": "5318b987fe9f3430adb0f5d81d07052fd996835b",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'x86_bugs_pbrsb' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 eIBRS fixes from Borislav Petkov:\n \"More from the CPU vulnerability nightmares front:\n\n  Intel eIBRS machines do not sufficiently mitigate against RET\n  mispredictions when doing a VM Exit therefore an additional RSB,\n  one-entry stuffing is needed\"\n\n* tag 'x86_bugs_pbrsb' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/speculation: Add LFENCE to RSB fill sequence\n  x86/speculation: Add RSB VM Exit protections",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5318b987fe9f3430adb0f5d81d07052fd996835b"
        },
        {
          "sha": "15886321a426c7f4f1a0ff788f5b48e49230c0f3",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'm68knommu-for-v5.20' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu\n\nPull m68knommu fixes from Greg Ungerer:\n\n - spelling in comment\n\n - compilation when flexcan driver enabled\n\n - sparse warning\n\n* tag 'm68knommu-for-v5.20' of git://git.kernel.org/pub/scm/linux/kernel/git/gerg/m68knommu:\n  m68k: Fix syntax errors in comments\n  m68k: coldfire: make symbol m523x_clk_lookup static\n  m68k: coldfire/device.c: protect FLEXCAN blocks",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/15886321a426c7f4f1a0ff788f5b48e49230c0f3"
        },
        {
          "sha": "b8dcef877ab5f2637fccd3efb6fe169c8211961a",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'memblock-v5.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rppt/memblock\n\nPull memblock updates from Mike Rapoport:\n\n - An optimization in memblock_add_range() to reduce array traversals\n\n - Improvements to the memblock test suite\n\n* tag 'memblock-v5.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rppt/memblock:\n  memblock test: Modify the obsolete description in README\n  memblock tests: fix compilation errors\n  memblock tests: change build options to run-time options\n  memblock tests: remove completed TODO items\n  memblock tests: set memblock_debug to enable memblock_dbg() messages\n  memblock tests: add verbose output to memblock tests\n  memblock tests: Makefile: add arguments to control verbosity\n  memblock: avoid some repeat when add new range",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b8dcef877ab5f2637fccd3efb6fe169c8211961a"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-09T17:01:27Z"
  },
  {
    "id": "23329880702",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10673750984,
      "size": 46,
      "distinct_size": 46,
      "ref": "refs/heads/master",
      "head": "eb555cb5b794f4e12a9897f3d46d5a72104cd4a7",
      "before": "5d5d353bed32dc3ea52e2619e0d1c60b17133b91",
      "commits": [
        {
          "sha": "1c90b54718fdea4f89e7e0c2415803f33f6d0b00",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: remove unused ksmbd_share_configs_cleanup function\n\nremove unused ksmbd_share_configs_cleanup function.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1c90b54718fdea4f89e7e0c2415803f33f6d0b00"
        },
        {
          "sha": "8849e7545322c99c6b4fc3674b57e3117a3bd5dd",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "MAINTAINERS: ksmbd: add entry for documentation\n\nInclude Documentation/filesystems/cifs/ksmbd.rst in the ksmbd maintainers\nfile entry.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8849e7545322c99c6b4fc3674b57e3117a3bd5dd"
        },
        {
          "sha": "e4d3e6b524c0c928f7fc9e03e047885c4951ae60",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: replace sessions list in connection with xarray\n\nReplace sessions list in connection with xarray.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e4d3e6b524c0c928f7fc9e03e047885c4951ae60"
        },
        {
          "sha": "8e06b31e348107c5d78e2c90bb7e69388cb97fb6",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: add channel rwlock\n\nAdd missing rwlock for channel list in session.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8e06b31e348107c5d78e2c90bb7e69388cb97fb6"
        },
        {
          "sha": "17ea92a9f6d0b9a97aaec5ab748e4591d70a562c",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: fix kernel oops from idr_remove()\n\nThere is a report that kernel oops happen from idr_remove().\n\nkernel: BUG: kernel NULL pointer dereference, address: 0000000000000010\nkernel: RIP: 0010:idr_remove+0x1/0x20\nkernel:  __ksmbd_close_fd+0xb2/0x2d0 [ksmbd]\nkernel:  ksmbd_vfs_read+0x91/0x190 [ksmbd]\nkernel:  ksmbd_fd_put+0x29/0x40 [ksmbd]\nkernel:  smb2_read+0x210/0x390 [ksmbd]\nkernel:  __process_request+0xa4/0x180 [ksmbd]\nkernel:  __handle_ksmbd_work+0xf0/0x290 [ksmbd]\nkernel:  handle_ksmbd_work+0x2d/0x50 [ksmbd]\nkernel:  process_one_work+0x21d/0x3f0\nkernel:  worker_thread+0x50/0x3d0\nkernel:  rescuer_thread+0x390/0x390\nkernel:  kthread+0xee/0x120\nkthread_complete_and_exit+0x20/0x20\nkernel:  ret_from_fork+0x22/0x30\n\nWhile accessing files, If connection is disconnected, windows send\nsession setup request included previous session destroy. But while still\nprocessing requests on previous session, this request destroy file\ntable, which mean file table idr will be freed and set to NULL.\nSo kernel oops happen from ft->idr in __ksmbd_close_fd().\nThis patch don't directly destroy session in destroy_previous_session().\nIt just set to KSMBD_SESS_EXITING so that connection will be\nterminated after finishing the rest of requests.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/17ea92a9f6d0b9a97aaec5ab748e4591d70a562c"
        },
        {
          "sha": "a14c573870a664386adc10526a6c2648ea56dae1",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: use wait_event instead of schedule_timeout()\n\nksmbd threads eating masses of cputime when connection is disconnected.\nIf connection is disconnected, ksmbd thread waits for pending requests\nto be processed using schedule_timeout. schedule_timeout() incorrectly\nis used, and it is more efficient to use wait_event/wake_up than to check\nr_count every time with timeout.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a14c573870a664386adc10526a6c2648ea56dae1"
        },
        {
          "sha": "af7c39d971e43cd0af488729bca362427ad99488",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: fix racy issue while destroying session on multichannel\n\nAfter multi-channel connection with windows, Several channels of\nsession are connected. Among them, if there is a problem in one channel,\nWindows connects again after disconnecting the channel. In this process,\nthe session is released and a kernel oop can occurs while processing\nrequests to other channels. When the channel is disconnected, if other\nchannels still exist in the session after deleting the channel from\nthe channel list in the session, the session should not be released.\nFinally, the session will be released after all channels are disconnected.\n\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/af7c39d971e43cd0af488729bca362427ad99488"
        },
        {
          "sha": "aa7253c2393f6dcd6a1468b0792f6da76edad917",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: fix memory leak in smb2_handle_negotiate\n\nThe allocated memory didn't free under an error\npath in smb2_handle_negotiate().\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17815\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/aa7253c2393f6dcd6a1468b0792f6da76edad917"
        },
        {
          "sha": "cf6531d98190fa2cf92a6d8bbc8af0a4740a223c",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: fix use-after-free bug in smb2_tree_disconect\n\nsmb2_tree_disconnect() freed the struct ksmbd_tree_connect,\nbut it left the dangling pointer. It can be accessed\nagain under compound requests.\n\nThis bug can lead an oops looking something link:\n\n[ 1685.468014 ] BUG: KASAN: use-after-free in ksmbd_tree_conn_disconnect+0x131/0x160 [ksmbd]\n[ 1685.468068 ] Read of size 4 at addr ffff888102172180 by task kworker/1:2/4807\n...\n[ 1685.468130 ] Call Trace:\n[ 1685.468132 ]  <TASK>\n[ 1685.468135 ]  dump_stack_lvl+0x49/0x5f\n[ 1685.468141 ]  print_report.cold+0x5e/0x5cf\n[ 1685.468145 ]  ? ksmbd_tree_conn_disconnect+0x131/0x160 [ksmbd]\n[ 1685.468157 ]  kasan_report+0xaa/0x120\n[ 1685.468194 ]  ? ksmbd_tree_conn_disconnect+0x131/0x160 [ksmbd]\n[ 1685.468206 ]  __asan_report_load4_noabort+0x14/0x20\n[ 1685.468210 ]  ksmbd_tree_conn_disconnect+0x131/0x160 [ksmbd]\n[ 1685.468222 ]  smb2_tree_disconnect+0x175/0x250 [ksmbd]\n[ 1685.468235 ]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[ 1685.468247 ]  process_one_work+0x778/0x11c0\n[ 1685.468251 ]  ? _raw_spin_lock_irq+0x8e/0xe0\n[ 1685.468289 ]  worker_thread+0x544/0x1180\n[ 1685.468293 ]  ? __cpuidle_text_end+0x4/0x4\n[ 1685.468297 ]  kthread+0x282/0x320\n[ 1685.468301 ]  ? process_one_work+0x11c0/0x11c0\n[ 1685.468305 ]  ? kthread_complete_and_exit+0x30/0x30\n[ 1685.468309 ]  ret_from_fork+0x1f/0x30\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17816\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cf6531d98190fa2cf92a6d8bbc8af0a4740a223c"
        },
        {
          "sha": "ac60778b87e45576d7bfdbd6f53df902654e6f09",
          "author": {
            "email": "hyc.lee@gmail.com",
            "name": "Hyunchul Lee"
          },
          "message": "ksmbd: prevent out of bound read for SMB2_WRITE\n\nOOB read memory can be written to a file,\nif DataOffset is 0 and Length is too large\nin SMB2_WRITE request of compound request.\n\nTo prevent this, when checking the length of\nthe data area of SMB2_WRITE in smb2_get_data_area_len(),\nlet the minimum of DataOffset be the size of\nSMB2 header + the size of SMB2_WRITE header.\n\nThis bug can lead an oops looking something like:\n\n[  798.008715] BUG: KASAN: slab-out-of-bounds in copy_page_from_iter_atomic+0xd3d/0x14b0\n[  798.008724] Read of size 252 at addr ffff88800f863e90 by task kworker/0:2/2859\n...\n[  798.008754] Call Trace:\n[  798.008756]  <TASK>\n[  798.008759]  dump_stack_lvl+0x49/0x5f\n[  798.008764]  print_report.cold+0x5e/0x5cf\n[  798.008768]  ? __filemap_get_folio+0x285/0x6d0\n[  798.008774]  ? copy_page_from_iter_atomic+0xd3d/0x14b0\n[  798.008777]  kasan_report+0xaa/0x120\n[  798.008781]  ? copy_page_from_iter_atomic+0xd3d/0x14b0\n[  798.008784]  kasan_check_range+0x100/0x1e0\n[  798.008788]  memcpy+0x24/0x60\n[  798.008792]  copy_page_from_iter_atomic+0xd3d/0x14b0\n[  798.008795]  ? pagecache_get_page+0x53/0x160\n[  798.008799]  ? iov_iter_get_pages_alloc+0x1590/0x1590\n[  798.008803]  ? ext4_write_begin+0xfc0/0xfc0\n[  798.008807]  ? current_time+0x72/0x210\n[  798.008811]  generic_perform_write+0x2c8/0x530\n[  798.008816]  ? filemap_fdatawrite_wbc+0x180/0x180\n[  798.008820]  ? down_write+0xb4/0x120\n[  798.008824]  ? down_write_killable+0x130/0x130\n[  798.008829]  ext4_buffered_write_iter+0x137/0x2c0\n[  798.008833]  ext4_file_write_iter+0x40b/0x1490\n[  798.008837]  ? __fsnotify_parent+0x275/0xb20\n[  798.008842]  ? __fsnotify_update_child_dentry_flags+0x2c0/0x2c0\n[  798.008846]  ? ext4_buffered_write_iter+0x2c0/0x2c0\n[  798.008851]  __kernel_write+0x3a1/0xa70\n[  798.008855]  ? __x64_sys_preadv2+0x160/0x160\n[  798.008860]  ? security_file_permission+0x4a/0xa0\n[  798.008865]  kernel_write+0xbb/0x360\n[  798.008869]  ksmbd_vfs_write+0x27e/0xb90 [ksmbd]\n[  798.008881]  ? ksmbd_vfs_read+0x830/0x830 [ksmbd]\n[  798.008892]  ? _raw_read_unlock+0x2a/0x50\n[  798.008896]  smb2_write+0xb45/0x14e0 [ksmbd]\n[  798.008909]  ? __kasan_check_write+0x14/0x20\n[  798.008912]  ? _raw_spin_lock_bh+0xd0/0xe0\n[  798.008916]  ? smb2_read+0x15e0/0x15e0 [ksmbd]\n[  798.008927]  ? memcpy+0x4e/0x60\n[  798.008931]  ? _raw_spin_unlock+0x19/0x30\n[  798.008934]  ? ksmbd_smb2_check_message+0x16af/0x2350 [ksmbd]\n[  798.008946]  ? _raw_spin_lock_bh+0xe0/0xe0\n[  798.008950]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[  798.008962]  process_one_work+0x778/0x11c0\n[  798.008966]  ? _raw_spin_lock_irq+0x8e/0xe0\n[  798.008970]  worker_thread+0x544/0x1180\n[  798.008973]  ? __cpuidle_text_end+0x4/0x4\n[  798.008977]  kthread+0x282/0x320\n[  798.008982]  ? process_one_work+0x11c0/0x11c0\n[  798.008985]  ? kthread_complete_and_exit+0x30/0x30\n[  798.008989]  ret_from_fork+0x1f/0x30\n[  798.008995]  </TASK>\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17817\nSigned-off-by: Hyunchul Lee <hyc.lee@gmail.com>\nAcked-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ac60778b87e45576d7bfdbd6f53df902654e6f09"
        },
        {
          "sha": "824d4f64c20093275f72fc8101394d75ff6a249e",
          "author": {
            "email": "hyc.lee@gmail.com",
            "name": "Hyunchul Lee"
          },
          "message": "ksmbd: prevent out of bound read for SMB2_TREE_CONNNECT\n\nif Status is not 0 and PathLength is long,\nsmb_strndup_from_utf16 could make out of bound\nread in smb2_tree_connnect.\n\nThis bug can lead an oops looking something like:\n\n[ 1553.882047] BUG: KASAN: slab-out-of-bounds in smb_strndup_from_utf16+0x469/0x4c0 [ksmbd]\n[ 1553.882064] Read of size 2 at addr ffff88802c4eda04 by task kworker/0:2/42805\n...\n[ 1553.882095] Call Trace:\n[ 1553.882098]  <TASK>\n[ 1553.882101]  dump_stack_lvl+0x49/0x5f\n[ 1553.882107]  print_report.cold+0x5e/0x5cf\n[ 1553.882112]  ? smb_strndup_from_utf16+0x469/0x4c0 [ksmbd]\n[ 1553.882122]  kasan_report+0xaa/0x120\n[ 1553.882128]  ? smb_strndup_from_utf16+0x469/0x4c0 [ksmbd]\n[ 1553.882139]  __asan_report_load_n_noabort+0xf/0x20\n[ 1553.882143]  smb_strndup_from_utf16+0x469/0x4c0 [ksmbd]\n[ 1553.882155]  ? smb_strtoUTF16+0x3b0/0x3b0 [ksmbd]\n[ 1553.882166]  ? __kmalloc_node+0x185/0x430\n[ 1553.882171]  smb2_tree_connect+0x140/0xab0 [ksmbd]\n[ 1553.882185]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[ 1553.882197]  process_one_work+0x778/0x11c0\n[ 1553.882201]  ? _raw_spin_lock_irq+0x8e/0xe0\n[ 1553.882206]  worker_thread+0x544/0x1180\n[ 1553.882209]  ? __cpuidle_text_end+0x4/0x4\n[ 1553.882214]  kthread+0x282/0x320\n[ 1553.882218]  ? process_one_work+0x11c0/0x11c0\n[ 1553.882221]  ? kthread_complete_and_exit+0x30/0x30\n[ 1553.882225]  ret_from_fork+0x1f/0x30\n[ 1553.882231]  </TASK>\n\nThere is no need to check error request validation in server.\nThis check allow invalid requests not to validate message.\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17818\nSigned-off-by: Hyunchul Lee <hyc.lee@gmail.com>\nAcked-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/824d4f64c20093275f72fc8101394d75ff6a249e"
        },
        {
          "sha": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
          "author": {
            "email": "linkinjeon@kernel.org",
            "name": "Namjae Jeon"
          },
          "message": "ksmbd: fix heap-based overflow in set_ntacl_dacl()\n\nThe testcase use SMB2_SET_INFO_HE command to set a malformed file attribute\nunder the label `security.NTACL`. SMB2_QUERY_INFO_HE command in testcase\ntrigger the following overflow.\n\n[ 4712.003781] ==================================================================\n[ 4712.003790] BUG: KASAN: slab-out-of-bounds in build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.003807] Write of size 1060 at addr ffff88801e34c068 by task kworker/0:0/4190\n\n[ 4712.003813] CPU: 0 PID: 4190 Comm: kworker/0:0 Not tainted 5.19.0-rc5 #1\n[ 4712.003850] Workqueue: ksmbd-io handle_ksmbd_work [ksmbd]\n[ 4712.003867] Call Trace:\n[ 4712.003870]  <TASK>\n[ 4712.003873]  dump_stack_lvl+0x49/0x5f\n[ 4712.003935]  print_report.cold+0x5e/0x5cf\n[ 4712.003972]  ? ksmbd_vfs_get_sd_xattr+0x16d/0x500 [ksmbd]\n[ 4712.003984]  ? cmp_map_id+0x200/0x200\n[ 4712.003988]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004000]  kasan_report+0xaa/0x120\n[ 4712.004045]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004056]  kasan_check_range+0x100/0x1e0\n[ 4712.004060]  memcpy+0x3c/0x60\n[ 4712.004064]  build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004076]  ? parse_sec_desc+0x580/0x580 [ksmbd]\n[ 4712.004088]  ? ksmbd_acls_fattr+0x281/0x410 [ksmbd]\n[ 4712.004099]  smb2_query_info+0xa8f/0x6110 [ksmbd]\n[ 4712.004111]  ? psi_group_change+0x856/0xd70\n[ 4712.004148]  ? update_load_avg+0x1c3/0x1af0\n[ 4712.004152]  ? asym_cpu_capacity_scan+0x5d0/0x5d0\n[ 4712.004157]  ? xas_load+0x23/0x300\n[ 4712.004162]  ? smb2_query_dir+0x1530/0x1530 [ksmbd]\n[ 4712.004173]  ? _raw_spin_lock_bh+0xe0/0xe0\n[ 4712.004179]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[ 4712.004192]  process_one_work+0x778/0x11c0\n[ 4712.004227]  ? _raw_spin_lock_irq+0x8e/0xe0\n[ 4712.004231]  worker_thread+0x544/0x1180\n[ 4712.004234]  ? __cpuidle_text_end+0x4/0x4\n[ 4712.004239]  kthread+0x282/0x320\n[ 4712.004243]  ? process_one_work+0x11c0/0x11c0\n[ 4712.004246]  ? kthread_complete_and_exit+0x30/0x30\n[ 4712.004282]  ret_from_fork+0x1f/0x30\n\nThis patch add the buffer validation for security descriptor that is\nstored by malformed SMB2_SET_INFO_HE command. and allocate large\nresponse buffer about SMB2_O_INFO_SECURITY file info class.\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17771\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8f0541186e9ad1b62accc9519cc2b7a7240272a7"
        },
        {
          "sha": "fcb14cb1bdacec5b4374fe161e83fb8208164a85",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "new iov_iter flavour - ITER_UBUF\n\nEquivalent of single-segment iovec.  Initialized by iov_iter_ubuf(),\nchecked for by iter_is_ubuf(), otherwise behaves like ITER_IOVEC\nones.\n\nWe are going to expose the things like ->write_iter() et.al. to those\nin subsequent commits.\n\nNew predicate (user_backed_iter()) that is true for ITER_IOVEC and\nITER_UBUF; places like direct-IO handling should use that for\nchecking that pages we modify after getting them from iov_iter_get_pages()\nwould need to be dirtied.\n\nDO NOT assume that replacing iter_is_iovec() with user_backed_iter()\nwill solve all problems - there's code that uses iter_is_iovec() to\ndecide how to poke around in iov_iter guts and for that the predicate\nreplacement obviously won't suffice.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fcb14cb1bdacec5b4374fe161e83fb8208164a85"
        },
        {
          "sha": "3e20a751aff0e099cff496511fef8cdf655b3360",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "switch new_sync_{read,write}() to ITER_UBUF\n\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3e20a751aff0e099cff496511fef8cdf655b3360"
        },
        {
          "sha": "0d9649341363047be60a9ec7378d8985bdd0abba",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "splice: stop abusing iov_iter_advance() to flush a pipe\n\nUse pipe_discard_from() explicitly in generic_file_read_iter(); don't bother\nwith rather non-obvious use of iov_iter_advance() in there.\n\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0d9649341363047be60a9ec7378d8985bdd0abba"
        },
        {
          "sha": "2dcedb2a549a4d7430538213b1b28ef7271bc0aa",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "ITER_PIPE: helper for getting pipe buffer by index\n\npipe_buffer instances of a pipe are organized as a ring buffer,\nwith power-of-2 size.  Indices are kept *not* reduced modulo ring\nsize, so the buffer refered to by index N is\n\tpipe->bufs[N & (pipe->ring_size - 1)].\n\nRing size can change over the lifetime of a pipe, but not while\nthe pipe is locked.  So for any iov_iter primitives it's a constant.\nOriginal conversion of pipes to this layout went overboard trying\nto microoptimize that - calculating pipe->ring_size - 1, storing\nit in a local variable and using through the function.  In some\ncases it might be warranted, but most of the times it only\nobfuscates what's going on in there.\n\nIntroduce a helper (pipe_buf(pipe, N)) that would encapsulate\nthat and use it in the obvious cases.  More will follow...\n\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2dcedb2a549a4d7430538213b1b28ef7271bc0aa"
        },
        {
          "sha": "47b7fcae419dc940e3fb8e58088a5b80ad813bbf",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "ITER_PIPE: helpers for adding pipe buffers\n\nThere are only two kinds of pipe_buffer in the area used by ITER_PIPE.\n\n1) anonymous - copy_to_iter() et.al. end up creating those and copying\ndata there.  They have zero ->offset, and their ->ops points to\ndefault_pipe_page_ops.\n\n2) zero-copy ones - those come from copy_page_to_iter(), and page\ncomes from caller.  ->offset is also caller-supplied - it might be\nnon-zero.  ->ops points to page_cache_pipe_buf_ops.\n\nMove creation and insertion of those into helpers - push_anon(pipe, size)\nand push_page(pipe, page, offset, size) resp., separating them from\nthe \"could we avoid creating a new buffer by merging with the current\nhead?\" logics.\n\nAcked-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/47b7fcae419dc940e3fb8e58088a5b80ad813bbf"
        },
        {
          "sha": "8fad7767edcfd3f93e0d9985cb2dc1db270b8719",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "ITER_PIPE: allocate buffers as we go in copy-to-pipe primitives\n\nNew helper: append_pipe().  Extends the last buffer if possible,\nallocates a new one otherwise.  Returns page and offset in it\non success, NULL on failure.  iov_iter is advanced past the\ndata we've got.\n\nUse that instead of push_pipe() in copy-to-pipe primitives;\nthey get simpler that way.  Handling of short copy (in \"mc\" one)\nis done simply by iov_iter_revert() - iov_iter is in consistent\nstate after that one, so we can use that.\n\n[Fix for braino caught by Liu Xinpeng <liuxp11@chinatelecom.cn> folded in]\n[another braino fix, this time in copy_pipe_to_iter() and pipe_zero();\ncaught by testcase from Hugh Dickins]\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8fad7767edcfd3f93e0d9985cb2dc1db270b8719"
        },
        {
          "sha": "e3b42964f84c028f352c11269661d47f6ca4ab2e",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "ITER_PIPE: fold push_pipe() into __pipe_get_pages()\n\n\tExpand the only remaining call of push_pipe() (in\n__pipe_get_pages()), combine it with the page-collecting loop there.\n\nNote that the only reason it's not a loop doing append_pipe() is\nthat append_pipe() is advancing, while iov_iter_get_pages() is not.\nAs soon as it switches to saner semantics, this thing will switch\nto using append_pipe().\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e3b42964f84c028f352c11269661d47f6ca4ab2e"
        },
        {
          "sha": "ca591967543ab1af7e6e68bd505ef7869d3f2175",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "ITER_PIPE: lose iter_head argument of __pipe_get_pages()\n\nit's only used to get to the partial buffer we can add to,\nand that's always the last one, i.e. pipe->head - 1.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ca591967543ab1af7e6e68bd505ef7869d3f2175"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-09T03:18:39Z"
  },
  {
    "id": "23327065154",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10672305280,
      "size": 161,
      "distinct_size": 161,
      "ref": "refs/heads/master",
      "head": "5d5d353bed32dc3ea52e2619e0d1c60b17133b91",
      "before": "c8a684e2e110376c58f0bfa30fb3855d1e319670",
      "commits": [
        {
          "sha": "4ea9496cbc959eb5c78f3e379199aca9ef4e386b",
          "author": {
            "email": "tangbin@cmss.chinamobile.com",
            "name": "Tang Bin"
          },
          "message": "opp: Fix error check in dev_pm_opp_attach_genpd()\n\ndev_pm_domain_attach_by_name() may return NULL in some cases,\nso IS_ERR() doesn't meet the requirements. Thus fix it.\n\nFixes: 6319aee10e53 (\"opp: Attach genpds to devices from within OPP core\")\nSigned-off-by: Tang Bin <tangbin@cmss.chinamobile.com>\n[ Viresh: Replace ENODATA with ENODEV ]\nSigned-off-by: Viresh Kumar <viresh.kumar@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4ea9496cbc959eb5c78f3e379199aca9ef4e386b"
        },
        {
          "sha": "617df304f3fb63db3dc37e62c3f8efbbe56427b5",
          "author": {
            "email": "yang.lee@linux.alibaba.com",
            "name": "Yang Li"
          },
          "message": "opp: Fix some kernel-doc comments\n\nMake @freq to @bw in dev_pm_opp_find_bw_ceil() and\ndev_pm_opp_find_bw_floor() kernel-doc comment to\nremove warnings found by running scripts/kernel-doc,\nwhich is caused by using 'make W=1'.\n\ndrivers/opp/core.c:753: warning: Function parameter or member 'bw' not\ndescribed in 'dev_pm_opp_find_bw_ceil'\ndrivers/opp/core.c:753: warning: Excess function parameter 'freq'\ndescription in 'dev_pm_opp_find_bw_ceil'\ndrivers/opp/core.c:812: warning: Function parameter or member 'bw' not\ndescribed in 'dev_pm_opp_find_bw_floor'\ndrivers/opp/core.c:812: warning: Excess function parameter 'freq'\ndescription in 'dev_pm_opp_find_bw_floor'\n\nReported-by: Abaci Robot <abaci@linux.alibaba.com>\nSigned-off-by: Yang Li <yang.lee@linux.alibaba.com>\nSigned-off-by: Viresh Kumar <viresh.kumar@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/617df304f3fb63db3dc37e62c3f8efbbe56427b5"
        },
        {
          "sha": "9bfb1ffff1972291738b4288e7653ba7ea3c24fa",
          "author": {
            "email": "viresh.kumar@linaro.org",
            "name": "Viresh Kumar"
          },
          "message": "OPP: Fix typo in comment\n\nReplace rate with state.\n\nSigned-off-by: Viresh Kumar <viresh.kumar@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9bfb1ffff1972291738b4288e7653ba7ea3c24fa"
        },
        {
          "sha": "0a43452bb6b1f499b695b123e9fedf4b1a9bbf64",
          "author": {
            "email": "viresh.kumar@linaro.org",
            "name": "Viresh Kumar"
          },
          "message": "OPP: Track if clock name is configured by platform\n\nTrack if the clock name is configured by the platform or not. This is a\npreparatory change and will be used by later commits. This also makes\nthe behavior of the clkname API similar to other ones, which allow\nrepeated calls to the same API for each CPU.\n\nSigned-off-by: Viresh Kumar <viresh.kumar@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0a43452bb6b1f499b695b123e9fedf4b1a9bbf64"
        },
        {
          "sha": "abe13e9a561d6b3e82b21362c0d6dd3ecd8a5b13",
          "author": {
            "email": "shengjiu.wang@nxp.com",
            "name": "Shengjiu Wang"
          },
          "message": "rpmsg: char: Add mutex protection for rpmsg_eptdev_open()\n\nThere is no mutex protection for rpmsg_eptdev_open(),\nespecially for eptdev->ept read and write operation.\nIt may cause issues when multiple instances call\nrpmsg_eptdev_open() in parallel,the return state\nmay be success or EBUSY.\n\nFixes: 964e8bedd5a1 (\"rpmsg: char: Return an error if device already open\")\nSigned-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>\nLink: https://lore.kernel.org/r/1653104105-16779-1-git-send-email-shengjiu.wang@nxp.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/abe13e9a561d6b3e82b21362c0d6dd3ecd8a5b13"
        },
        {
          "sha": "353d9214682e65c55cdffad8c82139a3321c5f13",
          "author": {
            "email": "angelogioacchino.delregno@collabora.com",
            "name": "AngeloGioacchino Del Regno"
          },
          "message": "rpmsg: mtk_rpmsg: Fix circular locking dependency\n\nDuring execution of the worker that's used to register rpmsg devices\nwe are safely locking the channels mutex but, when creating a new\nendpoint for such devices, we are registering a IPI on the SCP, which\nthen makes the SCP to trigger an interrupt, lock its own mutex and in\nturn register more subdevices.\nThis creates a circular locking dependency situation, as the mtk_rpmsg\nchannels_lock will then depend on the SCP IPI lock.\n\n[   15.447736] ======================================================\n[   15.460158] WARNING: possible circular locking dependency detected\n[   15.460161] 5.17.0-next-20220324+ #399 Not tainted\n[   15.460165] ------------------------------------------------------\n[   15.460166] kworker/0:3/155 is trying to acquire lock:\n[   15.460170] ffff5b4d0eaf1308 (&scp->ipi_desc[i].lock){+.+.}-{4:4}, at: scp_ipi_lock+0x34/0x50 [mtk_scp_ipi]\n[   15.504958]\n[]                but task is already holding lock:\n[   15.504960] ffff5b4d0e8f1918 (&mtk_subdev->channels_lock){+.+.}-{4:4}, at: mtk_register_device_work_function+0x50/0x1cc [mtk_rpmsg]\n[   15.504978]\n[]                which lock already depends on the new lock.\n\n[   15.504980]\n[]                the existing dependency chain (in reverse order) is:\n[   15.504982]\n[]               -> #1 (&mtk_subdev->channels_lock){+.+.}-{4:4}:\n[   15.504990]        lock_acquire+0x68/0x84\n[   15.504999]        __mutex_lock+0xa4/0x3e0\n[   15.505007]        mutex_lock_nested+0x40/0x70\n[   15.505012]        mtk_rpmsg_ns_cb+0xe4/0x134 [mtk_rpmsg]\n[   15.641684]        mtk_rpmsg_ipi_handler+0x38/0x64 [mtk_rpmsg]\n[   15.641693]        scp_ipi_handler+0xbc/0x180 [mtk_scp]\n[   15.663905]        mt8192_scp_irq_handler+0x44/0xa4 [mtk_scp]\n[   15.663915]        scp_irq_handler+0x6c/0xa0 [mtk_scp]\n[   15.685779]        irq_thread_fn+0x34/0xa0\n[   15.685785]        irq_thread+0x18c/0x240\n[   15.685789]        kthread+0x104/0x110\n[   15.709579]        ret_from_fork+0x10/0x20\n[   15.709586]\n[]               -> #0 (&scp->ipi_desc[i].lock){+.+.}-{4:4}:\n[   15.731271]        __lock_acquire+0x11e4/0x1910\n[   15.740367]        lock_acquire.part.0+0xd8/0x220\n[   15.749813]        lock_acquire+0x68/0x84\n[   15.757861]        __mutex_lock+0xa4/0x3e0\n[   15.766084]        mutex_lock_nested+0x40/0x70\n[   15.775006]        scp_ipi_lock+0x34/0x50 [mtk_scp_ipi]\n[   15.785503]        scp_ipi_register+0x40/0xa4 [mtk_scp_ipi]\n[   15.796697]        scp_register_ipi+0x1c/0x30 [mtk_scp]\n[   15.807194]        mtk_rpmsg_create_ept+0xa0/0x108 [mtk_rpmsg]\n[   15.818912]        rpmsg_create_ept+0x44/0x60\n[   15.827660]        cros_ec_rpmsg_probe+0x15c/0x1f0\n[   15.837282]        rpmsg_dev_probe+0x128/0x1d0\n[   15.846203]        really_probe.part.0+0xa4/0x2a0\n[   15.855649]        __driver_probe_device+0xa0/0x150\n[   15.865443]        driver_probe_device+0x48/0x150\n[   15.877157]        __device_attach_driver+0xc0/0x12c\n[   15.889359]        bus_for_each_drv+0x80/0xe0\n[   15.900330]        __device_attach+0xe4/0x190\n[   15.911303]        device_initial_probe+0x1c/0x2c\n[   15.922969]        bus_probe_device+0xa8/0xb0\n[   15.933927]        device_add+0x3a8/0x8a0\n[   15.944193]        device_register+0x28/0x40\n[   15.954970]        rpmsg_register_device+0x5c/0xa0\n[   15.966782]        mtk_register_device_work_function+0x148/0x1cc [mtk_rpmsg]\n[   15.983146]        process_one_work+0x294/0x664\n[   15.994458]        worker_thread+0x7c/0x45c\n[   16.005069]        kthread+0x104/0x110\n[   16.014789]        ret_from_fork+0x10/0x20\n[   16.025201]\n[]               other info that might help us debug this:\n\n[   16.047769]  Possible unsafe locking scenario:\n\n[   16.063942]        CPU0                    CPU1\n[   16.075166]        ----                    ----\n[   16.086376]   lock(&mtk_subdev->channels_lock);\n[   16.097592]                                lock(&scp->ipi_desc[i].lock);\n[   16.113188]                                lock(&mtk_subdev->channels_lock);\n[   16.129482]   lock(&scp->ipi_desc[i].lock);\n[   16.140020]\n[]                *** DEADLOCK ***\n\n[   16.158282] 4 locks held by kworker/0:3/155:\n[   16.168978]  #0: ffff5b4d00008748 ((wq_completion)events){+.+.}-{0:0}, at: process_one_work+0x1fc/0x664\n[   16.190017]  #1: ffff80000953bdc8 ((work_completion)(&mtk_subdev->register_work)){+.+.}-{0:0}, at: process_one_work+0x1fc/0x664\n[   16.215269]  #2: ffff5b4d0e8f1918 (&mtk_subdev->channels_lock){+.+.}-{4:4}, at: mtk_register_device_work_function+0x50/0x1cc [mtk_rpmsg]\n[   16.242131]  #3: ffff5b4d05964190 (&dev->mutex){....}-{4:4}, at: __device_attach+0x44/0x190\n\nTo solve this, simply unlock the channels_lock mutex before calling\nmtk_rpmsg_register_device() and relock it right after, as safety is\nstill ensured by the locking mechanism that happens right after\nthrough SCP.\n\nFixes: 7017996951fd (\"rpmsg: add rpmsg support for mt8183 SCP.\")\nSigned-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>\nLink: https://lore.kernel.org/r/20220525091201.14210-1-angelogioacchino.delregno@collabora.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/353d9214682e65c55cdffad8c82139a3321c5f13"
        },
        {
          "sha": "fa220c05d282e7479abe08b54e3bdffd06c25e97",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "remoteproc: k3-r5: Fix refcount leak in k3_r5_cluster_of_init\n\nEvery iteration of for_each_available_child_of_node() decrements\nthe reference count of the previous node.\nWhen breaking early from a for_each_available_child_of_node() loop,\nwe need to explicitly call of_node_put() on the child node.\nAdd missing of_node_put() to avoid refcount leak.\n\nFixes: 6dedbd1d5443 (\"remoteproc: k3-r5: Add a remoteproc driver for R5F subsystem\")\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nAcked-by: Suman Anna <s-anna@ti.com>\nLink: https://lore.kernel.org/r/20220605083334.23942-1-linmq006@gmail.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fa220c05d282e7479abe08b54e3bdffd06c25e97"
        },
        {
          "sha": "2d1ea19f179be04f303be96129afa62545d3121e",
          "author": {
            "email": "wangxiang@cdjrlc.com",
            "name": "Xiang wangx"
          },
          "message": "remoteproc: omap_remoteproc: Fix typo in comment\n\nDelete the redundant word 'The'.\nDelete the redundant word 'to'.\n\nSigned-off-by: Xiang wangx <wangxiang@cdjrlc.com>\nLink: https://lore.kernel.org/r/20220608130406.46005-1-wangxiang@cdjrlc.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2d1ea19f179be04f303be96129afa62545d3121e"
        },
        {
          "sha": "61afafe8b938bc74841cf4b1a73dd08b9d287c5a",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "remoteproc: imx_rproc: Fix refcount leak in imx_rproc_addr_init\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not needed anymore.\nThis function has two paths missing of_node_put().\n\nFixes: 6e962bfe56b9 (\"remoteproc: imx_rproc: add missing of_node_put\")\nFixes: a0ff4aa6f010 (\"remoteproc: imx_rproc: add a NXP/Freescale imx_rproc driver\")\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nLink: https://lore.kernel.org/r/20220512045558.7142-1-linmq006@gmail.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/61afafe8b938bc74841cf4b1a73dd08b9d287c5a"
        },
        {
          "sha": "e61c451476e61450f6771ce03bbc01210a09be16",
          "author": {
            "email": "mark-pk.tsai@mediatek.com",
            "name": "Mark-PK Tsai"
          },
          "message": "dma-mapping: Add dma_release_coherent_memory to DMA API\n\nAdd dma_release_coherent_memory to DMA API to allow dma\nuser call it to release dev->dma_mem when the device is\nremoved.\n\nSigned-off-by: Mark-PK Tsai <mark-pk.tsai@mediatek.com>\nAcked-by: Christoph Hellwig <hch@lst.de>\nLink: https://lore.kernel.org/r/20220422062436.14384-2-mark-pk.tsai@mediatek.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e61c451476e61450f6771ce03bbc01210a09be16"
        },
        {
          "sha": "1404acbb7f68dc0a708091240e75efa5e09b0894",
          "author": {
            "email": "mark-pk.tsai@mediatek.com",
            "name": "Mark-PK Tsai"
          },
          "message": "remoteproc: Fix dma_mem leak after rproc_shutdown\n\nRelease dma coherent memory before rvdev is free in\nrproc_rvdev_release().\n\nBelow is the kmemleak report:\nunreferenced object 0xffffff8051c1a980 (size 128):\n  comm \"sh\", pid 4895, jiffies 4295026604 (age 15481.896s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<000000003a0f3ec0>] dma_declare_coherent_memory+0x44/0x11c\n    [<00000000ad243164>] rproc_add_virtio_dev+0xb8/0x20c\n    [<00000000d219c8e9>] rproc_vdev_do_start+0x18/0x24\n    [<00000000e694b468>] rproc_start+0x22c/0x3e0\n    [<000000000b938941>] rproc_boot+0x4a4/0x860\n    [<000000003c4dc532>] state_store.52856+0x10c/0x1b8\n    [<00000000df2297ac>] dev_attr_store+0x34/0x84\n    [<0000000083a53bdb>] sysfs_kf_write+0x60/0xbc\n    [<000000008ed830df>] kernfs_fop_write+0x198/0x458\n    [<0000000072b9ad06>] __vfs_write+0x50/0x210\n    [<00000000377d7469>] vfs_write+0xe4/0x1a8\n    [<00000000c3fc594e>] ksys_write+0x78/0x144\n    [<000000009aef6f4b>] __arm64_sys_write+0x1c/0x28\n    [<0000000003496a98>] el0_svc_common+0xc8/0x22c\n    [<00000000ea3fe7a3>] el0_svc_compat_handler+0x1c/0x28\n    [<00000000d1a85a4e>] el0_svc_compat+0x8/0x24\n\nSigned-off-by: Mark-PK Tsai <mark-pk.tsai@mediatek.com>\nAcked-by: Christoph Hellwig <hch@lst.de>\nLink: https://lore.kernel.org/r/20220422062436.14384-3-mark-pk.tsai@mediatek.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1404acbb7f68dc0a708091240e75efa5e09b0894"
        },
        {
          "sha": "416b992b05c94cd691a1909f10e333f02cb81e56",
          "author": {
            "email": "arnaud.pouliquen@foss.st.com",
            "name": "Arnaud Pouliquen"
          },
          "message": "rpmsg: Fix parameter naming for announce_create/destroy ops\n\nThe parameter associated to the announce_create and\nannounce_destroy ops functions is not an endpoint but a rpmsg device.\n\nSigned-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>\nLink: https://lore.kernel.org/r/20220425071723.774050-1-arnaud.pouliquen@foss.st.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/416b992b05c94cd691a1909f10e333f02cb81e56"
        },
        {
          "sha": "d7bd416d35121c95fe47330e09a5c04adbc5f928",
          "author": {
            "email": "hbh25y@gmail.com",
            "name": "Hangyu Hua"
          },
          "message": "rpmsg: Fix possible refcount leak in rpmsg_register_device_override()\n\nrpmsg_register_device_override need to call put_device to free vch when\ndriver_set_override fails.\n\nFix this by adding a put_device() to the error path.\n\nFixes: bb17d110cbf2 (\"rpmsg: Fix calling device_lock() on non-initialized device\")\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nSigned-off-by: Hangyu Hua <hbh25y@gmail.com>\nLink: https://lore.kernel.org/r/20220624024120.11576-1-hbh25y@gmail.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d7bd416d35121c95fe47330e09a5c04adbc5f928"
        },
        {
          "sha": "99de6509c4135f1d1ceb98c42fa02d249b28b40f",
          "author": {
            "email": "farooqui_saud@hotmail.com",
            "name": "Saud Farooqui"
          },
          "message": "rpmsg: Strcpy is not safe, use strscpy_pad() instead\n\nReplace strcpy() with strscpy_pad() for copying the rpmsg\ndevice name in rpmsg_register_device_override().\n\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Saud Farooqui <farooqui_saud@hotmail.com>\nLink: https://lore.kernel.org/r/PA4P189MB14210AA95DCA3715AFA7F4A68BB59@PA4P189MB1421.EURP189.PROD.OUTLOOK.COM\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/99de6509c4135f1d1ceb98c42fa02d249b28b40f"
        },
        {
          "sha": "50d6281ce9b8412f7ef02d1bc9d23aa62ae0cf98",
          "author": {
            "email": "renzhijie2@huawei.com",
            "name": "Ren Zhijie"
          },
          "message": "dma-mapping: Fix build error unused-value\n\nIf CONFIG_DMA_DECLARE_COHERENT is not set,\nmake ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- will be failed, like this:\n\ndrivers/remoteproc/remoteproc_core.c: In function ‘rproc_rvdev_release’:\n./include/linux/dma-map-ops.h:182:42: error: statement with no effect [-Werror=unused-value]\n #define dma_release_coherent_memory(dev) (0)\n                                          ^\ndrivers/remoteproc/remoteproc_core.c:464:2: note: in expansion of macro ‘dma_release_coherent_memory’\n  dma_release_coherent_memory(dev);\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~~\ncc1: all warnings being treated as errors\n\nThe return type of function dma_release_coherent_memory in CONFIG_DMA_DECLARE_COHERENT area is void, so in !CONFIG_DMA_DECLARE_COHERENT area it should neither return any value nor be defined as zero.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: e61c451476e6 (\"dma-mapping: Add dma_release_coherent_memory to DMA API\")\nSigned-off-by: Ren Zhijie <renzhijie2@huawei.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nLink: https://lore.kernel.org/r/20220630123528.251181-1-renzhijie2@huawei.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/50d6281ce9b8412f7ef02d1bc9d23aa62ae0cf98"
        },
        {
          "sha": "54439d20c027f17ff022e828cb0c05b25ee2d124",
          "author": {
            "email": "allen-kh.cheng@mediatek.com",
            "name": "Allen-KH Cheng"
          },
          "message": "remoteproc: mediatek: Enable cache for mt8186 SCP\n\nThis patch is for enabling cache in SCP. There is not enough space\non the SRAM of SCP. We need to run programs in DRAM. The DRAM power\nand latency is much larger than SRAM, so cache is used to mitigate\nthe negative effects for performance. We set SCP registers for cache\nsize before loading SCP FW. (8KB+8KB) and also adjust ipi_buf_offset\nin SRAM from 0x7bdb0 to 0x3bdb0 for enabling cache.\n\nSigned-off-by: Allen-KH Cheng <allen-kh.cheng@mediatek.com>\nTested-by: TingHan Shen <tinghan.shen@mediatek.com>\nReviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>\nLink: https://lore.kernel.org/r/20220701121229.22756-2-allen-kh.cheng@mediatek.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/54439d20c027f17ff022e828cb0c05b25ee2d124"
        },
        {
          "sha": "10f003b4e631e9a51ade3935549db89c0ebf263c",
          "author": {
            "email": "kishon@ti.com",
            "name": "Kishon Vijay Abraham I"
          },
          "message": "dt-bindings: remoteproc: pru: Re-arrange \"compatible\" in alphabetic order\n\nRe-arrange \"compatible\" string in alphabetic order to decrease the\nchance of conflicts.\n\nSigned-off-by: Kishon Vijay Abraham I <kishon@ti.com>\nAcked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nLink: https://lore.kernel.org/r/20220602101920.12504-2-kishon@ti.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/10f003b4e631e9a51ade3935549db89c0ebf263c"
        },
        {
          "sha": "ca63e3d8f65409a0940d945a7ee2ae49b4b32898",
          "author": {
            "email": "kishon@ti.com",
            "name": "Kishon Vijay Abraham I"
          },
          "message": "dt-bindings: remoteproc: pru: Update bindings for K3 AM62x SoCs\n\nUpdate the PRU remoteproc bindings for the PRU cores on AM62x SoCs.\n\nSigned-off-by: Kishon Vijay Abraham I <kishon@ti.com>\nAcked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nLink: https://lore.kernel.org/r/20220602101920.12504-3-kishon@ti.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ca63e3d8f65409a0940d945a7ee2ae49b4b32898"
        },
        {
          "sha": "aa0cec248c37e44ac2871261bcac05598f35a7dd",
          "author": {
            "email": "kishon@ti.com",
            "name": "Kishon Vijay Abraham I"
          },
          "message": "remoteproc: pru: Add support for various PRU cores on K3 AM62x SoCs\n\nThe K3 AM62x family of SoC has one PRUSS-M instance and it has two\nProgrammable Real-Time Units (PRU0 and PRU1). This does not support\nIndustrial Communications Subsystem features like Ethernet.\n\nEnhance the existing PRU remoteproc driver to support the PRU cores\nby using specific compatibles. The initial names for the firmware\nimages for each PRU core are retrieved from DT nodes, and can be adjusted\nthrough sysfs if required.\n\nSigned-off-by: Kishon Vijay Abraham I <kishon@ti.com>\nLink: https://lore.kernel.org/r/20220602101920.12504-4-kishon@ti.com\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/aa0cec248c37e44ac2871261bcac05598f35a7dd"
        },
        {
          "sha": "8f69d59b05f9d07e8799ad1ae6c20d4d79134643",
          "author": {
            "email": "krzysztof.kozlowski@linaro.org",
            "name": "Krzysztof Kozlowski"
          },
          "message": "dt-bindings: remoteproc: remove unneeded ref for names\n\nThe core schema already sets a 'ref' for properties ending with 'names'.\n\nSigned-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nAcked-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>\nLink: https://lore.kernel.org/r/20220517070113.18023-3-krzysztof.kozlowski@linaro.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8f69d59b05f9d07e8799ad1ae6c20d4d79134643"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-08T22:35:54Z"
  },
  {
    "id": "23323461373",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10670567272,
      "size": 271,
      "distinct_size": 271,
      "ref": "refs/heads/master",
      "head": "c8a684e2e110376c58f0bfa30fb3855d1e319670",
      "before": "3466f49dd0dd9d30fe1e916b49fca1f4f99a3b66",
      "commits": [
        {
          "sha": "da1bb4ed23564f2937a4a3fa8d5ccdd0c167fe6a",
          "author": {
            "email": "Julia.Lawall@inria.fr",
            "name": "Julia Lawall"
          },
          "message": "tty: fix typos in comments\n\nSpelling mistakes (triple letters) in comments.\nDetected with the help of Coccinelle.\n\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>\nLink: https://lore.kernel.org/r/20220521111145.81697-95-Julia.Lawall@inria.fr\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/da1bb4ed23564f2937a4a3fa8d5ccdd0c167fe6a"
        },
        {
          "sha": "d93e612d13baabe76a8f414aa5dfc5726d4845da",
          "author": {
            "email": "Julia.Lawall@inria.fr",
            "name": "Julia Lawall"
          },
          "message": "serial: tegra: fix typos in comments\n\nSpelling mistakes (triple letters) in comments.\nDetected with the help of Coccinelle.\n\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>\nLink: https://lore.kernel.org/r/20220521111145.81697-23-Julia.Lawall@inria.fr\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d93e612d13baabe76a8f414aa5dfc5726d4845da"
        },
        {
          "sha": "6f3cdf2bf1ba9b70de6c2921a415951a0d59873b",
          "author": {
            "email": "yangyingliang@huawei.com",
            "name": "Yang Yingliang"
          },
          "message": "serial: pic32: fix missing clk_disable_unprepare() on error in pic32_uart_startup()\n\nFix the missing clk_disable_unprepare() before return\nfrom pic32_uart_startup() in the error handling case.\n\nFixes: 157b9394709e (\"serial: pic32_uart: Add PIC32 UART driver\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nReviewed-by: Jiri Slaby <jirislaby@kernel.org>\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\nLink: https://lore.kernel.org/r/20220525021204.2407631-1-yangyingliang@huawei.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6f3cdf2bf1ba9b70de6c2921a415951a0d59873b"
        },
        {
          "sha": "22b10b33b9c6e76bc08f64e52862e68c4dc76052",
          "author": {
            "email": "angelogioacchino.delregno@collabora.com",
            "name": "AngeloGioacchino Del Regno"
          },
          "message": "dt-bindings: serial: mtk-uart: Convert txt to json-schema\n\nConvert the mtk-uart documentation from freeform text to a json-schema.\n\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nSigned-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>\nLink: https://lore.kernel.org/r/20220524115019.97246-1-angelogioacchino.delregno@collabora.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/22b10b33b9c6e76bc08f64e52862e68c4dc76052"
        },
        {
          "sha": "7fd6c24bae8fff0c12c61bc69388d9f3c045ce21",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "serial: pmac_zilog: remove unused header\n\nAfter commit a5ddc498e792 (serial: pmac_zilog: remove unfinished DBDMA\nsupport), the header is unused and can be removed. So do so.\n\nCc: Michael Ellerman <mpe@ellerman.id.au>\nCc: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nCc: Paul Mackerras <paulus@samba.org>\nSuggested-by: \"Ilpo Järvinen\" <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220602083120.22519-1-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7fd6c24bae8fff0c12c61bc69388d9f3c045ce21"
        },
        {
          "sha": "0d49ee83a450224fcd28e1dcc210f9bbef86f338",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: defkeymap.c_shipped, little unification with loadkeys\n\nloadkeys 2.4.0 currently:\n* notes the use of --unicode to the output, and\n* uses \"unsigned short\" for key_maps instead of \"ushort\".\n\nSo make our shipped file consistent with the generated output in this\nregard.\n\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220602083128.22540-1-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0d49ee83a450224fcd28e1dcc210f9bbef86f338"
        },
        {
          "sha": "5c4d7b049dce57816171ba4374cecfddd6e6faed",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: Makefile, add --unicode for loadkeys invocation\n\nFor a long time, we generate unicode tables using loadkeys. So fix\nMakefile to use that flag too.\n\nReviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220602083128.22540-2-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5c4d7b049dce57816171ba4374cecfddd6e6faed"
        },
        {
          "sha": "17945d317a523212831049147d7d9dd0fff9969f",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: use ARRAY_SIZE()\n\nThe code uses constants as bounds in loops. Use ARRAY_SIZE() with\nappropriate parameters instead. This makes the loop bounds obvious.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-1-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/17945d317a523212831049147d7d9dd0fff9969f"
        },
        {
          "sha": "4173f018aae16b6496d292c234b858241f85254f",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: rename and document struct uni_pagedir\n\nstruct uni_pagedir contains 32 unicode page directories, so the name of\nthe structure is a bit misleading. Rename the structure to uni_pagedict,\nso it looks like this:\nstruct uni_pagedict\n  -> 32 page dirs\n     -> 32 rows\n       -> 64 glyphs\n\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-2-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4173f018aae16b6496d292c234b858241f85254f"
        },
        {
          "sha": "db8f597a47127d0554f9c059a6da35f3ff34e773",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: define UNI_* macros for constants\n\nThe code uses constants for sizes of dictionary substructures on many\nplaces. Define 3 macros and use them in the code, so that loop bounds,\nlocal variables and the dictionary always match. (And the loop bounds\nare obvious now too.)\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-3-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/db8f597a47127d0554f9c059a6da35f3ff34e773"
        },
        {
          "sha": "2097dc2273a5b5254d0fad79afdedd223035b2d5",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: decrypt inverse_translate()\n\nFix invalid indentation and demystify the code by removing superfluous\n\"else\"s. The \"else\"s are unneeded as they always follow an \"if\"-true\nbranch containing a \"return\". The code is now way more readable.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-4-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2097dc2273a5b5254d0fad79afdedd223035b2d5"
        },
        {
          "sha": "0b75f7968d61566d150747512344cabaa59e54c6",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: remove extern from function decls\n\nThe extern keyword is not needed for function declarations. Remove it,\nso that the consolemap header conforms to other tty headers.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-5-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0b75f7968d61566d150747512344cabaa59e54c6"
        },
        {
          "sha": "f827c754f9b6247f4d4f9cbb508b22bff2cf8e6d",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: convert macros to static inlines\n\nThis commit changes !CONFIG_CONSOLE_TRANSLATIONS definitions to real\n(inline) functions. So the commit:\n* makes type checking much stronger,\n* removes the need of many parentheses and casts, and\n* makes the code more readable.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-6-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f827c754f9b6247f4d4f9cbb508b22bff2cf8e6d"
        },
        {
          "sha": "d9ebb906a45adc71a62aceb1e3608c847cafa660",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: make parameters of inverse_translate() saner\n\n- int use_unicode -> bool: it's used as bool at some places already, so\n  make it explicit.\n- int glyph -> u16: every caller passes a u16 in. So make it explicit\n  too. And remove a negative check from inverse_translate() as it never\n  could be negative.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-7-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d9ebb906a45adc71a62aceb1e3608c847cafa660"
        },
        {
          "sha": "e16cb6fe315821ef3148fa83892adca1f2a2e35a",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: one line = one statement\n\nSome lines combine more statements on one line. This makes the code hard\nto follow. Do it properly in the \"one line = one statement\" fashion.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-8-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e16cb6fe315821ef3148fa83892adca1f2a2e35a"
        },
        {
          "sha": "ad8a2142ba57212b73e614d5d86160a9c0ff8617",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: use | for binary addition\n\nUnicode letters are composed as a bit shifts and sums of three values.\nUse \"|\" and not \"+\" for these bit operations. The former is indeed more\nappropriate.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-9-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ad8a2142ba57212b73e614d5d86160a9c0ff8617"
        },
        {
          "sha": "9254365443f72838a276bb2d9a9935c802e3adc8",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: introduce UNI_*() macros\n\nThe code currently does shift, OR, and AND logic directly in the code.\nIt is not much obvious what happens there. Therefore define four macros\nfor that purpose and use them in the code. We use GENMASK() so that it\nis clear which bits serve what purpose:\n- UNI_GLYPH: bits  0.. 5\n- UNI_ROW:   bits  6..10\n- UNI_DIR:   bits 11..31\n\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-10-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9254365443f72838a276bb2d9a9935c802e3adc8"
        },
        {
          "sha": "32bd78fc4948471be2853ba8b5229e4e1327e13e",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: zero uni_pgdir using kcalloc()\n\nThe newly allocated p->uni_pgdir[n] is initialized to NULLs right after\na kmalloc_array() allocation. Combine these two using kcalloc().\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-11-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/32bd78fc4948471be2853ba8b5229e4e1327e13e"
        },
        {
          "sha": "acf90b4d52e6965cbc3b115a68e0f063f703719c",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: use sizeof(*pointer) instead of sizeof(type)\n\nIt is preferred to use sizeof(*pointer) instead of sizeof(type). First,\nthe type of the variable can change and one needs not change the former\n(unlike the latter). Second, the latter is error-prone due to (u16),\n(u16 *), and (u16 **) mixture here.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-12-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/acf90b4d52e6965cbc3b115a68e0f063f703719c"
        },
        {
          "sha": "6e4e8d74664a2bf46c74dfcf0d8a600acbbc4d6d",
          "author": {
            "email": "jslaby@suse.cz",
            "name": "Jiri Slaby"
          },
          "message": "tty/vt: consolemap: make con_set_unimap() more readable\n\nThe indentation was completely broken in con_set_unimap(). Reorder the\ncode using 'if (!cond) continue;'s so that the code makes sense. Not\nthat it is perfect now, but it can be followed at least. More cleanup to\ncome. And remove all those useless whitespaces at the EOLs too.\n\nReviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nLink: https://lore.kernel.org/r/20220607104946.18710-13-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6e4e8d74664a2bf46c74dfcf0d8a600acbbc4d6d"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-08T18:41:21Z"
  },
  {
    "id": "23322408284",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10670059466,
      "size": 21,
      "distinct_size": 21,
      "ref": "refs/heads/master",
      "head": "3466f49dd0dd9d30fe1e916b49fca1f4f99a3b66",
      "before": "4e23eeebb2e57f5a28b36221aa776b5a1122dde5",
      "commits": [
        {
          "sha": "0e01d176d5788f66dc64a7e61119edb56eb08339",
          "author": {
            "email": "chi.minghao@zte.com.cn",
            "name": "Minghao Chi"
          },
          "message": "hwspinlock: using pm_runtime_resume_and_get instead of pm_runtime_get_sync\n\nUsing pm_runtime_resume_and_get is more appropriate\nfor simplifing code\n\nReported-by: Zeal Robot <zealci@zte.com.cn>\nSigned-off-by: Minghao Chi <chi.minghao@zte.com.cn>\nSigned-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>\nLink: https://lore.kernel.org/r/20220418105508.2558696-1-chi.minghao@zte.com.cn",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0e01d176d5788f66dc64a7e61119edb56eb08339"
        },
        {
          "sha": "38857318692acd02353b47129bb06326528a47c0",
          "author": {
            "email": "jeremy.lefaure@netatmo.com",
            "name": "Jérémy LEFAURE"
          },
          "message": "coccinelle: Extend address test from ifaddr semantic patch to test expressions\n\nThe test of an expression's address does not necessarily represent the\nwhole condition, it may only be a part of it. Also, an expression's\naddress is likely to be non-zero in every test expression, not only in\nif statements.\n\nThis change aims at detecting an address test in more complex conditions\nand not only in if statements.\n\nSigned-off-by: Jérémy Lefaure <jeremy.lefaure@netatmo.com>\nSigned-off-by: Julia Lawall <julia.lawall@inria.fr>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/38857318692acd02353b47129bb06326528a47c0"
        },
        {
          "sha": "52be93558a9b32f5294750c1394d81e31fe11d6d",
          "author": {
            "email": "shradhagupta@linux.microsoft.com",
            "name": "Shradha Gupta"
          },
          "message": "Drivers: hv: vm_bus: Handle vmbus rescind calls after vmbus is suspended\n\nAdd a flag to indicate that the vmbus is suspended so we should ignore\nany offer message. Add a new work_queue for rescind msg, so we could drain\nit along with other offer work_queues upon suspension.\nIt was observed that in some hibernation related scenario testing, after\nvmbus_bus_suspend() we get rescind offer message for the vmbus. This would\nlead to processing of a rescind message for a channel that has already been\nsuspended.\n\nSigned-off-by: Shradha Gupta <shradhagupta@linux.microsoft.com>\nReviewed-by: Michael Kelley <mikelley@microsoft.com>\nLink: https://lore.kernel.org/r/20220711041147.GA5569@linuxonhyperv3.guj3yctzbm1etfxqx2vob5hsef.xx.internal.cloudapp.net\nSigned-off-by: Wei Liu <wei.liu@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/52be93558a9b32f5294750c1394d81e31fe11d6d"
        },
        {
          "sha": "5182fecc4be8e4ae2e3a3d744b5562a3e74bf2b4",
          "author": {
            "email": "samuel@sholland.org",
            "name": "Samuel Holland"
          },
          "message": "PCI: hv: Take a const cpumask in hv_compose_msi_req_get_cpu()\n\nThe cpumask that is passed to this function ultimately comes from\nirq_data_get_effective_affinity_mask(), which was recently changed to\nreturn a const cpumask pointer. The first level of functions handling\nthe affinity mask were updated, but not this helper function.\n\nFixes: 4d0b8298818b (\"genirq: Return a const cpumask from irq_data_get_affinity_mask\")\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Samuel Holland <samuel@sholland.org>\nReviewed-by: Michael Kelley <mikelley@microsoft.com>\nLink: https://lore.kernel.org/r/20220708004931.1672-1-samuel@sholland.org\nSigned-off-by: Wei Liu <wei.liu@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5182fecc4be8e4ae2e3a3d744b5562a3e74bf2b4"
        },
        {
          "sha": "bf28462e20b56c1d7c8dbf82367cd43ffbc8a1f1",
          "author": {
            "email": "ssengar@linux.microsoft.com",
            "name": "Saurabh Sengar"
          },
          "message": "drm/hyperv : Removing the restruction of VRAM allocation with PCI bar size\n\nThere were two different approaches getting used in this driver to\nallocate vram:\n\t1. VRAM allocation from PCI region for Gen1\n\t2. VRAM alloaction from MMIO region for Gen2\nFirst approach limilts the vram to PCI BAR size, which is 64 MB in most\nlegacy systems. This limits the maximum resolution to be restricted to\n64 MB size, and with recent conclusion on fbdev issue its concluded to have\nsimilar allocation strategy for both Gen1 and Gen2. This patch unifies\nthe Gen1 and Gen2 vram allocation strategy.\n\nSigned-off-by: Saurabh Sengar <ssengar@linux.microsoft.com>\nReviewed-by: Deepak Rawat <drawat.floss@gmail.com>\nLink: https://lore.kernel.org/r/1653143019-20032-1-git-send-email-ssengar@linux.microsoft.com\nSigned-off-by: Wei Liu <wei.liu@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bf28462e20b56c1d7c8dbf82367cd43ffbc8a1f1"
        },
        {
          "sha": "8e54fe1b0f03a89925925ed98acd2219e0c956d4",
          "author": {
            "email": "rostedt@goodmis.org",
            "name": "Steven Rostedt (Google)"
          },
          "message": "coccinelle: Remove script that checks replacing 0/1 with false/true in functions returning bool\n\nThere is nothing wrong with current code that returns 0 or 1 for a\nfunction returning bool. It is perfectly acceptable by the C standard.\n\nTo avoid churn of unwanted patches that are constantly sent to maintainers\nwho do not care about this change, remove the script that flags it as an\nissue. This issue is not worth the burden on maintainers to accept\nuseless patches.\n\nLink: https://lore.kernel.org/all/20220705073822.7276-1-jiapeng.chong@linux.alibaba.com/\nLink: https://lore.kernel.org/all/20220429075201.68581-1-jiapeng.chong@linux.alibaba.com/\nLink: https://lore.kernel.org/all/1649236467-29390-1-git-send-email-baihaowen@meizu.com/\nLink: https://lore.kernel.org/all/20220317014740.3138-1-jiapeng.chong@linux.alibaba.com/\nLink: https://lore.kernel.org/all/190b5c2f2f2fb9cc775fce8daed72bf893be48a4.1642065293.git.davidcomponentone@gmail.com/\nLink: https://lore.kernel.org/all/20211214113845.439392-1-deng.changcheng@zte.com.cn/\nLink: https://lore.kernel.org/all/20210824065735.60660-1-deng.changcheng@zte.com.cn/\nLink: https://lore.kernel.org/all/20210824064305.60081-1-deng.changcheng@zte.com.cn/\nLink: https://lore.kernel.org/all/20210824062359.59474-1-deng.changcheng@zte.com.cn/\n\nCc: Rasmus Villemoes <linux@rasmusvillemoes.dk>\nCc: Julia Lawall <Julia.Lawall@lip6.fr>\nCc: Michal Marek <mmarek@suse.cz>\nCc: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>\nSigned-off-by: Julia Lawall <julia.lawall@inria.fr>\nAcked-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>\nAcked-by: Paul Gortmaker <paul.gortmaker@windriver.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8e54fe1b0f03a89925925ed98acd2219e0c956d4"
        },
        {
          "sha": "bbd5c96850d9de535a83a3a3842dec2169cb31d1",
          "author": {
            "email": "william.xuanziyang@huawei.com",
            "name": "Ziyang Xuan"
          },
          "message": "scripts/coccinelle/free: add NULL test before dev_{put, hold} functions\n\nSince commit b37a46683739 (\"netdevice: add the case if dev is NULL\"),\nNULL check before dev_{put, hold} functions is not needed.\n\nSigned-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bbd5c96850d9de535a83a3a3842dec2169cb31d1"
        },
        {
          "sha": "cdab30b44518513003607ecfc8a22de3dbbb78ed",
          "author": {
            "email": "ansuelsmth@gmail.com",
            "name": "Christian Marangi"
          },
          "message": "hwspinlock: qcom: Add support for mmio usage to sfpb-mutex\n\nAllow sfpb-mutex to use mmio in addition to syscon.\n\nSigned-off-by: Christian Marangi <ansuelsmth@gmail.com>\nReviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>\nSigned-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>\nLink: https://lore.kernel.org/r/20220707102040.1859-1-ansuelsmth@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cdab30b44518513003607ecfc8a22de3dbbb78ed"
        },
        {
          "sha": "d180e0a1be6cea2b7436fadbd1c96aecdf3c46c7",
          "author": {
            "email": "alexander.atanasov@virtuozzo.com",
            "name": "Alexander Atanasov"
          },
          "message": "Drivers: hv: Create debugfs file with hyper-v balloon usage information\n\nAllow the guest to know how much it is ballooned by the host.\nIt is useful when debugging out of memory conditions.\n\nWhen host gets back memory from the guest it is accounted\nas used memory in the guest but the guest have no way to know\nhow much it is actually ballooned.\n\nExpose current state, flags and max possible memory to the guest.\nWhile at it - fix a 10+ years old typo.\n\nSigned-off-by: Alexander Atanasov <alexander.atanasov@virtuozzo.com>\nReviewed-by: Michael Kelley <mikelley@microsoft.com>\nLink: https://lore.kernel.org/r/20220711181825.52318-1-alexander.atanasov@virtuozzo.com\nSigned-off-by: Wei Liu <wei.liu@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d180e0a1be6cea2b7436fadbd1c96aecdf3c46c7"
        },
        {
          "sha": "d9c26e0a58b0039d1ad4340d826fe8db866e9455",
          "author": {
            "email": "chunkuang.hu@kernel.org",
            "name": "Chun-Kuang Hu"
          },
          "message": "mailbox: mtk-cmdq: Remove proprietary cmdq_task_cb\n\nrx_callback is a standard mailbox callback mechanism and could cover the\nfunction of proprietary cmdq_task_cb, so use the standard one instead of\nthe proprietary one. Client driver has changed to use standard\nrx_callback, so remove proprietary cmdq_task_cb.\n\nSigned-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>\nReviewed-by: Matthias Brugger <matthias.bgg@gmail.com>\nSigned-off-by: Jassi Brar <jaswinder.singh@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d9c26e0a58b0039d1ad4340d826fe8db866e9455"
        },
        {
          "sha": "60545466180e791827c84795e7b4828dbeb9e061",
          "author": {
            "email": "bryan.odonoghue@linaro.org",
            "name": "Bryan O'Donoghue"
          },
          "message": "dt-bindings: mailbox: qcom,apcs-kpss-global: Add syscon const for relevant entries\n\nmsm8916, msm8939, msm8953, msm8994 and qcs404 already declare or should\ndeclare syscon as they have drivers that use syscon inside of the apcs-kpss\nblock.\n\ngrep apcs arch/arm64/boot/dts/qcom/* | grep syscon\n\nAdd in the additional syscon in the documentation for the above mentioned\nparts.\n\nReviewed-by: Rob Herring <robh@kernel.org>\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nSigned-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>\nSigned-off-by: Jassi Brar <jaswinder.singh@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/60545466180e791827c84795e7b4828dbeb9e061"
        },
        {
          "sha": "095730dd4ca5fe078fd07db5be68b3026d4ae48a",
          "author": {
            "email": "peng.fan@nxp.com",
            "name": "Peng Fan"
          },
          "message": "dt-bindings: mailbox: imx-mu: add RST channel\n\ni.MX MU has a MUR bit which is to reset both the Processor B and the\nProcessor A sides of the MU module, forcing all control and status\nregisters to return to their default values (except the BHR bit in the ACR\nregister and BHRM bit in BCR register), and all internal states to be\ncleared.\n\nSigned-off-by: Peng Fan <peng.fan@nxp.com>\nReviewed-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Jassi Brar <jaswinder.singh@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/095730dd4ca5fe078fd07db5be68b3026d4ae48a"
        },
        {
          "sha": "82ab513baed5895c8b0e991557a12fd38d5f25f0",
          "author": {
            "email": "peng.fan@nxp.com",
            "name": "Peng Fan"
          },
          "message": "mailbox: imx: support RST channel\n\ni.MX generic MU supports MU-A/B reset feature.\n\nWhen stop/start remotecore, MU is not reset. So when Linux stop\nremotecore, the MU-B side BCR may contain valid configuration,\nbecause MU-B is not reset. So when linux start Mcore\nagain and notify Mcore, Mcore is not ready to handle MU interrupt\nand cause issues. So need reset MU when stop Mcore.\n\nSigned-off-by: Peng Fan <peng.fan@nxp.com>\nSigned-off-by: Jassi Brar <jaswinder.singh@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/82ab513baed5895c8b0e991557a12fd38d5f25f0"
        },
        {
          "sha": "1a607e102fe0f04491fb69c5a233aad139d9d1d6",
          "author": {
            "email": "konrad.dybcio@somainline.org",
            "name": "Konrad Dybcio"
          },
          "message": "dt-bindings: mailbox: qcom-ipcc: Add SM6375 compatible\n\nAdd a compatible for SM6375.\n\nSigned-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>\nAcked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nSigned-off-by: Jassi Brar <jaswinder.singh@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1a607e102fe0f04491fb69c5a233aad139d9d1d6"
        },
        {
          "sha": "8a8dc2b9596e6088522d30bc79306b834c681943",
          "author": {
            "email": "peng.fan@nxp.com",
            "name": "Peng Fan"
          },
          "message": "mailbox: imx: clear pending interrupts\n\nDuring MU initialization, there maybe pending GSR and RSR pending\ninterrupt, clear them to avoid unexpected kernel dump when requesting\nmailbox channel\n\nReviewed-by: Jacky Bai <ping.bai@nxp.com>\nReviewed-by: Ye Li <ye.li@nxp.com>\nSigned-off-by: Peng Fan <peng.fan@nxp.com>\nSigned-off-by: Jassi Brar <jaswinder.singh@linaro.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8a8dc2b9596e6088522d30bc79306b834c681943"
        },
        {
          "sha": "18c06cf868bc4e37b9766a91be02453c38f89745",
          "author": {
            "email": "Julia.Lawall@inria.fr",
            "name": "Julia Lawall"
          },
          "message": "coccinelle: free: add version constraint\n\nThe various functions contain a NULL check starting in v5.15.\n\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/18c06cf868bc4e37b9766a91be02453c38f89745"
        },
        {
          "sha": "f01701cec8cbb94df209e9705b97abd01c151ba1",
          "author": {
            "email": "Julia.Lawall@inria.fr",
            "name": "Julia Lawall"
          },
          "message": "update Coccinelle URL\n\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f01701cec8cbb94df209e9705b97abd01c151ba1"
        },
        {
          "sha": "cab9de71694de738323e30c2d1a1eb51a03f6265",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'coccinelle-for-5.20' of git://git.kernel.org/pub/scm/linux/kernel/git/jlawall/linux\n\nPull coccinelle semantic patch updates from Julia Lawall:\n\n - Update the semantic patches in the kernel that contain a URL for\n   Coccinelle with a URL that is currently valid (from myself).\n\n - Add a semantic patch checking for unnecessary NULL tests on dev_{put,\n   hold} functions (from Ziyang Xuan, followed bt a modification from\n   myself).\n\n - Drop a semantic patch that replaces 0/1 by booleans, as this change\n   was considered to be not worthwhile by some maintainers (from Steve\n   Rostedt).\n\n - Extend an existing semantic patch with more checks for useless tests\n   on variables addresses (from Jérémy Lefaure).\n\n* tag 'coccinelle-for-5.20' of git://git.kernel.org/pub/scm/linux/kernel/git/jlawall/linux:\n  update Coccinelle URL\n  coccinelle: free: add version constraint\n  scripts/coccinelle/free: add NULL test before dev_{put, hold} functions\n  coccinelle: Remove script that checks replacing 0/1 with false/true in functions returning bool\n  coccinelle: Extend address test from ifaddr semantic patch to test expressions",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cab9de71694de738323e30c2d1a1eb51a03f6265"
        },
        {
          "sha": "df7a456e7d1d7511b2c373dc1099cecfea093858",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'hyperv-next-signed-20220807' of git://git.kernel.org/pub/scm/linux/kernel/git/hyperv/linux\n\nPull hyperv updates from Wei Liu:\n \"A few miscellaneous patches. There is no large patch series for this\n  merge window\"\n\n* tag 'hyperv-next-signed-20220807' of git://git.kernel.org/pub/scm/linux/kernel/git/hyperv/linux:\n  Drivers: hv: Create debugfs file with hyper-v balloon usage information\n  drm/hyperv : Removing the restruction of VRAM allocation with PCI bar size\n  PCI: hv: Take a const cpumask in hv_compose_msi_req_get_cpu()\n  Drivers: hv: vm_bus: Handle vmbus rescind calls after vmbus is suspended",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/df7a456e7d1d7511b2c373dc1099cecfea093858"
        },
        {
          "sha": "92ceebf920aa9f103b89d102f98fc59c6b990cc0",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'mailbox-v5.20' of git://git.linaro.org/landing-teams/working/fujitsu/integration\n\nPull mailbox updates from Jassi Brar:\n\n - mtk:\n     - use rx_callback instead of cmdq_task_cb\n\n - qcom:\n     - add syscon const\n     - add SM6375 compatible\n\n - imx:\n     - enable RST channel\n     - clear pending irqs\n\n* tag 'mailbox-v5.20' of git://git.linaro.org/landing-teams/working/fujitsu/integration:\n  mailbox: imx: clear pending interrupts\n  dt-bindings: mailbox: qcom-ipcc: Add SM6375 compatible\n  mailbox: imx: support RST channel\n  dt-bindings: mailbox: imx-mu: add RST channel\n  dt-bindings: mailbox: qcom,apcs-kpss-global: Add syscon const for relevant entries\n  mailbox: mtk-cmdq: Remove proprietary cmdq_task_cb",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/92ceebf920aa9f103b89d102f98fc59c6b990cc0"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-08T17:40:07Z"
  },
  {
    "id": "23305910454",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10662093897,
      "size": 1,
      "distinct_size": 1,
      "ref": "refs/heads/master",
      "head": "4e23eeebb2e57f5a28b36221aa776b5a1122dde5",
      "before": "1ab9250751ee91b0ca7bee887894fccfd44ff26a",
      "commits": [
        {
          "sha": "4e23eeebb2e57f5a28b36221aa776b5a1122dde5",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'bitmap-6.0-rc1' of https://github.com/norov/linux\n\nPull bitmap updates from Yury Norov:\n\n - fix the duplicated comments on bitmap_to_arr64() (Qu Wenruo)\n\n - optimize out non-atomic bitops on compile-time constants (Alexander\n   Lobakin)\n\n - cleanup bitmap-related headers (Yury Norov)\n\n - x86/olpc: fix 'logical not is only applied to the left hand side'\n   (Alexander Lobakin)\n\n - lib/nodemask: inline wrappers around bitmap (Yury Norov)\n\n* tag 'bitmap-6.0-rc1' of https://github.com/norov/linux: (26 commits)\n  lib/nodemask: inline next_node_in() and node_random()\n  powerpc: drop dependency on <asm/machdep.h> in archrandom.h\n  x86/olpc: fix 'logical not is only applied to the left hand side'\n  lib/cpumask: move some one-line wrappers to header file\n  headers/deps: mm: align MANITAINERS and Docs with new gfp.h structure\n  headers/deps: mm: Split <linux/gfp_types.h> out of <linux/gfp.h>\n  headers/deps: mm: Optimize <linux/gfp.h> header dependencies\n  lib/cpumask: move trivial wrappers around find_bit to the header\n  lib/cpumask: change return types to unsigned where appropriate\n  cpumask: change return types to bool where appropriate\n  lib/bitmap: change type of bitmap_weight to unsigned long\n  lib/bitmap: change return types to bool where appropriate\n  arm: align find_bit declarations with generic kernel\n  iommu/vt-d: avoid invalid memory access via node_online(NUMA_NO_NODE)\n  lib/test_bitmap: test the tail after bitmap_to_arr64()\n  lib/bitmap: fix off-by-one in bitmap_to_arr64()\n  lib: test_bitmap: add compile-time optimization/evaluations assertions\n  bitmap: don't assume compiler evaluates small mem*() builtins calls\n  net/ice: fix initializing the bitmap in the switch code\n  bitops: let optimize out non-atomic bitops on compile-time constants\n  ...",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4e23eeebb2e57f5a28b36221aa776b5a1122dde5"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-08T00:53:35Z"
  },
  {
    "id": "23305865830",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10662069101,
      "size": 27,
      "distinct_size": 27,
      "ref": "refs/heads/master",
      "head": "1ab9250751ee91b0ca7bee887894fccfd44ff26a",
      "before": "3bc1bc0b59d04e997db25b84babf459ca1cd80b7",
      "commits": [
        {
          "sha": "ba1afa676d0babf99e99f5415db43fdd7ecef104",
          "author": {
            "email": "wqu@suse.com",
            "name": "Qu Wenruo"
          },
          "message": "lib: bitmap: fix the duplicated comments on bitmap_to_arr64()\n\nThanks to the recent commit 0a97953fd221 (\"lib: add\nbitmap_{from,to}_arr64\") now we can directly convert a U64 value into a\nbitmap and vice verse.\n\nHowever when checking the header there is duplicated helper for\nbitmap_to_arr64(), but no bitmap_from_arr64().\n\nJust fix the copy-n-paste error.\n\nSigned-off-by: Qu Wenruo <wqu@suse.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ba1afa676d0babf99e99f5415db43fdd7ecef104"
        },
        {
          "sha": "e5a16a5c4602c119262f350274021f90465f479d",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "ia64, processor: fix -Wincompatible-pointer-types in ia64_get_irr()\n\ntest_bit(), as any other bitmap op, takes `unsigned long *` as a\nsecond argument (pointer to the actual bitmap), as any bitmap\nitself is an array of unsigned longs. However, the ia64_get_irr()\ncode passes a ref to `u64` as a second argument.\nThis works with the ia64 bitops implementation due to that they\nhave `void *` as the second argument and then cast it later on.\nThis works with the bitmap API itself due to that `unsigned long`\nhas the same size on ia64 as `u64` (`unsigned long long`), but\nfrom the compiler PoV those two are different.\nDefine @irr as `unsigned long` to fix that. That implies no\nfunctional changes. Has been hidden for 16 years!\n\nFixes: a58786917ce2 (\"[IA64] avoid broken SAL_CACHE_FLUSH implementations\")\nCc: stable@vger.kernel.org # 2.6.16+\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nReviewed-by: Yury Norov <yury.norov@gmail.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e5a16a5c4602c119262f350274021f90465f479d"
        },
        {
          "sha": "21bb8af513d35c005c401706030f4eb469538d1d",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "bitops: always define asm-generic non-atomic bitops\n\nMove generic non-atomic bitops from the asm-generic header which\ngets included only when there are no architecture-specific\nalternatives, to a separate independent file to make them always\navailable.\nAlmost no actual code changes, only one comment added to\ngeneric_test_bit() saying that it's an atomic operation itself\nand thus `volatile` must always stay there with no cast-aways.\n\nSuggested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com> # comment\nSuggested-by: Marco Elver <elver@google.com> # reference to kernel-doc\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nReviewed-by: Marco Elver <elver@google.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/21bb8af513d35c005c401706030f4eb469538d1d"
        },
        {
          "sha": "0e862838f290147ea9c16db852d8d494b552d38d",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "bitops: unify non-atomic bitops prototypes across architectures\n\nCurrently, there is a mess with the prototypes of the non-atomic\nbitops across the different architectures:\n\nret\tbool, int, unsigned long\nnr\tint, long, unsigned int, unsigned long\naddr\tvolatile unsigned long *, volatile void *\n\nThankfully, it doesn't provoke any bugs, but can sometimes make\nthe compiler angry when it's not handy at all.\nAdjust all the prototypes to the following standard:\n\nret\tbool\t\t\t\tretval can be only 0 or 1\nnr\tunsigned long\t\t\tnative; signed makes no sense\naddr\tvolatile unsigned long *\tbitmaps are arrays of ulongs\n\nNext, some architectures don't define 'arch_' versions as they don't\nsupport instrumentation, others do. To make sure there is always the\nsame set of callables present and to ease any potential future\nchanges, make them all follow the rule:\n * architecture-specific files define only 'arch_' versions;\n * non-prefixed versions can be defined only in asm-generic files;\nand place the non-prefixed definitions into a new file in\nasm-generic to be included by non-instrumented architectures.\n\nFinally, add some static assertions in order to prevent people from\nmaking a mess in this room again.\nI also used the %__always_inline attribute consistently, so that\nthey always get resolved to the actual operations.\n\nSuggested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nAcked-by: Mark Rutland <mark.rutland@arm.com>\nReviewed-by: Yury Norov <yury.norov@gmail.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0e862838f290147ea9c16db852d8d494b552d38d"
        },
        {
          "sha": "bb7379bfa680bd48b468e856475778db2ad866c1",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "bitops: define const_*() versions of the non-atomics\n\nDefine const_*() variants of the non-atomic bitops to be used when\nthe input arguments are compile-time constants, so that the compiler\nwill be always able to resolve those to compile-time constants as\nwell. Those are mostly direct aliases for generic_*() with one\nexception for const_test_bit(): the original one is declared\natomic-safe and thus doesn't discard the `volatile` qualifier, so\nin order to let optimize code, define it separately disregarding\nthe qualifier.\nAdd them to the compile-time type checks as well just in case.\n\nSuggested-by: Marco Elver <elver@google.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Marco Elver <elver@google.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bb7379bfa680bd48b468e856475778db2ad866c1"
        },
        {
          "sha": "e69eb9c460f128b71c6b995d75a05244e4b6cc3e",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "bitops: wrap non-atomic bitops with a transparent macro\n\nIn preparation for altering the non-atomic bitops with a macro, wrap\nthem in a transparent definition. This requires prepending one more\n'_' to their names in order to be able to do that seamlessly. It is\na simple change, given that all the non-prefixed definitions are now\nin asm-generic.\nsparc32 already has several triple-underscored functions, so I had\nto rename them ('___' -> 'sp32_').\n\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Marco Elver <elver@google.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e69eb9c460f128b71c6b995d75a05244e4b6cc3e"
        },
        {
          "sha": "b03fc1173c0c2bb8fad61902a862985cecdc4b1b",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "bitops: let optimize out non-atomic bitops on compile-time constants\n\nCurrently, many architecture-specific non-atomic bitop\nimplementations use inline asm or other hacks which are faster or\nmore robust when working with \"real\" variables (i.e. fields from\nthe structures etc.), but the compilers have no clue how to optimize\nthem out when called on compile-time constants. That said, the\nfollowing code:\n\n\tDECLARE_BITMAP(foo, BITS_PER_LONG) = { }; // -> unsigned long foo[1];\n\tunsigned long bar = BIT(BAR_BIT);\n\tunsigned long baz = 0;\n\n\t__set_bit(FOO_BIT, foo);\n\tbaz |= BIT(BAZ_BIT);\n\n\tBUILD_BUG_ON(!__builtin_constant_p(test_bit(FOO_BIT, foo));\n\tBUILD_BUG_ON(!__builtin_constant_p(bar & BAR_BIT));\n\tBUILD_BUG_ON(!__builtin_constant_p(baz & BAZ_BIT));\n\ntriggers the first assertion on x86_64, which means that the\ncompiler is unable to evaluate it to a compile-time initializer\nwhen the architecture-specific bitop is used even if it's obvious.\nIn order to let the compiler optimize out such cases, expand the\nbitop() macro to use the \"constant\" C non-atomic bitop\nimplementations when all of the arguments passed are compile-time\nconstants, which means that the result will be a compile-time\nconstant as well, so that it produces more efficient and simple\ncode in 100% cases, comparing to the architecture-specific\ncounterparts.\n\nThe savings are architecture, compiler and compiler flags dependent,\nfor example, on x86_64 -O2:\n\nGCC 12: add/remove: 78/29 grow/shrink: 332/525 up/down: 31325/-61560 (-30235)\nLLVM 13: add/remove: 79/76 grow/shrink: 184/537 up/down: 55076/-141892 (-86816)\nLLVM 14: add/remove: 10/3 grow/shrink: 93/138 up/down: 3705/-6992 (-3287)\n\nand ARM64 (courtesy of Mark):\n\nGCC 11: add/remove: 92/29 grow/shrink: 933/2766 up/down: 39340/-82580 (-43240)\nLLVM 14: add/remove: 21/11 grow/shrink: 620/651 up/down: 12060/-15824 (-3764)\n\nCc: Mark Rutland <mark.rutland@arm.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Marco Elver <elver@google.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b03fc1173c0c2bb8fad61902a862985cecdc4b1b"
        },
        {
          "sha": "2f7ee2a72ccec8b85a05c4644d7ec9f40c1c50c8",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "net/ice: fix initializing the bitmap in the switch code\n\nKbuild spotted the following bug during the testing of one of\nthe optimizations:\n\nIn file included from include/linux/cpumask.h:12,\n[...]\n                from drivers/net/ethernet/intel/ice/ice_switch.c:4:\ndrivers/net/ethernet/intel/ice/ice_switch.c: In function 'ice_find_free_recp_res_idx.constprop':\ninclude/linux/bitmap.h:447:22: warning: 'possible_idx[0]' is used uninitialized [-Wuninitialized]\n  447 |                 *map |= GENMASK(start + nbits - 1, start);\n      |                      ^~\nIn file included from drivers/net/ethernet/intel/ice/ice.h:7,\n                 from drivers/net/ethernet/intel/ice/ice_lib.h:7,\n                 from drivers/net/ethernet/intel/ice/ice_switch.c:4:\ndrivers/net/ethernet/intel/ice/ice_switch.c:4929:24: note: 'possible_idx[0]' was declared here\n 4929 |         DECLARE_BITMAP(possible_idx, ICE_MAX_FV_WORDS);\n      |                        ^~~~~~~~~~~~\ninclude/linux/types.h:11:23: note: in definition of macro 'DECLARE_BITMAP'\n   11 |         unsigned long name[BITS_TO_LONGS(bits)]\n      |                       ^~~~\n\n%ICE_MAX_FV_WORDS is 48, so bitmap_set() here was initializing only\n48 bits, leaving a junk in the rest 16.\nIt was previously hidden due to that filling 48 bits makes\nbitmap_set() call external __bitmap_set(), but after making it use\nplain bit arithmetics on small bitmaps, compilers started seeing\nthe issue. It was still working because those 16 weren't used\nanywhere anyhow.\nbitmap_{clear,set}() are not really intended to initialize bitmaps,\nrather to modify already initialized ones, as they don't do anything\npast the passed number of bits. The correct function to do this in\nthat particular case is bitmap_fill(), so use it here. It will do\n`*possible_idx = ~0UL` instead of `*possible_idx |= GENMASK(47, 0)`,\nnot leaving anything in an undefined state.\n\nFixes: fd2a6b71e300 (\"ice: create advanced switch recipe\")\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2f7ee2a72ccec8b85a05c4644d7ec9f40c1c50c8"
        },
        {
          "sha": "3e7e5baaaba78075a7f3a57432609e363bf2a486",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "bitmap: don't assume compiler evaluates small mem*() builtins calls\n\nIntel kernel bot triggered the build bug on ARC architecture that\nin fact is as follows:\n\n\tDECLARE_BITMAP(bitmap, BITS_PER_LONG);\n\n\tbitmap_clear(bitmap, 0, BITS_PER_LONG);\n\tBUILD_BUG_ON(!__builtin_constant_p(*bitmap));\n\nwhich can be expanded to:\n\n\tunsigned long bitmap[1];\n\n\tmemset(bitmap, 0, sizeof(*bitmap));\n\tBUILD_BUG_ON(!__builtin_constant_p(*bitmap));\n\nIn most cases, a compiler is able to expand small/simple mem*()\ncalls to simple assignments or bitops, in this case that would mean:\n\n\tunsigned long bitmap[1] = { 0 };\n\n\tBUILD_BUG_ON(!__builtin_constant_p(*bitmap));\n\nand on most architectures this works, but not on ARC, despite having\n-O3 for every build.\nSo, to make this work, in case when the last bit to modify is still\nwithin the first long (small_const_nbits()), just use plain\nassignments for the rest of bitmap_*() functions which still use\nmem*(), but didn't receive such compile-time optimizations yet.\nThis doesn't have the same coverage as compilers provide, but at\nleast something to start:\n\ntext: add/remove: 3/7 grow/shrink: 43/78 up/down: 1848/-3370 (-1546)\ndata: add/remove: 1/11 grow/shrink: 0/8 up/down: 4/-356 (-352)\n\nnotably cpumask_*() family when NR_CPUS <= BITS_PER_LONG:\n\nnetif_get_num_default_rss_queues              38       4     -34\ncpumask_copy                                  90       -     -90\ncpumask_clear                                146       -    -146\n\nand the abovementioned assertion started passing.\n\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3e7e5baaaba78075a7f3a57432609e363bf2a486"
        },
        {
          "sha": "dc34d5036692c614eef23c1130ee42a201c316bf",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "lib: test_bitmap: add compile-time optimization/evaluations assertions\n\nAdd a function to the bitmap test suite, which will ensure that\ncompilers are able to evaluate operations performed by the\nbitops/bitmap helpers to compile-time constants when all of the\narguments are compile-time constants as well, or trigger a build\nbug otherwise. This should work on all architectures and all the\noptimization levels supported by Kbuild.\nThe function doesn't perform any runtime tests and gets optimized\nout to nothing after passing the build assertions.\nUnfortunately, Clang for s390 is currently broken (up to the latest\nGit snapshots) -- see the comment in the code -- so for now there's\na small workaround for it which doesn't alter the logics. Hope we'll\nbe able to remove it one day (bugreport is on its way).\n\nSuggested-by: Yury Norov <yury.norov@gmail.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dc34d5036692c614eef23c1130ee42a201c316bf"
        },
        {
          "sha": "428bc098635680a664779f26f24fe9197d186172",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "lib/bitmap: fix off-by-one in bitmap_to_arr64()\n\nGENMASK*() family takes the first and the last bits of the mask\n*including* them. So, with the current code bitmap_to_arr64()\ndoesn't clear the tail properly:\n\nnbits %  exp             mask                must be\n1        GENMASK(1, 0)   0x3                 0x1\n...\n63       GENMASK(63, 0)  0xffffffffffffffff  0x7fffffffffffffff\n\nThis was found by making the function always available instead of\n32-bit BE systems only (for reusing in some new functionality).\nTurn the number of bits into the last bit set by subtracting 1.\n@nbits is already checked to be positive beforehand.\n\nFixes: 0a97953fd221 (\"lib: add bitmap_{from,to}_arr64\")\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/428bc098635680a664779f26f24fe9197d186172"
        },
        {
          "sha": "30fd8cdf53a02b54b199043fcf1857db76e8badc",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "lib/test_bitmap: test the tail after bitmap_to_arr64()\n\nCurrently, test_bitmap_arr64() only tests bitmap_to_arr64()'s sanity\nby comparing the result of double-conversion (bm -> arr64 -> bm2)\nwith the input bitmap. However, this may be not enough when one side\nhides bugs of the second one (e.g. tail clearing, which is being\nperformed by both).\nExpand the tests and check the tail of the actual arr64 used as\na temporary buffer for double-converting.\n\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/30fd8cdf53a02b54b199043fcf1857db76e8badc"
        },
        {
          "sha": "b0b0b77ea611e3088e9523e60860f4f41b62b235",
          "author": {
            "email": "alexandr.lobakin@intel.com",
            "name": "Alexander Lobakin"
          },
          "message": "iommu/vt-d: avoid invalid memory access via node_online(NUMA_NO_NODE)\n\nKASAN reports:\n\n[ 4.668325][ T0] BUG: KASAN: wild-memory-access in dmar_parse_one_rhsa (arch/x86/include/asm/bitops.h:214 arch/x86/include/asm/bitops.h:226 include/asm-generic/bitops/instrumented-non-atomic.h:142 include/linux/nodemask.h:415 drivers/iommu/intel/dmar.c:497)\n[    4.676149][    T0] Read of size 8 at addr 1fffffff85115558 by task swapper/0/0\n[    4.683454][    T0]\n[    4.685638][    T0] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.19.0-rc3-00004-g0e862838f290 #1\n[    4.694331][    T0] Hardware name: Supermicro SYS-5018D-FN4T/X10SDV-8C-TLN4F, BIOS 1.1 03/02/2016\n[    4.703196][    T0] Call Trace:\n[    4.706334][    T0]  <TASK>\n[ 4.709133][ T0] ? dmar_parse_one_rhsa (arch/x86/include/asm/bitops.h:214 arch/x86/include/asm/bitops.h:226 include/asm-generic/bitops/instrumented-non-atomic.h:142 include/linux/nodemask.h:415 drivers/iommu/intel/dmar.c:497)\n\nafter converting the type of the first argument (@nr, bit number)\nof arch_test_bit() from `long` to `unsigned long`[0].\n\nUnder certain conditions (for example, when ACPI NUMA is disabled\nvia command line), pxm_to_node() can return %NUMA_NO_NODE (-1).\nIt is valid 'magic' number of NUMA node, but not valid bit number\nto use in bitops.\nnode_online() eventually descends to test_bit() without checking\nfor the input, assuming it's on caller side (which might be good\nfor perf-critical tasks). There, -1 becomes %ULONG_MAX which leads\nto an insane array index when calculating bit position in memory.\n\nFor now, add an explicit check for @node being not %NUMA_NO_NODE\nbefore calling test_bit(). The actual logics didn't change here\nat all.\n\n[0] https://github.com/norov/linux/commit/0e862838f290147ea9c16db852d8d494b552d38d\n\nFixes: ee34b32d8c29 (\"dmar: support for parsing Remapping Hardware Static Affinity structure\")\nCc: stable@vger.kernel.org # 2.6.33+\nReported-by: kernel test robot <oliver.sang@intel.com>\nSigned-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>\nReviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nReviewed-by: Lu Baolu <baolu.lu@linux.intel.com>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b0b0b77ea611e3088e9523e60860f4f41b62b235"
        },
        {
          "sha": "0b4736a424a1358d613057a24ff97813305513e2",
          "author": {
            "email": "yury.norov@gmail.com",
            "name": "Yury Norov"
          },
          "message": "arm: align find_bit declarations with generic kernel\n\nARM has their own implementation for find_bit functions, and function\ndeclarations are different with those in generic headers. Fix it.\n\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0b4736a424a1358d613057a24ff97813305513e2"
        },
        {
          "sha": "e2863a78593d638d3924a6f67900c4820034f349",
          "author": {
            "email": "yury.norov@gmail.com",
            "name": "Yury Norov"
          },
          "message": "lib/bitmap: change return types to bool where appropriate\n\nSome bitmap functions return boolean results in int variables. Fix it\nby changing return types to bool.\n\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e2863a78593d638d3924a6f67900c4820034f349"
        },
        {
          "sha": "4dea97f8636d0514befc9fc5cf342b351b7d0e20",
          "author": {
            "email": "yury.norov@gmail.com",
            "name": "Yury Norov"
          },
          "message": "lib/bitmap: change type of bitmap_weight to unsigned long\n\nbitmap_weight() doesn't return negative values, so change it's type\nto unsigned long. It may help compiler to generate better code and\ncatch bugs.\n\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4dea97f8636d0514befc9fc5cf342b351b7d0e20"
        },
        {
          "sha": "cb32c285cc10e428589194e30233d673e7c23c72",
          "author": {
            "email": "yury.norov@gmail.com",
            "name": "Yury Norov"
          },
          "message": "cpumask: change return types to bool where appropriate\n\nSome cpumask functions have integer return types where return values\nare naturally booleans.\n\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cb32c285cc10e428589194e30233d673e7c23c72"
        },
        {
          "sha": "8b6b795d9bfc031a8953c40fac8d3cf67e1a4d3d",
          "author": {
            "email": "yury.norov@gmail.com",
            "name": "Yury Norov"
          },
          "message": "lib/cpumask: change return types to unsigned where appropriate\n\nSwitch return types to unsigned int where return values cannot be negative.\n\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8b6b795d9bfc031a8953c40fac8d3cf67e1a4d3d"
        },
        {
          "sha": "9b2e70860ef2f0d74b6d9e57929d57b14481b9c9",
          "author": {
            "email": "yury.norov@gmail.com",
            "name": "Yury Norov"
          },
          "message": "lib/cpumask: move trivial wrappers around find_bit to the header\n\nTo avoid circular dependencies, cpumask keeps simple (almost) one-line\nwrappers around find_bit() in a c-file.\n\nCommit 47d8c15615c0a2 (\"include: move find.h from asm_generic to linux\")\nmoved find.h header out of asm_generic include path, and it helped to fix\nmany circular dependencies, including some in cpumask.h.\n\nThis patch moves those one-liners to header files.\n\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9b2e70860ef2f0d74b6d9e57929d57b14481b9c9"
        },
        {
          "sha": "db96b0c5f9db22d908ab5f7cd75904adba4b28ca",
          "author": {
            "email": "mingo@kernel.org",
            "name": "Ingo Molnar"
          },
          "message": "headers/deps: mm: Optimize <linux/gfp.h> header dependencies\n\nThere's a couple of superfluous inclusions here - remove them before\ndoing bigger changes.\n\nSigned-off-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Yury Norov <yury.norov@gmail.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/db96b0c5f9db22d908ab5f7cd75904adba4b28ca"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-08T00:47:36Z"
  },
  {
    "id": "23303680168",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10660637469,
      "size": 122,
      "distinct_size": 122,
      "ref": "refs/heads/master",
      "head": "3bc1bc0b59d04e997db25b84babf459ca1cd80b7",
      "before": "1612c382ffbdf1f673caec76502b1c00e6d35363",
      "commits": [
        {
          "sha": "dcea7964764aad41c2994084a4c0292371b14e36",
          "author": {
            "email": "joe@perches.com",
            "name": "Joe Perches"
          },
          "message": "checkpatch: add XA_STATE and XA_STATE_ORDER to the macro declaration list\n\nXA_STATE() and XA_STATE_ORDER macro uses are declarations.\n\nAdd them to the declaration macro list to avoid suggesting a blank line\nafter declarations when used.\n\nLink: https://lkml.kernel.org/r/144314f4bf2c58cf2336028a75a5127e848abd81.camel@perches.com\nSigned-off-by: Joe Perches <joe@perches.com>\nReported-by: David Howells <dhowells@redhat.com>\nCc: Matthew Wilcox <willy@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dcea7964764aad41c2994084a4c0292371b14e36"
        },
        {
          "sha": "0fe6ee8f123a4dfb529a5aff07536bb481f34043",
          "author": {
            "email": "chenzhongjin@huawei.com",
            "name": "Chen Zhongjin"
          },
          "message": "profiling: fix shift too large makes kernel panic\n\n2d186afd04d6 (\"profiling: fix shift-out-of-bounds bugs\") limits shift\nvalue by [0, BITS_PER_LONG -1], which means [0, 63].\n\nHowever, syzbot found that the max shift value should be the bit number of\n(_etext - _stext).  If shift is outside of this, the \"buffer_bytes\" will\nbe zero and will cause kzalloc(0).  Then the kernel panics due to\ndereferencing the returned pointer 16.\n\nThis can be easily reproduced by passing a large number like 60 to enable\nprofiling and then run readprofile.\n\nLOGS:\n BUG: kernel NULL pointer dereference, address: 0000000000000010\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 6148067 P4D 6148067 PUD 6142067 PMD 0\n PREEMPT SMP\n CPU: 4 PID: 184 Comm: readprofile Not tainted 5.18.0+ #162\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014\n RIP: 0010:read_profile+0x104/0x220\n RSP: 0018:ffffc900006fbe80 EFLAGS: 00000202\n RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n RDX: ffff888006150000 RSI: 0000000000000001 RDI: ffffffff82aba4a0\n RBP: 000000000188bb60 R08: 0000000000000010 R09: ffff888006151000\n R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff82aba4a0\n R13: 0000000000000000 R14: ffffc900006fbf08 R15: 0000000000020c30\n FS:  000000000188a8c0(0000) GS:ffff88803ed00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000010 CR3: 0000000006144000 CR4: 00000000000006e0\n Call Trace:\n  <TASK>\n  proc_reg_read+0x56/0x70\n  vfs_read+0x9a/0x1b0\n  ksys_read+0xa1/0xe0\n  ? fpregs_assert_state_consistent+0x1e/0x40\n  do_syscall_64+0x3a/0x80\n  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n RIP: 0033:0x4d4b4e\n RSP: 002b:00007ffebb668d58 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n RAX: ffffffffffffffda RBX: 000000000188a8a0 RCX: 00000000004d4b4e\n RDX: 0000000000000400 RSI: 000000000188bb60 RDI: 0000000000000003\n RBP: 0000000000000003 R08: 000000000000006e R09: 0000000000000000\n R10: 0000000000000041 R11: 0000000000000246 R12: 000000000188bb60\n R13: 0000000000000400 R14: 0000000000000000 R15: 000000000188bb60\n  </TASK>\n Modules linked in:\n CR2: 0000000000000010\nKilled\n ---[ end trace 0000000000000000 ]---\n\nCheck prof_len in profile_init() to prevent it be zero.\n\nLink: https://lkml.kernel.org/r/20220531012854.229439-1-chenzhongjin@huawei.com\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nSigned-off-by: Chen Zhongjin <chenzhongjin@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0fe6ee8f123a4dfb529a5aff07536bb481f34043"
        },
        {
          "sha": "53fd5ffbb5197b8cc2d73d2bbc0f688afd45736c",
          "author": {
            "email": "junxiao.bi@oracle.com",
            "name": "Junxiao Bi"
          },
          "message": "ocfs2: kill EBUSY from dlmfs_evict_inode\n\nWhen unlinking a dlmfs, first it will invoke dlmfs_unlink(), and then\ninvoke dlmfs_evict_inode(), user_dlm_destroy_lock() is invoked in both\nplaces, the second one from dlmfs_evict_inode() will get EBUSY error\nbecause USER_LOCK_IN_TEARDOWN is already set in lockres.  This doesn't\naffect any function, just the error log is annoying.\n\nLink: https://lkml.kernel.org/r/20220607171226.86672-1-junxiao.bi@oracle.com\nSigned-off-by: Junxiao Bi <junxiao.bi@oracle.com>\nReviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>\nCc: Mark Fasheh <mark@fasheh.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nCc: Changwei Ge <gechangwei@live.cn>\nCc: Gang He <ghe@suse.com>\nCc: Jun Piao <piaojun@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/53fd5ffbb5197b8cc2d73d2bbc0f688afd45736c"
        },
        {
          "sha": "0cc011c576aaa4de505046f7a6c90933d7c749a9",
          "author": {
            "email": "linux@roeck-us.net",
            "name": "Guenter Roeck"
          },
          "message": "lib/list_debug.c: Detect uninitialized lists\n\nIn some circumstances, attempts are made to add entries to or to remove\nentries from an uninitialized list.  A prime example is\namdgpu_bo_vm_destroy(): It is indirectly called from\nttm_bo_init_reserved() if that function fails, and tries to remove an\nentry from a list.  However, that list is only initialized in\namdgpu_bo_create_vm() after the call to ttm_bo_init_reserved() returned\nsuccess.  This results in crashes such as\n\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP NOPTI\n CPU: 1 PID: 1479 Comm: chrome Not tainted 5.10.110-15768-g29a72e65dae5\n Hardware name: Google Grunt/Grunt, BIOS Google_Grunt.11031.149.0 07/15/2020\n RIP: 0010:__list_del_entry_valid+0x26/0x7d\n ...\n Call Trace:\n  amdgpu_bo_vm_destroy+0x48/0x8b\n  ttm_bo_init_reserved+0x1d7/0x1e0\n  amdgpu_bo_create+0x212/0x476\n  ? amdgpu_bo_user_destroy+0x23/0x23\n  ? kmem_cache_alloc+0x60/0x271\n  amdgpu_bo_create_vm+0x40/0x7d\n  amdgpu_vm_pt_create+0xe8/0x24b\n ...\n\nCheck if the list's prev and next pointers are NULL to catch such problems.\n\nLink: https://lkml.kernel.org/r/20220531222951.92073-1-linux@roeck-us.net\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>\nCc: Steven Rostedt <rostedt@goodmis.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0cc011c576aaa4de505046f7a6c90933d7c749a9"
        },
        {
          "sha": "a91befde350375b1ff954635acdde14dc92cd9a8",
          "author": {
            "email": "wuchi.zero@gmail.com",
            "name": "wuchi"
          },
          "message": "lib/flex_proportions.c: remove local_irq_ops in fprop_new_period()\n\ncommit e78d4833c03e28> \"lib: Fix possible deadlock in flexible proportion\ncode\" adds the local_irq_ops because percpu_counter_{sum |add} ops'lock\ncan cause deadlock by interrupts.  Now percpu_counter _{sum|add} ops use\nraw_spin_(un)lock_irq*, so revert the commit and resolve the conflict.\n\nLink: https://lkml.kernel.org/r/20220604131502.5190-1-wuchi.zero@gmail.com\nSigned-off-by: wuchi <wuchi.zero@gmail.com>\nReviewed-by: Jan Kara <jack@suse.cz>\nCc: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a91befde350375b1ff954635acdde14dc92cd9a8"
        },
        {
          "sha": "4815a36009044ba69a9b8d781943ec6505c451a2",
          "author": {
            "email": "andriy.shevchenko@linux.intel.com",
            "name": "Andy Shevchenko"
          },
          "message": "include/linux/rbtree.h: replace kernel.h with the necessary inclusions\n\nWhen kernel.h is used in the headers it adds a lot into dependency hell,\nespecially when there are circular dependencies are involved.\n\nReplace kernel.h inclusion with the list of what is really being used.\n\nLink: https://lkml.kernel.org/r/20220603171012.48880-1-andriy.shevchenko@linux.intel.com\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nCc: Matthew Wilcox <willy@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4815a36009044ba69a9b8d781943ec6505c451a2"
        },
        {
          "sha": "9776e3861e0e30330f6c8ca9c30348f336d24b1c",
          "author": {
            "email": "luc.vanoostenryck@gmail.com",
            "name": "Luc Van Oostenryck"
          },
          "message": "ia64: fix sparse warnings with cmpxchg() & xchg()\n\nOn IA64, new sparse's warnings where issued after fixing some __rcu\nannotations in kernel/bpf/.\n\nThese new warnings are false positives and appear on IA64 because on this\narchitecture, the macros for cmpxchg() and xchg() make casts that ignore\nsparse annotations.\n\nThis patch contains the minimal patch to fix this issue: adding a missing\ncast and some missing '__force'.\n\nLink: https://lore.kernel.org/r/20220601120013.bq5a3ynbkc3hngm5@mail\nLink: https://lkml.kernel.org/r/20220605160738.79736-1-luc.vanoostenryck@gmail.com\nSigned-off-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>\nReported-by: kernel test robot <lkp@intel.com>\nAcked-by: Paul E. McKenney <paulmck@kernel.org>\nAcked-by: Toke Høiland-Jørgensen <toke@redhat.com>\nCc: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9776e3861e0e30330f6c8ca9c30348f336d24b1c"
        },
        {
          "sha": "c0af32fdc625c0e7f03465a813b04cbfb5419a1e",
          "author": {
            "email": "wuchi.zero@gmail.com",
            "name": "wuchi"
          },
          "message": "lib/btree: simplify btree_{lookup|update}\n\nbtree_{lookup|update} both need to look up node by key, using the common\nparts(add function btree_lookup_node) to simplify code.\n\nLink: https://lkml.kernel.org/r/20220607133556.34732-1-wuchi.zero@gmail.com\nSigned-off-by: wuchi <wuchi.zero@gmail.com>\nCc: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c0af32fdc625c0e7f03465a813b04cbfb5419a1e"
        },
        {
          "sha": "d30dfd490f7dc4cb6a7c11a647bd1ff7a22139e7",
          "author": {
            "email": "jstitt007@gmail.com",
            "name": "Justin Stitt"
          },
          "message": "include/uapi/linux/swab.h: move explicit cast outside ternary\n\nA cast inside __builtin_constant_p doesn't do anything since it should\nevaluate as constant at compile time irrespective of this cast.  Instead,\nI moved this cast outside the ternary to ensure the return type is as\nexpected.\n\nAdditionally, if __HAVE_BUILTIN_BSWAP16__ was not defined then __swab16 is\nactually returning an `int` not a `u16` due to integer promotion.\n\nAs Al Viro notes:\nYou *can't* get smaller-than-int out of ? :, same as you can't get it\nout of addition, etc.\n\nThis also fixes some clang -Wformat warnings involving default\nargument promotion.\n\nLink: https://github.com/ClangBuiltLinux/linux/issues/378\nLink: https://lkml.kernel.org/r/20220608223539.470472-1-justinstitt@google.com\nSigned-off-by: Justin Stitt <jstitt007@gmail.com>\nSuggested-by: Al Viro <viro@zeniv.linux.org.uk>\nSuggested-by: Nathan Chancellor <nathan@kernel.org>\nReviewed-by: Nathan Chancellor <nathan@kernel.org>\nSuggested-by: Nick Desaulniers <ndesaulniers@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d30dfd490f7dc4cb6a7c11a647bd1ff7a22139e7"
        },
        {
          "sha": "dabba87229411a5e9d20ac03ffc36463c53ae672",
          "author": {
            "email": "pasha.tatashin@soleen.com",
            "name": "Pasha Tatashin"
          },
          "message": "fs/kernel_read_file: allow to read files up-to ssize_t\n\nPatch series \"Allow to kexec with initramfs larger than 2G\", v2.\n\nCurrently, the largest initramfs that is supported by kexec_file_load()\nsyscall is 2G.\n\nThis is because kernel_read_file() returns int, and is limited to INT_MAX\nor 2G.\n\nOn the other hand, there are kexec based boot loaders (i.e.  u-root), that\nmay need to boot netboot images that might be larger than 2G.\n\nThe first patch changes the return type from int to ssize_t in\nkernel_read_file* functions.\n\nThe second patch increases the maximum initramfs file size to 4G.\n\nTested: verified that can kexec_file_load() works with 4G initramfs\non x86_64.\n\n\nThis patch (of 2):\n\nCurrently, the maximum file size that is supported is 2G.  This may be too\nsmall in some cases.  For example, kexec_file_load() system call loads\ninitramfs.  In some netboot cases initramfs can be rather large.\n\nAllow to use up-to ssize_t bytes.  The callers still can limit the maximum\nfile size via buf_size.\n\nLink: https://lkml.kernel.org/r/20220527025535.3953665-1-pasha.tatashin@soleen.com\nLink: https://lkml.kernel.org/r/20220527025535.3953665-2-pasha.tatashin@soleen.com\nSigned-off-by: Pasha Tatashin <pasha.tatashin@soleen.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Baoquan He <bhe@redhat.com>\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: Greg Thelen <gthelen@google.com>\nCc: Sasha Levin <sashal@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dabba87229411a5e9d20ac03ffc36463c53ae672"
        },
        {
          "sha": "f4da7afe07523ff8930c4466b09a15db18508cd4",
          "author": {
            "email": "pasha.tatashin@soleen.com",
            "name": "Pasha Tatashin"
          },
          "message": "kexec_file: increase maximum file size to 4G\n\nIn some case initrd can be large.  For example, it could be a netboot\nimage loaded by u-root, that is kexec'ing into it.\n\nThe maximum size of initrd is arbitrary set to 2G.  Also, the limit is not\nvery obvious because it is hidden behind a generic INT_MAX macro.\n\nTheoretically, we could make it LONG_MAX, but it is safer to keep it sane,\nand just increase it to 4G.\n\nIncrease the size to 4G, and make it obvious by having a new macro that\nspecifies the maximum file size supported by kexec_file_load() syscall:\nKEXEC_FILE_SIZE_MAX.\n\nLink: https://lkml.kernel.org/r/20220527025535.3953665-3-pasha.tatashin@soleen.com\nSigned-off-by: Pasha Tatashin <pasha.tatashin@soleen.com>\nCc: Sasha Levin <sashal@kernel.org>\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: Greg Thelen <gthelen@google.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Baoquan He <bhe@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f4da7afe07523ff8930c4466b09a15db18508cd4"
        },
        {
          "sha": "0aed4724a8392f2567f83c9c4b9decf447d752a2",
          "author": {
            "email": "chenxuebing@jari.cn",
            "name": "cxbing"
          },
          "message": "delayacct: remove some unused variables\n\nDrop the unused variables *done* and *count*.\n\nLink: https://lkml.kernel.org/r/20220609144459.86379-1-zhangkkoo@126.com\nSigned-off-by: cxbing <chenxuebing@jari.cn>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0aed4724a8392f2567f83c9c4b9decf447d752a2"
        },
        {
          "sha": "f268eedddf3595e85f8883dc50aed29654785696",
          "author": {
            "email": "phillip@squashfs.org.uk",
            "name": "Phillip Lougher"
          },
          "message": "squashfs: extend \"page actor\" to handle missing pages\n\nPatch series \"Squashfs: handle missing pages decompressing into page\ncache\".\n\nThis patchset enables Squashfs to handle missing pages when directly\ndecompressing datablocks into the page cache.\n\nPreviously if the full set of pages needed was not available, Squashfs\nwould have to fall back to using an intermediate buffer (the older\nmethod), which is slower, involving a memcopy, and it introduces\ncontention on a shared buffer.\n\nThe first patch extends the \"page actor\" code to handle missing pages.\n\nThe second patch updates Squashfs_readpage_block() to use the new\nfunctionality, and removes the code that falls back to using an\nintermediate buffer.\n\nThis patchset is independent of the readahead work, and it is standalone. \nIt can be merged on its own.\n\nBut the readahead patch for efficiency also needs this patch-set.\n\n\nThis patch (of 2):\n\nThis patch extends the \"page actor\" code to handle missing pages.\n\nPreviously if the full set of pages needed to decompress a Squashfs\ndatablock was unavailable, this would cause decompression to fail on the\nmissing pages.\n\nIn this case direct decompression into the page cache could not be\nachieved and the code would fall back to using the older intermediate\nbuffer method.\n\nWith this patch, direct decompression into the page cache can be achieved\nwith missing pages.\n\nFor \"multi-shot\" decompressors (zlib, xz, zstd), the page actor will\nallocate a temporary buffer which is passed to the decompressor, and then\nfreed by the page actor.\n\nFor \"single shot\" decompressors (lz4, lzo) which decompress into a\ncontiguous \"bounce buffer\", and which is then copied into the page cache,\nit would be pointless to allocate a temporary buffer, memcpy into it, and\nthen free it.  For these decompressors -ENOMEM is returned, which\nsignifies that the memcpy for that page should be skipped.\n\nThis also happens if the data block is uncompressed.\n\nLink: https://lkml.kernel.org/r/20220611032133.5743-1-phillip@squashfs.org.uk\nLink: https://lkml.kernel.org/r/20220611032133.5743-2-phillip@squashfs.org.uk\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>\nCc: Matthew Wilcox (Oracle) <willy@infradead.org>\nCc: Hsin-Yi Wang <hsinyi@chromium.org>\nCc: Xiongwei Song <Xiongwei.Song@windriver.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f268eedddf3595e85f8883dc50aed29654785696"
        },
        {
          "sha": "1bb1a07afad97303f14b8d1b319b03f1f01a0091",
          "author": {
            "email": "phillip@squashfs.org.uk",
            "name": "Phillip Lougher"
          },
          "message": "squashfs: don't use intermediate buffer if pages missing\n\nNow that the \"page actor\" can handle missing pages, we don't have to fall\nback to using an intermediate buffer in Squashfs_readpage_block() if all\nthe pages necessary can't be obtained.\n\nLink: https://lkml.kernel.org/r/20220611032133.5743-3-phillip@squashfs.org.uk\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>\nCc: Hsin-Yi Wang <hsinyi@chromium.org>\nCc: Matthew Wilcox (Oracle) <willy@infradead.org>\nCc: Xiongwei Song <Xiongwei.Song@windriver.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1bb1a07afad97303f14b8d1b319b03f1f01a0091"
        },
        {
          "sha": "019a0c9e377c9f7bd477a0742706d93cdddaee4d",
          "author": {
            "email": "javierm@redhat.com",
            "name": "Javier Martinez Canillas"
          },
          "message": "fat: add a vfat_rename2() and make existing .rename callback a helper\n\nPatch series \"fat: add support for the renameat2 RENAME_EXCHANGE flag\", v6.\n\nThe series adds support for the renameat2 system call RENAME_EXCHANGE flag\n(which allows to atomically replace two paths) to the vfat filesystem\ncode.\n\nThere are many use cases for this, but we are particularly interested in\nmaking possible for vfat filesystems to be part of OSTree [0] deployments.\n\nCurrently OSTree relies on symbolic links to make the deployment updates\nan atomic transactional operation.  But RENAME_EXCHANGE could be used [1]\nto achieve a similar level of robustness when using a vfat filesystem.\n\nPatch #1 is just a preparatory patch to introduce the RENAME_EXCHANGE\nsupport, patch #2 moves some code blocks in vfat_rename() to a set of\nhelper functions, that can be reused by tvfat_rename_exchange() that's\nadded by patch #3 and finally patch #4 adds some kselftests to test it.\n\n\nThis patch (of 4):\n\nCurrently vfat only supports the RENAME_NOREPLACE flag which is handled by\nthe virtual file system layer but doesn't support the RENAME_EXCHANGE\nflag.\n\nAdd a vfat_rename2() function to be used as the .rename callback and move\nthe current vfat_rename() handler to a helper.  This is in preparation for\nimplementing the RENAME_NOREPLACE flag using a different helper function.\n\nLink: https://lkml.kernel.org/r/20220610075721.1182745-1-javierm@redhat.com\nLink: https://lkml.kernel.org/r/20220610075721.1182745-2-javierm@redhat.com\nSigned-off-by: Javier Martinez Canillas <javierm@redhat.com>\nAcked-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>\nCc: Christian Kellner <ckellner@redhat.com>\nCc: Peter Jones <pjones@redhat.com>\nCc: Chung-Chiang Cheng <cccheng@synology.com>\nCc: Lennart Poettering <lennart@poettering.net>\nCc: Alexander Larsson <alexl@redhat.com>\nCc: Colin Walters <walters@verbum.org>\nCc: Muhammad Usama Anjum <usama.anjum@collabora.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/019a0c9e377c9f7bd477a0742706d93cdddaee4d"
        },
        {
          "sha": "204d03203a145b443cd8676dc12dbb47e1a3751f",
          "author": {
            "email": "hirofumi@mail.parknet.co.jp",
            "name": "OGAWA Hirofumi"
          },
          "message": "fat: factor out reusable code in vfat_rename() as helper functions\n\nThe vfat_rename() function is quite big and there are code blocks that can\nbe moved into helper functions.  This not only simplify the implementation\nof that function but also allows these helpers to be reused.\n\nFor example, the helpers can be used by the handler of the RENAME_EXCHANGE\nflag once this is implemented in a subsequent patch.\n\nLink: https://lkml.kernel.org/r/20220610075721.1182745-3-javierm@redhat.com\nSigned-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>\nSigned-off-by: Javier Martinez Canillas <javierm@redhat.com>\nAcked-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>\nCc: Alexander Larsson <alexl@redhat.com>\nCc: Christian Kellner <ckellner@redhat.com>\nCc: Chung-Chiang Cheng <cccheng@synology.com>\nCc: Colin Walters <walters@verbum.org>\nCc: Lennart Poettering <lennart@poettering.net>\nCc: Muhammad Usama Anjum <usama.anjum@collabora.com>\nCc: Peter Jones <pjones@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/204d03203a145b443cd8676dc12dbb47e1a3751f"
        },
        {
          "sha": "da87e1725ae2136baeb9aac04c572c283afc917f",
          "author": {
            "email": "javierm@redhat.com",
            "name": "Javier Martinez Canillas"
          },
          "message": "fat: add renameat2 RENAME_EXCHANGE flag support\n\nThe renameat2 RENAME_EXCHANGE flag allows to atomically exchange two paths\nbut is currently not supported by the Linux vfat filesystem driver.\n\nAdd a vfat_rename_exchange() helper function that implements this support.\n\nThe super block lock is acquired during the operation to ensure atomicity,\nand in the error path actions made are reversed also with the mutex held.\n\nIt makes the operation as transactional as possible, within the limitation\nimpossed by vfat due not having a journal with logs to replay.\n\nLink: https://lkml.kernel.org/r/20220610075721.1182745-4-javierm@redhat.com\nSigned-off-by: Javier Martinez Canillas <javierm@redhat.com>\nAcked-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>\nCc: Alexander Larsson <alexl@redhat.com>\nCc: Christian Kellner <ckellner@redhat.com>\nCc: Chung-Chiang Cheng <cccheng@synology.com>\nCc: Colin Walters <walters@verbum.org>\nCc: Lennart Poettering <lennart@poettering.net>\nCc: Muhammad Usama Anjum <usama.anjum@collabora.com>\nCc: Peter Jones <pjones@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/da87e1725ae2136baeb9aac04c572c283afc917f"
        },
        {
          "sha": "dd7c9be330d87732766a95cfd7a6de38bf7a39c3",
          "author": {
            "email": "javierm@redhat.com",
            "name": "Javier Martinez Canillas"
          },
          "message": "selftests/filesystems: add a vfat RENAME_EXCHANGE test\n\nAdd a test for the renameat2 RENAME_EXCHANGE support in vfat, but split it\nin a tool that just does the rename exchange and a script that is run by\nthe kselftests framework on `make TARGETS=\"filesystems/fat\" kselftest`.\n\nThat way the script can be easily extended to test other file operations.\n\nThe script creates a 1 MiB disk image, that is then formated with a vfat\nfilesystem and mounted using a loop device.  That way all file operations\nare done on an ephemeral filesystem.\n\nLink: https://lkml.kernel.org/r/20220610075721.1182745-5-javierm@redhat.com\nSigned-off-by: Javier Martinez Canillas <javierm@redhat.com>\nAcked-by: Muhammad Usama Anjum <usama.anjum@collabora.com>\nAcked-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>\nCc: Alexander Larsson <alexl@redhat.com>\nCc: Christian Kellner <ckellner@redhat.com>\nCc: Chung-Chiang Cheng <cccheng@synology.com>\nCc: Colin Walters <walters@verbum.org>\nCc: Lennart Poettering <lennart@poettering.net>\nCc: Peter Jones <pjones@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dd7c9be330d87732766a95cfd7a6de38bf7a39c3"
        },
        {
          "sha": "f858e23a29740757fe1ca602cb1f57845034b1c5",
          "author": {
            "email": "borneo.antonio@gmail.com",
            "name": "Antonio Borneo"
          },
          "message": "checkpatch: fix incorrect camelcase detection on numeric constant\n\nThe code fragment below\n\n\tint foo(int *array, int index)\n\t{\n\t\treturn array[index & 0xFF];\n\t}\n\ntriggers an incorrect camelcase detection by checking a substring of the\nhex constant:\n\n\tCHECK: Avoid CamelCase: <xFF>\n\t#3: FILE: test.c:3:\n\t+\treturn array[index & 0xFF];\n\nThis is caused by passing the whole string \"array[index & 0xFF]\" to the\ninner loop that iterates over a \"$Ident\" match.  The numeric constant is\nnot a $Ident as it doesn't start with [A-Za-z_] and should be excluded\nfrom the match.\n\nSimilar issue can be detected with other constants like \"1uL\", \"0xffffU\".\n\nForce the match to start at word boundary so the $Ident will be properly\nchecked starting from its first char and the constants will be\nfiltered-out.\n\nLink: https://lkml.kernel.org/r/20220613100055.77821-1-borneo.antonio@gmail.com\nSigned-off-by: Antonio Borneo <borneo.antonio@gmail.com>\nCc: Joe Perches <joe@perches.com>\nCc: Andy Whitcroft <apw@canonical.com>\nCc: Dwaipayan Ray <dwaipayanray1@gmail.com>\nCc: Lukas Bulwahn <lukas.bulwahn@gmail.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f858e23a29740757fe1ca602cb1f57845034b1c5"
        },
        {
          "sha": "00c9d5632277b21ba8802e26c27254cd9d0dfa13",
          "author": {
            "email": "wuchi.zero@gmail.com",
            "name": "wuchi"
          },
          "message": "lib/error-inject: convert to DEFINE_SEQ_ATTRIBUTE\n\nUse DEFINE_SEQ_ATTRIBUTE helper macro to simplify the code.\n\nLink: https://lkml.kernel.org/r/20220612052015.23283-1-wuchi.zero@gmail.com\nSigned-off-by: wuchi <wuchi.zero@gmail.com>\nCc: Masami Hiramatsu (Google) <mhiramat@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: Song Liu <songliubraving@fb.com>\nCc: Yonghong Song <yhs@fb.com>\nCc: John Fastabend <john.fastabend@gmail.com>\nCc: KP Singh <kpsingh@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/00c9d5632277b21ba8802e26c27254cd9d0dfa13"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-07T17:56:36Z"
  },
  {
    "id": "23298564272",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10657204672,
      "size": 285,
      "distinct_size": 285,
      "ref": "refs/heads/master",
      "head": "1612c382ffbdf1f673caec76502b1c00e6d35363",
      "before": "4d1044fcb996e8de9b9ab392f4a767890e45202d",
      "commits": [
        {
          "sha": "113fe88eed53af08800f54a03e463636105831e0",
          "author": {
            "email": "christophe.leroy@csgroup.eu",
            "name": "Christophe Leroy"
          },
          "message": "powerpc: Don't include asm/setup.h in asm/machdep.h\n\nasm/machdep.h doesn't need asm/setup.h\n\nRemove it.\n\nAdd it directly in files that needs it.\n\nSigned-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/3b1dfb19a2c3265fb4abc2bfc7b6eae9261a998b.1654966508.git.christophe.leroy@csgroup.eu",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/113fe88eed53af08800f54a03e463636105831e0"
        },
        {
          "sha": "7dc3ba0a071892ea212f90f63738fd9f81b1f638",
          "author": {
            "email": "christophe.leroy@csgroup.eu",
            "name": "Christophe Leroy"
          },
          "message": "powerpc: Move prom_init() out of asm-prototypes.h\n\nThis is the end of the work started with commit 76222808fc25 (\"powerpc:\nMove C prototypes out of asm-prototypes.h\")\n\nNow that asm/machdep.h doesn't include asm/setup.h anymore, there are\nno conflicts anymore with the function prom_init() defined in\ndrivers/gpu/drm/nouveau/nvkm/subdev/bios/shadowrom.o\n\nSo we can move it to asm/setup.h\n\nSigned-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/e111e4f0addb0fa810d5f6a71d3b8e62c0b53492.1654966508.git.christophe.leroy@csgroup.eu",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7dc3ba0a071892ea212f90f63738fd9f81b1f638"
        },
        {
          "sha": "882c835b71e22ca82361dab3b60b85b557abd72f",
          "author": {
            "email": "jiangjian@cdjrlc.com",
            "name": "Jiang Jian"
          },
          "message": "cxl: drop unexpected word \"the\" in the comments\n\nthere is an unexpected word \"the\" in the comments that need to be dropped\n\nfile: drivers/misc/cxl/cxl.h\nline: 1107\n+/* check if the given pci_dev is on the the cxl vphb bus */\nchanged to\n+/* check if the given pci_dev is on the cxl vphb bus */\n\nSigned-off-by: Jiang Jian <jiangjian@cdjrlc.com>\nAcked-by: Andrew Donnellan <ajd@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220621125321.122280-1-jiangjian@cdjrlc.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/882c835b71e22ca82361dab3b60b85b557abd72f"
        },
        {
          "sha": "6d056b7254f9954522b7bb9947c8779a013d189f",
          "author": {
            "email": "andriy.shevchenko@linux.intel.com",
            "name": "Andy Shevchenko"
          },
          "message": "powerpc/52xx: Remove dead code, i.e. mpc52xx_get_xtal_freq()\n\nIt seems mpc52xx_get_xtal_freq() is not used anywhere. Remove dead code.\n\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nReviewed-by: Wolfram Sang <wsa@kernel.org>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220507100147.5802-1-andriy.shevchenko@linux.intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6d056b7254f9954522b7bb9947c8779a013d189f"
        },
        {
          "sha": "de06fba62af64144aca6f8a8bedbc848d2e5b440",
          "author": {
            "email": "andriy.shevchenko@linux.intel.com",
            "name": "Andy Shevchenko"
          },
          "message": "powerpc/mpc5xxx: Switch mpc5xxx_get_bus_frequency() to use fwnode\n\nSwitch mpc5xxx_get_bus_frequency() to use fwnode in order to help\ncleaning up other parts of the kernel from OF specific code.\n\nNo functional change intended.\n\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nAcked-by: Chris Packham <chris.packham@alliedtelesis.co.nz> # for i2c-mpc\nAcked-by: Wolfram Sang <wsa@kernel.org> # for the I2C part\nAcked-by: Mark Brown <broonie@kernel.org>\nAcked-by: Marc Kleine-Budde <mkl@pengutronix.de> # for mscan/mpc5xxx_can\nAcked-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220507100147.5802-2-andriy.shevchenko@linux.intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/de06fba62af64144aca6f8a8bedbc848d2e5b440"
        },
        {
          "sha": "00bcb550dc60f73d593d2dbb718c4f521c7d7be8",
          "author": {
            "email": "andriy.shevchenko@linux.intel.com",
            "name": "Andy Shevchenko"
          },
          "message": "powerpc/52xx: Get rid of of_node assignment\n\nLet GPIO library assign of_node from the parent device.\nThis allows to move GPIO library and drivers to use fwnode\nAPIs instead of being stuck with OF-only interfaces.\n\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220507100147.5802-3-andriy.shevchenko@linux.intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/00bcb550dc60f73d593d2dbb718c4f521c7d7be8"
        },
        {
          "sha": "a784101f77b1bef4b40f4ad68af3f54fcfa5321b",
          "author": {
            "email": "aik@ozlabs.ru",
            "name": "Alexey Kardashevskiy"
          },
          "message": "KVM: PPC: Book3s: Fix warning about xics_rm_h_xirr_x\n\nThis fixes \"no previous prototype\":\n\narch/powerpc/kvm/book3s_hv_rm_xics.c:482:15:\nwarning: no previous prototype for 'xics_rm_h_xirr_x' [-Wmissing-prototypes]\n\nReported by the kernel test robot.\n\nFixes: b22af9041927 (\"KVM: PPC: Book3s: Remove real mode interrupt controller hcalls handlers\")\nSigned-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>\nReviewed-by: Greg Kurz <groug@kaod.org>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220622055235.1139204-1-aik@ozlabs.ru",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a784101f77b1bef4b40f4ad68af3f54fcfa5321b"
        },
        {
          "sha": "4228a996b072d36f3baafb4afdc2d2d66d2cbadf",
          "author": {
            "email": "mpe@ellerman.id.au",
            "name": "Michael Ellerman"
          },
          "message": "selftests/powerpc: Skip energy_scale_info test on older firmware\n\nOlder machines don't have the firmware feature that enables the code\nthis test is testing. Skip the test if the sysfs directory doesn't\nexist. Also use the FAIL_IF() macro to provide more verbose error\nreporting if an error is encountered.\n\nFixes: 57201d657eb7 (\"selftest/powerpc: Add PAPR sysfs attributes sniff test\")\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220619233103.2666171-1-mpe@ellerman.id.au",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4228a996b072d36f3baafb4afdc2d2d66d2cbadf"
        },
        {
          "sha": "2d386769753a71e57a1a38c7fb79013d3ac451e9",
          "author": {
            "email": "mpe@ellerman.id.au",
            "name": "Michael Ellerman"
          },
          "message": "powerpc: Update asm-prototypes.h comment\n\nThis header was recently cleaned up in commit 76222808fc25 (\"powerpc:\nMove C prototypes out of asm-prototypes.h\"), update the comment to\nreflect it's proper purpose.\n\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220617080243.2177583-1-mpe@ellerman.id.au",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2d386769753a71e57a1a38c7fb79013d3ac451e9"
        },
        {
          "sha": "d7f396461518c766b2436d64b6d3ba6a4c418dcf",
          "author": {
            "email": "christophe.leroy@csgroup.eu",
            "name": "Christophe Leroy"
          },
          "message": "powerpc/powermac: Remove empty function note_scsi_host()\n\nnote_scsi_host() has been an empty function since\ncommit 6ee0d9f744d4 (\"[POWERPC] Remove unused old code\nfrom powermac setup code\").\n\nRemove it.\n\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/26f8b72a4276c0bd8ed63860c7316f6361c351b4.1655978907.git.christophe.leroy@csgroup.eu",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d7f396461518c766b2436d64b6d3ba6a4c418dcf"
        },
        {
          "sha": "890005a7d98f7452cfe86dcfb2aeeb7df01132ce",
          "author": {
            "email": "atrajeev@linux.vnet.ibm.com",
            "name": "Athira Rajeev"
          },
          "message": "powerpc/perf: Optimize clearing the pending PMI and remove WARN_ON for PMI check in power_pmu_disable\n\ncommit 2c9ac51b850d (\"powerpc/perf: Fix PMU callbacks to clear\npending PMI before resetting an overflown PMC\") added a new\nfunction \"pmi_irq_pending\" in hw_irq.h. This function is to check\nif there is a PMI marked as pending in Paca (PACA_IRQ_PMI).This is\nused in power_pmu_disable in a WARN_ON. The intention here is to\nprovide a warning if there is PMI pending, but no counter is found\noverflown.\n\nDuring some of the perf runs, below warning is hit:\n\nWARNING: CPU: 36 PID: 0 at arch/powerpc/perf/core-book3s.c:1332 power_pmu_disable+0x25c/0x2c0\n Modules linked in:\n -----\n\n NIP [c000000000141c3c] power_pmu_disable+0x25c/0x2c0\n LR [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0\n Call Trace:\n [c000000baffcfb90] [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0 (unreliable)\n [c000000baffcfc10] [c0000000003e2f8c] perf_pmu_disable+0x4c/0x60\n [c000000baffcfc30] [c0000000003e3344] group_sched_out.part.124+0x44/0x100\n [c000000baffcfc80] [c0000000003e353c] __perf_event_disable+0x13c/0x240\n [c000000baffcfcd0] [c0000000003dd334] event_function+0xc4/0x140\n [c000000baffcfd20] [c0000000003d855c] remote_function+0x7c/0xa0\n [c000000baffcfd50] [c00000000026c394] flush_smp_call_function_queue+0xd4/0x300\n [c000000baffcfde0] [c000000000065b24] smp_ipi_demux_relaxed+0xa4/0x100\n [c000000baffcfe20] [c0000000000cb2b0] xive_muxed_ipi_action+0x20/0x40\n [c000000baffcfe40] [c000000000207c3c] __handle_irq_event_percpu+0x8c/0x250\n [c000000baffcfee0] [c000000000207e2c] handle_irq_event_percpu+0x2c/0xa0\n [c000000baffcff10] [c000000000210a04] handle_percpu_irq+0x84/0xc0\n [c000000baffcff40] [c000000000205f14] generic_handle_irq+0x54/0x80\n [c000000baffcff60] [c000000000015740] __do_irq+0x90/0x1d0\n [c000000baffcff90] [c000000000016990] __do_IRQ+0xc0/0x140\n [c0000009732f3940] [c000000bafceaca8] 0xc000000bafceaca8\n [c0000009732f39d0] [c000000000016b78] do_IRQ+0x168/0x1c0\n [c0000009732f3a00] [c0000000000090c8] hardware_interrupt_common_virt+0x218/0x220\n\nThis means that there is no PMC overflown among the active events\nin the PMU, but there is a PMU pending in Paca. The function\n\"any_pmc_overflown\" checks the PMCs on active events in\ncpuhw->n_events. Code snippet:\n\n<<>>\nif (any_pmc_overflown(cpuhw))\n \tclear_pmi_irq_pending();\n else\n \tWARN_ON(pmi_irq_pending());\n<<>>\n\nHere the PMC overflown is not from active event. Example: When we do\nperf record, default cycles and instructions will be running on PMC6\nand PMC5 respectively. It could happen that overflowed event is currently\nnot active and pending PMI is for the inactive event. Debug logs from\ntrace_printk:\n\n<<>>\nany_pmc_overflown: idx is 5: pmc value is 0xd9a\npower_pmu_disable: PMC1: 0x0, PMC2: 0x0, PMC3: 0x0, PMC4: 0x0, PMC5: 0xd9a, PMC6: 0x80002011\n<<>>\n\nHere active PMC (from idx) is PMC5 , but overflown PMC is PMC6(0x80002011).\nWhen we handle PMI interrupt for such cases, if the PMC overflown is\nfrom inactive event, it will be ignored. Reference commit:\ncommit bc09c219b2e6 (\"powerpc/perf: Fix finding overflowed PMC in interrupt\")\n\nPatch addresses two changes:\n1) Fix 1 : Removal of warning ( WARN_ON(pmi_irq_pending()); )\n   We were printing warning if no PMC is found overflown among active PMU\n   events, but PMI pending in PACA. But this could happen in cases where\n   PMC overflown is not in active PMC. An inactive event could have caused\n   the overflow. Hence the warning is not needed. To know pending PMI is\n   from an inactive event, we need to loop through all PMC's which will\n   cause more SPR reads via mfspr and increase in context switch. Also in\n   existing function: perf_event_interrupt, already we ignore PMI's\n   overflown when it is from an inactive PMC.\n\n2) Fix 2: optimization in clearing pending PMI.\n   Currently we check for any active PMC overflown before clearing PMI\n   pending in Paca. This is causing additional SPR read also. From point 1,\n   we know that if PMI pending in Paca from inactive cases, that is going\n   to be ignored during replay. Hence if there is pending PMI in Paca, just\n   clear it irrespective of PMC overflown or not.\n\nIn summary, remove the any_pmc_overflown check entirely in\npower_pmu_disable. ie If there is a pending PMI in Paca, clear it, since\nwe are in pmu_disable. There could be cases where PMI is pending because\nof inactive PMC ( which later when replayed also will get ignored ), so\nWARN_ON could give false warning. Hence removing it.\n\nFixes: 2c9ac51b850d (\"powerpc/perf: Fix PMU callbacks to clear pending PMI before resetting an overflown PMC\")\nSigned-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220522142256.24699-1-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/890005a7d98f7452cfe86dcfb2aeeb7df01132ce"
        },
        {
          "sha": "42e0576eec75479fa7709c41e5c3b9ec556b8f4d",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add mask/shift bits for extracting threshold compare field\n\nIn power10, threshold compare field is not part of the raw event code\nand provided via event attribute config1. Hence add the mask and shift\nbits based on event attribute config1, to extract the threshold compare\nvalue for power10\n\nAlso add a new function called get_thresh_cmp_val to compute and return\nthe threshold compare field for a given platform, since incase of\npower10, threshold compare value provided is decimal.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-2-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/42e0576eec75479fa7709c41e5c3b9ec556b8f4d"
        },
        {
          "sha": "a069b5f980e3b65b64b6322b71d5819f90dbb42b",
          "author": {
            "email": "atrajeev@linux.vnet.ibm.com",
            "name": "Athira Rajeev"
          },
          "message": "selftests/powerpc: Add support to fetch \"platform\" and \"base platform\" from auxv to detect platform.\n\nThe /proc/self/auxv contains information about \"platform\" on any system.\nAlso \"base platform\" which is an indication about platform string\ncorresponding to the real PVR. When systems are booted in compat mode,\nsay, power10 booted in power9 mode, \"platform\" will point to power9\nwhereas base platform will point to power10. Incase, if the distro\ndoesn't support platform indicated by real PVR, base platform will have\na default value.\n\nThe mismatch of platform/base platform is an indication of system booted\nin compat mode. In such cases, distro will have a Generic Compat\nregistered which supports basic features for performance monitoring.\n\nSome of the selftest needs to be handled differently ( ex: generic\nevents, alternative events, bhrb filter map) in Generic Compat PMU.\nHence selftest framework needs utility functions to identify such cases.\nOne way is make sure of auxv information. Below condition can be used to\ndetect if Generic Compat PMU is registered. ie:\n\n  if ((AT_PLATFORM != AT_BASE_PLATFORM) && (AT_BASE_PLATFORM != PVR))\n\nthis indicates Generic Compat PMU.\n\nAdd utility function in \"include/utils.h\" to return:\nAT_PLATFORM and AT_BASE_PLATFORM from auxv. Also update misc.c in\n\"sampling_tests\" folder to add function to use above check to determine\npresence of generic compat pmu.\n\nIn other architecture ( like x86 ), pmu_name is exposed via\n\"/sys/bus/event_source/devices/cpu/caps\". The same could be used in\npowerpc in future. Since currently we don't have the \"caps\" support in\npowerpc, patch uses auxv information to detect platform type and compat\nmode. But as placeholder utility function is added considering\npossiblity of getting \"caps\" information via sysfs. If that doesn't\nexist, fallback to using auxv information.\n\nSigned-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-3-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a069b5f980e3b65b64b6322b71d5819f90dbb42b"
        },
        {
          "sha": "50d9c30a685c14e41e44d48a08a08703c680d861",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add interface test for mmcra_thresh_cmp fields\n\nThe testcase uses event code 0x35340401e0 for load only sampling, to\nverify the settings of thresh compare field in Monitor Mode Control\nRegister A (MMCRA: 9-18 bits for power9 and MMCRA: 8-18 bits for\npower10). Testcase checks if the thresh compare field is programmed\ncorrectly via perf interface to MMCRA register.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-4-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/50d9c30a685c14e41e44d48a08a08703c680d861"
        },
        {
          "sha": "61d89900315aa25f6da0c1bc800ce295d74d69f1",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add support for branch sampling in get_intr_regs function\n\nAdd support for sample type as PERF_SAMPLE_BRANCH_STACK in sampling\ntests. This change is a precursor/helper for sampling testcases, that\ntest branck stack feature in perf interface.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-5-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/61d89900315aa25f6da0c1bc800ce295d74d69f1"
        },
        {
          "sha": "c55dabc6d577a864cd618107ea6aaa6cad8c987b",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add interface test for mmcra_ifm field of indirect call type\n\nThe testcase uses \"instructions\" event to check if the\nInstruction filtering mode(IFM) bits are programmed correctly\nfor indirect branch type. Testcase checks if IFM bits are\nprogrammed correctly to Monitor Mode Control Register A (MMCRA)\nvia perf interface for ISA v3.1 platform.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-6-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c55dabc6d577a864cd618107ea6aaa6cad8c987b"
        },
        {
          "sha": "faa64ddc1e398131e7eaadc8f03cb7bd3904eff2",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add interface test for mmcra_ifm field for any branch type\n\nThe testcase uses \"instructions\" event to check if the\nInstruction filtering mode(IFM) bits are programmed correctly\nfor type any branch. Testcase checks if IFM bits is\nprogrammed correctly to Monitor Mode Control Register A (MMCRA)\nvia perf interface.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-7-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/faa64ddc1e398131e7eaadc8f03cb7bd3904eff2"
        },
        {
          "sha": "014fb4a3ae746276f4320f7010d03157485051cb",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add interface test for mmcra_ifm field for conditional branch type\n\nThe testcase uses \"instructions\" event to check if the\nInstruction filtering mode(IFM) bits are programmed correctly\nfor conditional branch type. Testcase checks if IFM bits is\nprogrammed correctly to Monitor Mode Control Register A (MMCRA)\nvia perf interface for ISA v3.1 platform.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-8-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/014fb4a3ae746276f4320f7010d03157485051cb"
        },
        {
          "sha": "84cc4e66d90f6624f821df381073813dd502f657",
          "author": {
            "email": "kjain@linux.ibm.com",
            "name": "Kajol Jain"
          },
          "message": "selftests/powerpc/pmu: Add interface test for bhrb disable field\n\nThe testcase uses \"instructions\" event to generate the\nsamples and fetch Monitor Mode Control Register A (MMCRA)\nwhen overflow. Branch History Rolling Buffer(bhrb) disable bit\nis part of MMCRA which need to be verified by perf interface.\nTestcase checks if the bhrb disable bit of MMCRA register is\nprogrammed correctly via perf interface for ISA v3.1 platform\nAlso make get_mmcra_ifm return type as u64.\n\nSigned-off-by: Kajol Jain <kjain@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-9-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/84cc4e66d90f6624f821df381073813dd502f657"
        },
        {
          "sha": "9cfd110a36649f9452120a648f15f32d1c82b99d",
          "author": {
            "email": "atrajeev@linux.vnet.ibm.com",
            "name": "Athira Rajeev"
          },
          "message": "selftests/powerpc/pmu: Refactor the platform check and add macros to find array size/PVR\n\nThe platform check for selftest support \"check_pvr_for_sampling_tests\"\nis specific to sampling tests which includes PVR check, presence of\nPMU and extended regs support. Extended regs support is needed for\nsampling tests which tests whether PMU registers are programmed\ncorrectly. There could be other sampling tests which may not need\nextended regs, example, bhrb filter tests which only needs validity\ncheck via event open.\n\nHence refactor the platform check to have a common function\n\"platform_check_for_tests\" that checks only for PVR check\nand presence of PMU. The existing function\n\"check_pvr_for_sampling_tests\" will invoke the common function\nand also will include checks for extended regs specific for\nsampling. The common function can also be used by tests other\nthan sampling like event code tests.\n\nAdd macro to find array size (\"ARRAY_SIZE\") to sampling\ntests \"misc.h\" file. This can be used in next tests to\nfind event array size. Also update \"include/reg.h\" to\nadd macros to find minor and major version from PVR which\nwill be used in testcases.\n\nSigned-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20220610134113.62991-10-atrajeev@linux.vnet.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9cfd110a36649f9452120a648f15f32d1c82b99d"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-07T00:50:01Z"
  },
  {
    "id": "23297956481",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10656780153,
      "size": 64,
      "distinct_size": 64,
      "ref": "refs/heads/master",
      "head": "4d1044fcb996e8de9b9ab392f4a767890e45202d",
      "before": "af3e9579ecfbe1796334bb25a2f0a6437983673a",
      "commits": [
        {
          "sha": "ab37c305bf890727dd808b1dd6526b28491915d7",
          "author": {
            "email": "chi.minghao@zte.com.cn",
            "name": "Minghao Chi"
          },
          "message": "gfs2: Remove redundant NULL check before kfree\n\nkfree on NULL pointer is a no-op.\n\nReported-by: Zeal Robot <zealci@zte.com.cn>\nSigned-off-by: Minghao Chi <chi.minghao@zte.com.cn>\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ab37c305bf890727dd808b1dd6526b28491915d7"
        },
        {
          "sha": "294b2111ff1027a942c362d523b847d73d91b70c",
          "author": {
            "email": "conor.dooley@microchip.com",
            "name": "Conor Dooley"
          },
          "message": "riscv: dts: microchip: remove spi-max-frequency property\n\nspi-max-frequency property is supposed to be a per SPI peripheral device\nproperty, not a SPI controller property, so remove it.\n\nReported-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/lkml/20220526014141.2872567-1-robh@kernel.org/\nSigned-off-by: Conor Dooley <conor.dooley@microchip.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/294b2111ff1027a942c362d523b847d73d91b70c"
        },
        {
          "sha": "565f82b57abe88ca68688dff1740b10b3c3049e4",
          "author": {
            "email": "rpeterso@redhat.com",
            "name": "Bob Peterson"
          },
          "message": "gfs2: Rewrap overlong comment in do_promote\n\nRewrap the comment to keep the line length below 80 characters.\n\nSigned-off-by: Bob Peterson <rpeterso@redhat.com>\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/565f82b57abe88ca68688dff1740b10b3c3049e4"
        },
        {
          "sha": "3f8ccf5f1a8c349364055b73caf1bb0314229976",
          "author": {
            "email": "nagasuresh.relli@microchip.com",
            "name": "Nagasuresh Relli"
          },
          "message": "riscv: dts: microchip: remove spi-max-frequency property\n\nRemove the spi-max-frequency property from the spi0 controller\nnode as it is supposed to be a per SPI peripheral device property.\n\nReported-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/lkml/20220526014141.2872567-1-robh@kernel.org/\nSigned-off-by: Nagasuresh Relli <nagasuresh.relli@microchip.com>\nSigned-off-by: Conor Dooley <conor.dooley@microchip.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3f8ccf5f1a8c349364055b73caf1bb0314229976"
        },
        {
          "sha": "c360cbec351103f4539b2bf68e42c35d252849ab",
          "author": {
            "email": "jszhang@kernel.org",
            "name": "Jisheng Zhang"
          },
          "message": "riscv: introduce unified static key mechanism for ISA extensions\n\nCurrently, riscv has several extensions which may not be supported on\nall riscv platforms, for example, FPU and so on. To support unified\nkernel Image style, we need to check whether the feature is supported\nor not. If the check sits at hot code path, then performance will be\nimpacted a lot. static key can be used to solve the issue. In the past,\nFPU support has been converted to use static key mechanism. I believe\nwe will have similar cases in the future.\n\nThis patch tries to add an unified mechanism to use static keys for\nsome ISA extensions by implementing an array of default-false static keys\nand enabling them when detected.\n\nSigned-off-by: Jisheng Zhang <jszhang@kernel.org>\nReviewed-by: Atish Patra <atishp@rivosinc.com>\nReviewed-by: Anup Patel <anup@brainfault.org>\nLink: https://lore.kernel.org/r/20220522153543.2656-2-jszhang@kernel.org\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c360cbec351103f4539b2bf68e42c35d252849ab"
        },
        {
          "sha": "5d0fbbbe1d8742bfef7a1123f5c9577396765aa3",
          "author": {
            "email": "jszhang@kernel.org",
            "name": "Jisheng Zhang"
          },
          "message": "riscv: switch has_fpu() to the unified static key mechanism\n\nThis is to use the unified static key mechanism instead of putting\nstatic key related here and there.\n\nSigned-off-by: Jisheng Zhang <jszhang@kernel.org>\nReviewed-by: Atish Patra <atishp@rivosinc.com>\nReviewed-by: Anup Patel <anup@brainfault.org>\nLink: https://lore.kernel.org/r/20220522153543.2656-3-jszhang@kernel.org\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5d0fbbbe1d8742bfef7a1123f5c9577396765aa3"
        },
        {
          "sha": "89793a61d8e7fcd6c161180d692201fcf2b2b48d",
          "author": {
            "email": "palmer@rivosinc.com",
            "name": "Palmer Dabbelt"
          },
          "message": "RISC-V: Use the extension probing code to enable the FPU\n\nThis pull the static key management code for the FPU into the generic\nISA extension probing code, so it can be used by other extensions that\nneed static keys.\n\n* 'riscv-static_key' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/palmer/linux:\n  riscv: switch has_fpu() to the unified static key mechanism\n  riscv: introduce unified static key mechanism for ISA extensions",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/89793a61d8e7fcd6c161180d692201fcf2b2b48d"
        },
        {
          "sha": "b684001a5eb79d9bf36f655547bc226dedc8bc03",
          "author": {
            "email": "heiko@sntech.de",
            "name": "Heiko Stuebner"
          },
          "message": "riscv: make patch-function pointer more generic in cpu_manufacturer_info struct\n\nDuring review the naming of the function-pointer was called\nconfusing as the vendor id is just one of three inputs for\nthe patching and indeed it serves no real purpose, as with\nrecent changes the function pointer is not a static\nglobal element anymore, so drop the \"vendor_\" prefix.\n\nSuggested-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Heiko Stuebner <heiko@sntech.de>\nLink: https://lore.kernel.org/r/20220526205646.258337-4-heiko@sntech.de\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b684001a5eb79d9bf36f655547bc226dedc8bc03"
        },
        {
          "sha": "1771c8c9e65a20128f93df107353a5f4cb91546a",
          "author": {
            "email": "heiko@sntech.de",
            "name": "Heiko Stuebner"
          },
          "message": "riscv: remove usage of function-pointers from cpufeatures and t-head errata\n\nHaving a list of alternatives to check with a per-entry function pointer\nto a check function is nice style-wise. But in case of early-alternatives\nit can clash with the non-relocated kernel and the function pointer in\nthe list pointing to a completely wrong location.\n\nThis isn't an issue with one or two list entries, as in that case the\ncompiler seems to unroll the loop and even usage of the list structure\nand then only does relative jumps into the check functions based on this.\n\nWhen adding a third entry to either list though, the issue that was\nhiding there from the beginning is triggered resulting a jump to a\nmemory address that isn't part of the kernel at all.\n\nThe list of features/erratas only contained an unused name and the\npointer to the check function, so an easy solution for the problem\nis to just unroll the loop in code, dismantle the whole list structure\nand just call the relevant check functions one by one ourself.\n\nFor the T-Head errata this includes moving the stage-check inside\nthe check functions.\n\nThe issue is only relevant for things that might be called for early-\nalternatives (T-Head and possible future main extensions), so the\nSiFive erratas were not affected from the beginning, as they got\nan early return for early-alternatives in the original patchset.\n\nSigned-off-by: Heiko Stuebner <heiko@sntech.de>\nTested-by: Samuel Holland <samuel@sholland.org>\nLink: https://lore.kernel.org/r/20220526205646.258337-6-heiko@sntech.de\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1771c8c9e65a20128f93df107353a5f4cb91546a"
        },
        {
          "sha": "73448ae6204faa636292ae0d7ba8b2f6eb48179d",
          "author": {
            "email": "palmer@rivosinc.com",
            "name": "Palmer Dabbelt"
          },
          "message": "RISC-V: Some Svpbmt fixes and cleanups\n\nSome additionals comments and notes from autobuilders received after the\nseries got applied, warranted some changes.\n\n* 'riscv-svpbmt' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/palmer/linux:\n  riscv: remove usage of function-pointers from cpufeatures and t-head errata\n  riscv: make patch-function pointer more generic in cpu_manufacturer_info struct\n  riscv: Improve description for RISCV_ISA_SVPBMT Kconfig symbol\n  riscv: drop cpufeature_apply_feature tracking variable\n  riscv: fix dependency for t-head errata",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/73448ae6204faa636292ae0d7ba8b2f6eb48179d"
        },
        {
          "sha": "bb356ddb78b257f0807affb86306c5002f803024",
          "author": {
            "email": "macro@orcam.me.uk",
            "name": "Maciej W. Rozycki"
          },
          "message": "RISC-V: PCI: Avoid handing out address 0 to devices\n\nFor RISC-V platforms we permit assigning addresses from 0 to PCI devices,\nboth in the memory and the I/O bus space, and we happily do so if there\nis no conflict, e.g.:\n\npci 0000:07:00.0: BAR 0: assigned [io  0x0000-0x0007]\npci 0000:07:00.1: BAR 0: assigned [io  0x0008-0x000f]\npci 0000:06:01.0: PCI bridge to [bus 07]\npci 0000:06:01.0:   bridge window [io  0x0000-0x0fff]\n\n(with the SiFive HiFive Unmatched RISC-V board and a dual serial port\noption card based on the OxSemi OXPCIe952 device wired for the legacy\nUART mode).\n\nAddress 0 is treated specially however in many places, for example in\n`pci_iomap_range' and `pci_iomap_wc_range' we require that the start\naddress is non-zero, and even if we let such an address through, then\nindividual device drivers could reject a request to handle a device at\nsuch an address, such as in `uart_configure_port'.  Consequently given\ndevices configured as shown above only one is actually usable:\n\nSerial: 8250/16550 driver, 4 ports, IRQ sharing disabled\nserial 0000:07:00.0: enabling device (0000 -> 0001)\nserial: probe of 0000:07:00.0 failed with error -12\nserial 0000:07:00.1: enabling device (0000 -> 0001)\nserial 0000:07:00.1: detected caps 00000700 should be 00000500\n0000:07:00.1: ttyS0 at I/O 0x8 (irq = 39, base_baud = 15625000) is a 16C950/954\n\nTherefore avoid handing out address 0, by bumping the lowest address\navailable to PCI via PCIBIOS_MIN_IO and PCIBIOS_MIN_MEM up by 4 and 16\nrespectively, which is the minimum allocation size for I/O and memory\nBARs.\n\nWith this in place the system in question we have:\n\npci 0000:07:00.0: BAR 0: assigned [io  0x1000-0x1007]\npci 0000:07:00.1: BAR 0: assigned [io  0x1008-0x100f]\npci 0000:06:01.0: PCI bridge to [bus 07]\npci 0000:06:01.0:   bridge window [io  0x1000-0x1fff]\n\nand then devices work correctly:\n\nSerial: 8250/16550 driver, 4 ports, IRQ sharing disabled\nserial 0000:07:00.0: enabling device (0000 -> 0001)\nserial 0000:07:00.0: detected caps 00000700 should be 00000500\n0000:07:00.0: ttyS0 at I/O 0x1000 (irq = 38, base_baud = 15625000) is a 16C950/954\nserial 0000:07:00.1: enabling device (0000 -> 0001)\nserial 0000:07:00.1: detected caps 00000700 should be 00000500\n0000:07:00.1: ttyS1 at I/O 0x1008 (irq = 39, base_baud = 15625000) is a 16C950/954\n\nEspecially I/O space ranges are particularly valuable, because bridges\nonly decode bits from 12 up and consequently where 16-bit addressing is\nin effect, as few as 16 separate ranges can be assigned to individual\nbuses only, however a generic change to avoid handing out address 0 only\nhas turned out controversial as per the discussion referred via the link\nbelow.\n\nConversely sorting this out in platform code has been standard practice\nsince forever to avoid a clash with legacy devices subtractively decoded\nby the southbridge where present.  This can be revised should a generic\nsolution be adopted sometime.\n\nSigned-off-by: Maciej W. Rozycki <macro@orcam.me.uk>\nLink: https://lore.kernel.org/r/alpine.DEB.2.21.2202260044180.25061@angie.orcam.me.uk\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bb356ddb78b257f0807affb86306c5002f803024"
        },
        {
          "sha": "fe39dc98fb241a67f4a5a5eb6f842a05c4e316b8",
          "author": {
            "email": "jiaming@nfschina.com",
            "name": "Zhang Jiaming"
          },
          "message": "gfs2: Fix spelling mistake in comment\n\nChange 'accomodate' to 'accommodate'.\n\nSigned-off-by: Zhang Jiaming <jiaming@nfschina.com>\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fe39dc98fb241a67f4a5a5eb6f842a05c4e316b8"
        },
        {
          "sha": "44dab005fd4298c209ea32ffda6131cad4358d21",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Minor gfs2_glock_nq_m cleanup\n\nAdd state and flags arguments to gfs2_rlist_alloc() to make it somewhat more\nobvious which state and flags an rlist uses.  With that, stop knocking off\nflags in gfs2_glock_nq_m() and its nq_m_sync() helper that are never set in the\nfirst place.\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/44dab005fd4298c209ea32ffda6131cad4358d21"
        },
        {
          "sha": "bdff777cbb582da52cf4b536adc0815a41b407ed",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Fix up gfs2_glock_async_wait\n\nSince commit 1fc05c8d8426 (\"gfs2: cancel timed-out glock requests\"), a\npending locking request can be canceled by calling gfs2_glock_dq() on\nthe pending holder.  In gfs2_glock_async_wait(), when we time out, use\nthat to cancel the remaining locking requests and dequeue the locking\nrequests already granted.  That's simpler as well as more efficient than\nwaiting for all locking requests to eventually be granted and dequeuing\nthem then.\n\nIn addition, gfs2_glock_async_wait() promises that by the time the\nfunction completes, all glocks are either granted or dequeued, but the\nimplementation doesn't keep that promise if individual locking requests\nfail.  Fix that as well.\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bdff777cbb582da52cf4b536adc0815a41b407ed"
        },
        {
          "sha": "53d69132958f7e144973d02ad0f0798386219efd",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Instantiate glocks ouside of glock state engine\n\nInstantiate glocks outside of the glock state engine: there is no real\nreason for instantiating them inside the glock state engine; it only\ncomplicates the code.\n\nInstead, instantiate them in gfs2_glock_wait() and gfs2_glock_async_wait()\nusing the new gfs2_glock_holder_ready() helper.  On top of that, the only\nother place that acquires a glock without using gfs2_glock_wait() or\ngfs2_glock_async_wait() is gfs2_upgrade_iopen_glock(), so call\ngfs2_glock_holder_ready() there as well.\n\nIf a dinode has a pending truncate, the glock-specific instantiate function\nfor inodes wakes up the truncate function in the quota daemon.  Waiting for\nthe completion of the truncate was previously done by the glock state\nengine, but we now need to wait in inode_go_instantiate().\n\nThis also means that gfs2_instantiate() will now no longer return any\n\"special\" error codes.\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/53d69132958f7e144973d02ad0f0798386219efd"
        },
        {
          "sha": "de3f906f0af0c3f5d862b07df4d020c9322cd9c3",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Revert 'Fix \"truncate in progress\" hang'\n\nNow that interrupted truncates are completed in the context of the\nprocess taking the glock, there is no need for the glock state engine to\ndelegate that task to gfs2_quotad or for quotad to perform those\ntruncates anymore.  Get rid of the obsolete associated infrastructure.\n\nReverts commit 813e0c46c9e2 (\"GFS2: Fix \"truncate in progress\" hang\").\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>\nSigned-off-by: Bob Peterson <rpeterso@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/de3f906f0af0c3f5d862b07df4d020c9322cd9c3"
        },
        {
          "sha": "86c30a01f5da411d0d090f14f7aeadd8c20b2d05",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Add new go_held glock operation\n\nRight now, inode_go_instantiate() contains functionality that relates to\nhow a glock is held rather than the glock itself, like waiting for\npending direct I/O to complete and completing interrupted truncates.\nThis code is meant to be run each time a holder is acquired, but\ngo_instantiate is actually only called once, when the glock is\ninstantiated.\n\nTo fix that, introduce a new go_held glock operation that is called each\ntime a glock holder is acquired.  Move the holder specific code in\ninode_go_instantiate() over to inode_go_held().\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/86c30a01f5da411d0d090f14f7aeadd8c20b2d05"
        },
        {
          "sha": "5f38a4d3c44b01495dcb4952b53d90170a30c51a",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Make go_instantiate take a glock\n\nMake go_instantiate take a glock instead of a glock holder as its argument:\nthis handler is supposed to instantiate the object associated with the glock.\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5f38a4d3c44b01495dcb4952b53d90170a30c51a"
        },
        {
          "sha": "8f0028fc60a42a1305040676ce22e5f5488efee5",
          "author": {
            "email": "agruenba@redhat.com",
            "name": "Andreas Gruenbacher"
          },
          "message": "gfs2: Use better variable name\n\nIn do_promote() and add_to_queue(), use current_gh as the variable name\nfor the first strong holder we could find: this matches the variable\nname is may_grant(), and more clearly indicates that we're interested in\none (any) of the current strong holders.\n\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8f0028fc60a42a1305040676ce22e5f5488efee5"
        },
        {
          "sha": "0befb8511e6a91716980c40c552acc5eec963cbd",
          "author": {
            "email": "rpeterso@redhat.com",
            "name": "Bob Peterson"
          },
          "message": "gfs2: do_promote glock holder stealing fix\n\nIn do_promote(), when the glock had no strong holders, we were\naccidentally calling demote_incompat_holders() with new_gh == NULL, so\nno weak holders were considered incompatible.  Instead, the new holder\nshould have been passed in.\n\nFor doing that, the HIF_HOLDER flag needs to be set in new_gh to prevent\nmay_grant() from complaining.  This means that the new holder will now\nbe recognized as a current holder, so skip over it explicitly in\ndemote_incompat_holders() to prevent it from being dequeued.\n\nTo further clarify things, we can now rename new_gh to current_gh in\ndemote_incompat_holders(); after all, the HIF_HOLDER flag is already set,\nwhich means the new holder is already a current holder.\n\nSigned-off-by: Bob Peterson <rpeterso@redhat.com>\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0befb8511e6a91716980c40c552acc5eec963cbd"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-06T22:07:36Z"
  },
  {
    "id": "23297534290",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10656486257,
      "size": 1,
      "distinct_size": 1,
      "ref": "refs/heads/master",
      "head": "af3e9579ecfbe1796334bb25a2f0a6437983673a",
      "before": "20cf903a0c407cef19300e5c85a03c82593bde36",
      "commits": [
        {
          "sha": "af3e9579ecfbe1796334bb25a2f0a6437983673a",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Revert \"iommu/dma: Add config for PCI SAC address trick\"\n\nThis reverts commit 4bf7fda4dce22214c70c49960b1b6438e6260b67.\n\nIt turns out that it was hopelessly naive to think that this would work,\nconsidering that we've always done this.  The first machine I actually\ntested this on broke at bootup, getting to\n\n    Reached target cryptsetup.target - Local Encrypted Volumes.\n\nand then hanging.  It's unclear what actually fails, since there's a lot\nelse going on around that time (eg amdgpu probing also happens around\nthat same time, but it could be some other random init thing that didn't\ncomplete earlier and just caused the boot to hang at that point).\n\nThe expectations that we should default to some unsafe and untested mode\nseems entirely unfounded, and the belief that this wouldn't affect\nmodern systems is clearly entirely false.  The machine in question is\nabout two years old, so it's not exactly shiny, but it's also not some\ndusty old museum piece PDP-11 in a closet.\n\nCc: Robin Murphy <robin.murphy@arm.com>\nCc: Christoph Hellwig <hch@lst.de>\nCc: John Garry <john.garry@huawei.com>\nCc: Joerg Roedel <jroedel@suse.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/af3e9579ecfbe1796334bb25a2f0a6437983673a"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-06T20:30:19Z"
  },
  {
    "id": "23296907111",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10656057379,
      "size": 1000,
      "distinct_size": 1322,
      "ref": "refs/heads/master",
      "head": "20cf903a0c407cef19300e5c85a03c82593bde36",
      "before": "6614a3c3164a5df2b54abb0b3559f51041cf705b",
      "commits": [
        {
          "sha": "b837870fe17f21cf80b15d143c9ea0bc6b342741",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: Intel: mtl: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-6-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b837870fe17f21cf80b15d143c9ea0bc6b342741"
        },
        {
          "sha": "9fd8fcd03451ea3f04af9a419748248d3fa8fb59",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: ipc3-dtrace: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-7-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9fd8fcd03451ea3f04af9a419748248d3fa8fb59"
        },
        {
          "sha": "e16809a74f09b2c2e066b3d7cf1d87be2a75911e",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: ipc3-loader: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-8-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e16809a74f09b2c2e066b3d7cf1d87be2a75911e"
        },
        {
          "sha": "f132dc020270976fe83c86f8c826890873023980",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: ipc3-topology: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-9-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f132dc020270976fe83c86f8c826890873023980"
        },
        {
          "sha": "3809264b53906b8b666b93831ecc23a00e119b68",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: ipc4-topology remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-10-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3809264b53906b8b666b93831ecc23a00e119b68"
        },
        {
          "sha": "298e3aba1b56d19dcb70e10ffe93057d1ddd18f6",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: sof-client: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-11-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/298e3aba1b56d19dcb70e10ffe93057d1ddd18f6"
        },
        {
          "sha": "b3ec3eb2baaad057631ab7e09c38ab3ad5c7a42b",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: ipc4: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-12-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b3ec3eb2baaad057631ab7e09c38ab3ad5c7a42b"
        },
        {
          "sha": "46bc6bc3a6a3af5306e8e3320a083cf3c32350d4",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: Intel: boards: hda: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-13-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/46bc6bc3a6a3af5306e8e3320a083cf3c32350d4"
        },
        {
          "sha": "d2d19cb6ed13eb54dd6c958f3808a23820c3ebba",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: Intel: boards: sof_sdw: remove use of __func__ in dev_dbg\n\nThe module and function information can be added with\n'modprobe foo dyndbg=+pmf'\n\nSuggested-by: Greg KH <gregkh@linuxfoundation.org>\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616215351.135643-14-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d2d19cb6ed13eb54dd6c958f3808a23820c3ebba"
        },
        {
          "sha": "7adadfb06b9839fa7d9de0cde7ad57a3be3665f0",
          "author": {
            "email": "peter.ujfalusi@gmail.com",
            "name": "Peter Ujfalusi"
          },
          "message": "ASoC: twl4030: Drop legacy, non DT boot support\n\nLegacy or non DT boot is no longer possible on systems where the\ntw4030/5030 is used.\n\nDrop the support for handling legacy pdata and replace it with a local\nboard_params struct to allow further cleanups on the mfd side.\n\nSigned-off-by: Peter Ujfalusi <peter.ujfalusi@gmail.com>\nLink: https://lore.kernel.org/r/20220616153521.29701-1-peter.ujfalusi@gmail.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7adadfb06b9839fa7d9de0cde7ad57a3be3665f0"
        },
        {
          "sha": "bdb94f002eb915a11333b396092870583919754f",
          "author": {
            "email": "broonie@kernel.org",
            "name": "Mark Brown"
          },
          "message": "ASoC: SOF/Intel: remove __func__ from dev_dbg()\n\nMerge series from Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>:\n\nCleanups suggested by Greg KH during SoundWire reviews, since the\n__func__ information can be added with the dyndbg kernel parameter\n[1].\n\nThe first two patches change the error level in cases where the use of\ndev_dbg() was inconsistent with an aborted programming sequence.\n\n[1] https://lore.kernel.org/alsa-devel/20220610023537.27223-2-yung-chuan.liao@linux.intel.com/",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bdb94f002eb915a11333b396092870583919754f"
        },
        {
          "sha": "8b409f754b148491792251df290b15c78b6814f3",
          "author": {
            "email": "broonie@kernel.org",
            "name": "Mark Brown"
          },
          "message": "ASoC: minor kernel-doc corrections\n\nMerge series from Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>:\n\nRemove warnings with make W=1",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8b409f754b148491792251df290b15c78b6814f3"
        },
        {
          "sha": "ba46bd04a4218defa2b35d84983e915e166f1572",
          "author": {
            "email": "broonie@kernel.org",
            "name": "Mark Brown"
          },
          "message": "ASoC: Intel: Chromebooks: remap jack pins\n\nMerge series from Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>:\n\nThis patchset adds the missing jack pin remapping needed by upstream\nUCM on Chromebooks, suggested by Jaroslav Kysela [1].\n\nThese patches were succesfully tested on GeminiLake and JasperLake\nplatforms, and generalized to other Chromebooks.\n\n[1] https://mailman.alsa-project.org/pipermail/sound-open-firmware/2022-June/004468.html",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ba46bd04a4218defa2b35d84983e915e166f1572"
        },
        {
          "sha": "442302003bd2b151e12d52b0af9a7dac131bf931",
          "author": {
            "email": "sbinding@opensource.cirrus.com",
            "name": "Stefan Binding"
          },
          "message": "ASoC: ops: Fix integer detection for when max possible values > 1\n\nThe standard snd_soc_info_volsw() allows a two value control to be\ndefined as an integer control only if the control name ends in\n\"Volume\". It achieves this by creating a substring if it contains\n\" Volume\", and ensuring this exists at the end of the name. The\nvolume substring is then used to decide whether the type is a\nSNDRV_CTL_ELEM_TYPE_INTEGER or SNDRV_CTL_ELEM_TYPE_BOOLEAN.\nHowever this volume substring is only computed for a two value\ncontrol.\nThis means for controls where there are more than two possible\nvalues, the substring is never created, so in this case the\nsubstring remains NULL, and the condition yields\nSNDRV_CTL_ELEM_TYPE_BOOLEAN, even though there are more than 2\npossible values.\nIf there are more than 2 possible values for the control,\nthen it should always be an integer control.\n\nFixes: aa2a4b897132 (\"ASoC: ops: Fix boolean/integer detection for simple controls\")\n\nSigned-off-by: Stefan Binding <sbinding@opensource.cirrus.com>\nReviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>\nLink: https://lore.kernel.org/r/20220617153606.2619457-1-sbinding@opensource.cirrus.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/442302003bd2b151e12d52b0af9a7dac131bf931"
        },
        {
          "sha": "6c9e9046e1ff356bda66661213735d33c6cfea53",
          "author": {
            "email": "fshao@chromium.org",
            "name": "Fei Shao"
          },
          "message": "ASoC: mediatek: mt8186: Fix mutex double unlock in GPIO request\n\nThe lockdep mechanism revealed an unbalanced unlocking on MT8186:\n\n  [    2.993966] WARNING: bad unlock balance detected!\n  [    2.993978] -------------------------------------\n  [    2.993983] kworker/u16:1/10 is trying to release lock (gpio_request_mutex) at:\n  [    2.993994] [<ffffffdcd9adebf8>] mt8186_afe_gpio_request+0xf8/0x210\n  [    2.994012] but there are no more locks to release!\n\nThe cause is that the mutex will be double unlocked if dai is unknown\nduring GPIO selection, and this patch fixes it.\n\nFixes: cfa9a966f12a (\"ASoC: mediatek: mt8186: support gpio control in platform driver\")\n\nSigned-off-by: Fei Shao <fshao@chromium.org>\nLink: https://lore.kernel.org/r/20220617111003.2014395-1-fshao@chromium.org\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6c9e9046e1ff356bda66661213735d33c6cfea53"
        },
        {
          "sha": "4ea3bfd13a2484b5f1c19f60b1dc7494f261f0a4",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: SOF: pcm: use pm_resume_and_get() on component probe\n\nBefore initiating IPC and/or bus transactions when loading the\ntopology during a component probe, which happens on card\nregistration/creation, make sure the device for the SOF driver is\npm_runtime active.\n\nThe SOF probe is not necessarily followed by the component probe, such\na timing assumption can be broken in driver bind/unbind tests. This\ncan be artifially shown if the module for the machine driver is\n'blacklisted' and the SOF device becomes pm_runtime_suspended before\nmanually calling modprobe to register the card.\n\nIn an initial experiment, pm_resume_and_get() was called from\nsoc-component.c, since the current ASoC component model is arguably\nmissing dependencies between component status and device\nstatus. However this approach proved too invasive and breaks all\nexisting HDMI playback solutions on Intel platforms.\n\nWhile this will result in duplication of code, generating pm_runtime\ntransitions only if strictly required for a given component makes more\nsense overall. This patch adds the pm_runtime resume transition for\nSOF only.\n\nBugLink: https://github.com/thesofproject/linux/issues/3651\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Rander Wang <rander.wang@intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616210825.132093-2-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4ea3bfd13a2484b5f1c19f60b1dc7494f261f0a4"
        },
        {
          "sha": "011e397f5c9c96e533d4a244af84e74c9caefb83",
          "author": {
            "email": "pierre-louis.bossart@linux.intel.com",
            "name": "Pierre-Louis Bossart"
          },
          "message": "ASoC: codecs: soundwire: call pm_runtime_resume() in component probe\n\nMake sure that the bus and codecs are pm_runtime active when the card\nis registered/created. This avoid timeouts when accessing registers.\n\nBugLink: https://github.com/thesofproject/linux/issues/3651\nBugLink: https://github.com/thesofproject/linux/issues/3650\nSigned-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>\nReviewed-by: Rander Wang <rander.wang@intel.com>\nReviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>\nReviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>\nReviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>\nLink: https://lore.kernel.org/r/20220616210825.132093-3-pierre-louis.bossart@linux.intel.com\nSigned-off-by: Mark Brown <broonie@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/011e397f5c9c96e533d4a244af84e74c9caefb83"
        },
        {
          "sha": "57b06e9711a5ed5accd04b301da0f27f04aa21d3",
          "author": {
            "email": "broonie@kernel.org",
            "name": "Mark Brown"
          },
          "message": "ASoC: SOF: Intel: fix resume from hibernate\n\nMerge series from Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>:\n\nThe enablement of IMR-based DSP boot helped reduce resume latency, but\nunfortunately the context is not saved in S4 and S5 which leads to\nmultiple reports of boot failures.\n\nThis patchset forces a full firmware reload/reboot when resuming from\nS4/S5 and restores functionality.",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/57b06e9711a5ed5accd04b301da0f27f04aa21d3"
        },
        {
          "sha": "87a36978b27a32484423b9b0765c57939e162237",
          "author": {
            "email": "broonie@kernel.org",
            "name": "Mark Brown"
          },
          "message": "ASoC: SOF/soundwire: use resume_and_get on component probe\n\nMerge series from Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>:\n\nWhile testing driver bind/unbind sequences, I stumbled on a corner\ncase where the SoundWire bus can be suspended before the ASoC card\nregistration happens. During the registration, register accesses would\nthen lead to timeouts. This does not happen in regular usages where\nthe card registration happens within the 3-second time window before\nsuspend.\n\nAdding a simple pm_runtime_resume_and_get() on component probe solves\nthe issue, but experiments showed it was too invasive to add at the\nASoC core level, with multiple regressions reported by our CI.\n\nThis patchset limits the additional resume to the SOF and SoundWire\ncodec drivers. An additional patch for the soundwire/intel component\nwill be sent separately.",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/87a36978b27a32484423b9b0765c57939e162237"
        },
        {
          "sha": "cd76175a2b204911a3cddef36b99e56945b6938c",
          "author": {
            "email": "tiwai@suse.de",
            "name": "Takashi Iwai"
          },
          "message": "ALSA: rawmidi: Make internal functions local static\n\n__snd_rawmidi_transmit_peek() and __snd_rawmidi_transmit_ack() are\nnever called from the outside.  Let's make them local static and\nunexport them.\n\nLink: https://lore.kernel.org/r/20220617144051.18985-2-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cd76175a2b204911a3cddef36b99e56945b6938c"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-06T18:20:02Z"
  },
  {
    "id": "23291305230",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10652331730,
      "size": 284,
      "distinct_size": 284,
      "ref": "refs/heads/master",
      "head": "6614a3c3164a5df2b54abb0b3559f51041cf705b",
      "before": "74cae210a335d159f2eb822e261adee905b6951a",
      "commits": [
        {
          "sha": "cd16dd03737c30608b78d235b17b3ab935ed18db",
          "author": {
            "email": "peterx@redhat.com",
            "name": "Peter Xu"
          },
          "message": "mm/x86: remove dead code for hugetlbpage.c\n\nIt seems to exist since the old times and never used once.  Remove them.\n\nLink: https://lkml.kernel.org/r/20220525195220.10241-1-peterx@redhat.com\nSigned-off-by: Peter Xu <peterx@redhat.com>\nAcked-by: Muchun Song <songmuchun@bytedance.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cd16dd03737c30608b78d235b17b3ab935ed18db"
        },
        {
          "sha": "0b82ade6c042907e4f24bbe826958a896d24700d",
          "author": {
            "email": "bh1scw@gmail.com",
            "name": "Fanjun Kong"
          },
          "message": "mm: use PAGE_ALIGNED instead of IS_ALIGNED\n\n<linux/mm.h> already provides the PAGE_ALIGNED macro.  Let's use this\nmacro instead of IS_ALIGNED and passing PAGE_SIZE directly.\n\nLink: https://lkml.kernel.org/r/20220526140257.1568744-1-bh1scw@gmail.com\nSigned-off-by: Fanjun Kong <bh1scw@gmail.com>\nAcked-by: Muchun Song <songmuchun@bytedance.com>\nReviewed-by: Miaohe Lin <linmiaohe@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0b82ade6c042907e4f24bbe826958a896d24700d"
        },
        {
          "sha": "4f5ceb8851f0081af54313abbf56de1615911faf",
          "author": {
            "email": "songyuanzheng@huawei.com",
            "name": "Yuanzheng Song"
          },
          "message": "tools/vm/slabinfo: use alphabetic order when two values are equal\n\nWhen the number of partial slabs in each cache is the same (e.g., the\nvalue are 0), the results of the `slabinfo -X -N5` and `slabinfo -P -N5`\nare different.\n\n/ # slabinfo -X -N5\n...\nSlabs sorted by number of partial slabs\n---------------------------------------\nName                   Objects Objsize           Space Slabs/Part/Cpu  O/S O %Fr %Ef Flg\ninode_cache              15180     392         6217728        758/0/1   20 1   0  95 a\nkernfs_node_cache        22494      88         2002944        488/0/1   46 0   0  98\nshmem_inode_cache          663     464          319488         38/0/1   17 1   0  96\nbiovec-max                  50    3072          163840          4/0/1   10 3   0  93 A\ndentry                   19050     136         2600960        633/0/2   30 0   0  99 a\n\n/ # slabinfo -P -N5\nName                   Objects Objsize           Space Slabs/Part/Cpu  O/S O %Fr %Ef Flg\nbdev_cache                  32     984           32.7K          1/0/1   16 2   0  96 Aa\next4_inode_cache            42     752           32.7K          1/0/1   21 2   0  96 a\ndentry                   19050     136            2.6M        633/0/2   30 0   0  99 a\nTCPv6                       17    1840           32.7K          0/0/1   17 3   0  95 A\nRAWv6                       18     856           16.3K          0/0/1   18 2   0  94 A\n\nThis problem is caused by the sort_slabs().  So let's use alphabetic order\nwhen two values are equal in the sort_slabs().\n\nBy the way, the content of the `slabinfo -h` is not aligned because the\n\n`-P|--partial Sort by number of partial slabs`\n\nuses tabs instead of spaces.  So let's use spaces instead of tabs to fix\nit.\n\nLink: https://lkml.kernel.org/r/20220528063117.935158-1-songyuanzheng@huawei.com\nFixes: 1106b205a3fe (\"tools/vm/slabinfo: add partial slab listing to -X\")\nSigned-off-by: Yuanzheng Song <songyuanzheng@huawei.com>\nCc: \"Tobin C. Harding\" <tobin@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4f5ceb8851f0081af54313abbf56de1615911faf"
        },
        {
          "sha": "d92725256b4f22d084b813b37ddc394da79aacab",
          "author": {
            "email": "peterx@redhat.com",
            "name": "Peter Xu"
          },
          "message": "mm: avoid unnecessary page fault retires on shared memory types\n\nI observed that for each of the shared file-backed page faults, we're very\nlikely to retry one more time for the 1st write fault upon no page.  It's\nbecause we'll need to release the mmap lock for dirty rate limit purpose\nwith balance_dirty_pages_ratelimited() (in fault_dirty_shared_page()).\n\nThen after that throttling we return VM_FAULT_RETRY.\n\nWe did that probably because VM_FAULT_RETRY is the only way we can return\nto the fault handler at that time telling it we've released the mmap lock.\n\nHowever that's not ideal because it's very likely the fault does not need\nto be retried at all since the pgtable was well installed before the\nthrottling, so the next continuous fault (including taking mmap read lock,\nwalk the pgtable, etc.) could be in most cases unnecessary.\n\nIt's not only slowing down page faults for shared file-backed, but also add\nmore mmap lock contention which is in most cases not needed at all.\n\nTo observe this, one could try to write to some shmem page and look at\n\"pgfault\" value in /proc/vmstat, then we should expect 2 counts for each\nshmem write simply because we retried, and vm event \"pgfault\" will capture\nthat.\n\nTo make it more efficient, add a new VM_FAULT_COMPLETED return code just to\nshow that we've completed the whole fault and released the lock.  It's also\na hint that we should very possibly not need another fault immediately on\nthis page because we've just completed it.\n\nThis patch provides a ~12% perf boost on my aarch64 test VM with a simple\nprogram sequentially dirtying 400MB shmem file being mmap()ed and these are\nthe time it needs:\n\n  Before: 650.980 ms (+-1.94%)\n  After:  569.396 ms (+-1.38%)\n\nI believe it could help more than that.\n\nWe need some special care on GUP and the s390 pgfault handler (for gmap\ncode before returning from pgfault), the rest changes in the page fault\nhandlers should be relatively straightforward.\n\nAnother thing to mention is that mm_account_fault() does take this new\nfault as a generic fault to be accounted, unlike VM_FAULT_RETRY.\n\nI explicitly didn't touch hmm_vma_fault() and break_ksm() because they do\nnot handle VM_FAULT_RETRY even with existing code, so I'm literally keeping\nthem as-is.\n\nLink: https://lkml.kernel.org/r/20220530183450.42886-1-peterx@redhat.com\nSigned-off-by: Peter Xu <peterx@redhat.com>\nAcked-by: Geert Uytterhoeven <geert@linux-m68k.org>\nAcked-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nAcked-by: Johannes Weiner <hannes@cmpxchg.org>\nAcked-by: Vineet Gupta <vgupta@kernel.org>\nAcked-by: Guo Ren <guoren@kernel.org>\nAcked-by: Max Filippov <jcmvbkbc@gmail.com>\nAcked-by: Christian Borntraeger <borntraeger@linux.ibm.com>\nAcked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)\nAcked-by: Catalin Marinas <catalin.marinas@arm.com>\nReviewed-by: Alistair Popple <apopple@nvidia.com>\nReviewed-by: Ingo Molnar <mingo@kernel.org>\nAcked-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>\t[arm part]\nAcked-by: Heiko Carstens <hca@linux.ibm.com>\nCc: Vasily Gorbik <gor@linux.ibm.com>\nCc: Stafford Horne <shorne@gmail.com>\nCc: David S. Miller <davem@davemloft.net>\nCc: Johannes Berg <johannes@sipsolutions.net>\nCc: Brian Cain <bcain@quicinc.com>\nCc: Richard Henderson <rth@twiddle.net>\nCc: Richard Weinberger <richard@nod.at>\nCc: Benjamin Herrenschmidt <benh@kernel.crashing.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Janosch Frank <frankja@linux.ibm.com>\nCc: Albert Ou <aou@eecs.berkeley.edu>\nCc: Anton Ivanov <anton.ivanov@cambridgegreys.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Sven Schnelle <svens@linux.ibm.com>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: James Bottomley <James.Bottomley@HansenPartnership.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Alexander Gordeev <agordeev@linux.ibm.com>\nCc: Jonas Bonn <jonas@southpole.se>\nCc: Will Deacon <will@kernel.org>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: Michal Simek <monstr@monstr.eu>\nCc: Matt Turner <mattst88@gmail.com>\nCc: Paul Mackerras <paulus@samba.org>\nCc: David Hildenbrand <david@redhat.com>\nCc: Nicholas Piggin <npiggin@gmail.com>\nCc: Palmer Dabbelt <palmer@dabbelt.com>\nCc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>\nCc: Paul Walmsley <paul.walmsley@sifive.com>\nCc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>\nCc: Chris Zankel <chris@zankel.net>\nCc: Hugh Dickins <hughd@google.com>\nCc: Dinh Nguyen <dinguyen@kernel.org>\nCc: Rich Felker <dalias@libc.org>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>\nCc: Helge Deller <deller@gmx.de>\nCc: Yoshinori Sato <ysato@users.osdn.me>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d92725256b4f22d084b813b37ddc394da79aacab"
        },
        {
          "sha": "833de10ff58e230fba523ad618e17c93d33b6fa3",
          "author": {
            "email": "linmiaohe@huawei.com",
            "name": "Miaohe Lin"
          },
          "message": "mm/shmem.c: clean up comment of shmem_swapin_folio\n\nshmem_swapin_folio has changed to use folio but comment still mentions\npage.  Update the relevant comment accordingly as suggested by Naoya.\n\nLink: https://lkml.kernel.org/r/20220530115841.4348-1-linmiaohe@huawei.com\nSigned-off-by: Miaohe Lin <linmiaohe@huawei.com>\nSuggested-by: Naoya Horiguchi <naoya.horiguchi@nec.com>\nCc: Hugh Dickins <hughd@google.com>\nCc: Matthew Wilcox <willy@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/833de10ff58e230fba523ad618e17c93d33b6fa3"
        },
        {
          "sha": "943189db4f3ed1445dd630dc0b96e115357c4330",
          "author": {
            "email": "anshuman.khandual@arm.com",
            "name": "Anshuman Khandual"
          },
          "message": "mm/memory_hotplug: drop 'reason' argument from check_pfn_span()\n\nIn check_pfn_span(), a 'reason' string is being used to recreate the\ncaller function name, while printing the warning message.  It is really\nunnecessary as the warning message could just be printed inside the caller\ndepending on the return code.  Currently there are just two callers for\ncheck_pfn_span() i.e __add_pages() and __remove_pages().  Let's clean this\nup.\n\nLink: https://lkml.kernel.org/r/20220531090441.170650-1-anshuman.khandual@arm.com\nSigned-off-by: Anshuman Khandual <anshuman.khandual@arm.com>\nAcked-by: Oscar Salvador <osalvador@suse.de>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/943189db4f3ed1445dd630dc0b96e115357c4330"
        },
        {
          "sha": "bcc728eb4f446073e0160671d7d0059a4e9aa300",
          "author": {
            "email": "zhouchengming@bytedance.com",
            "name": "Chengming Zhou"
          },
          "message": "mm/damon: remove obsolete comments of kdamond_stop\n\nSince commit 0f91d13366a4 (\"mm/damon: simplify stop mechanism\") delete\nkdamond_stop and change to use kthread stop mechanism, these obsolete\ncomments should be removed accordingly.\n\nLink: https://lkml.kernel.org/r/20220531020421.46849-1-zhouchengming@bytedance.com\nSigned-off-by: Chengming Zhou <zhouchengming@bytedance.com>\nReviewed-by: SeongJae Park <sj@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bcc728eb4f446073e0160671d7d0059a4e9aa300"
        },
        {
          "sha": "1b23ff80b399ae4561bbfd45f7c9c98f62797304",
          "author": {
            "email": "bhe@redhat.com",
            "name": "Baoquan He"
          },
          "message": "mm/vmalloc: invoke classify_va_fit_type() in adjust_va_to_fit_type()\n\nPatch series \"Cleanup patches of vmalloc\", v2.\n\nSome cleanup patches found when reading vmalloc code.\n\n\nThis patch (of 4):\n\nadjust_va_to_fit_type() checks all values of passed in fit type, including\nNOTHING_FIT in the else branch.  However, the check of NOTHING_FIT has\nbeen done inside adjust_va_to_fit_type() and before it's called in all\ncall sites.\n\nIn fact, both of these functions are coupled tightly, since\nclassify_va_fit_type() is doing the preparation work for\nadjust_va_to_fit_type().  So putting invocation of classify_va_fit_type()\ninside adjust_va_to_fit_type() can simplify code logic and the redundant\ncheck of NOTHING_FIT issue will go away.\n\nLink: https://lkml.kernel.org/r/20220607105958.382076-1-bhe@redhat.com\nLink: https://lkml.kernel.org/r/20220607105958.382076-2-bhe@redhat.com\nSigned-off-by: Baoquan He <bhe@redhat.com>\nSuggested-by: Uladzislau Rezki (Sony) <urezki@gmail.com>\nReviewed-by: Uladzislau Rezki (Sony) <urezki@gmail.com>\nCc: Christoph Hellwig <hch@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1b23ff80b399ae4561bbfd45f7c9c98f62797304"
        },
        {
          "sha": "753df96be5d3a21cd70d8ab4f7464a868e1d2cb4",
          "author": {
            "email": "bhe@redhat.com",
            "name": "Baoquan He"
          },
          "message": "mm/vmalloc: remove the redundant boundary check\n\nIn find_va_links(), when traversing the vmap_area tree, the comparing to\ncheck if the passed in 'va' is above or below 'tmp_va' is redundant,\nassuming both 'va' and 'tmp_va' has ->va_start <= ->va_end.\n\nHere, to simplify the checking as code change.\n\nLink: https://lkml.kernel.org/r/20220607105958.382076-3-bhe@redhat.com\nSigned-off-by: Baoquan He <bhe@redhat.com>\nReviewed-by: Uladzislau Rezki (Sony) <urezki@gmail.com>\nCc: Christoph Hellwig <hch@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/753df96be5d3a21cd70d8ab4f7464a868e1d2cb4"
        },
        {
          "sha": "baa468a648b489e35475c8de9dd1d77f0a687b4d",
          "author": {
            "email": "bhe@redhat.com",
            "name": "Baoquan He"
          },
          "message": "mm/vmalloc: fix typo in local variable name\n\nIn __purge_vmap_area_lazy(), rename local_pure_list to local_purge_list.\n\nLink: https://lkml.kernel.org/r/20220607105958.382076-4-bhe@redhat.com\nSigned-off-by: Baoquan He <bhe@redhat.com>\nReviewed-by: Uladzislau Rezki (Sony) <urezki@gmail.com>\nCc: Christoph Hellwig <hch@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/baa468a648b489e35475c8de9dd1d77f0a687b4d"
        },
        {
          "sha": "153090f2c6d595c9636c582ed4b6c4dac1739a41",
          "author": {
            "email": "bhe@redhat.com",
            "name": "Baoquan He"
          },
          "message": "mm/vmalloc: add code comment for find_vmap_area_exceed_addr()\n\nIts behaviour is like find_vma() which finds an area above the specified\naddress, add comment to make it easier to understand.\n\nAnd also fix two places of grammer mistake/typo.\n\nLink: https://lkml.kernel.org/r/20220607105958.382076-5-bhe@redhat.com\nSigned-off-by: Baoquan He <bhe@redhat.com>\nReviewed-by: Uladzislau Rezki (Sony) <urezki@gmail.com>\nCc: Christoph Hellwig <hch@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/153090f2c6d595c9636c582ed4b6c4dac1739a41"
        },
        {
          "sha": "673520f8da64f16077c1ecb190cbb38aa939fb41",
          "author": {
            "email": "zhengqi.arch@bytedance.com",
            "name": "Qi Zheng"
          },
          "message": "mm: memcontrol: add {pgscan,pgsteal}_{kswapd,direct} items in memory.stat of cgroup v2\n\nThere are already statistics of {pgscan,pgsteal}_kswapd and\n{pgscan,pgsteal}_direct of memcg event here, but now only the sum of the\ntwo is displayed in memory.stat of cgroup v2.\n\nIn order to obtain more accurate information during monitoring and\ndebugging, and to align with the display in /proc/vmstat, it better to\ndisplay {pgscan,pgsteal}_kswapd and {pgscan,pgsteal}_direct separately.\n\nAlso, for forward compatibility, we still display pgscan and pgsteal items\nso that it won't break existing applications.\n\n[zhengqi.arch@bytedance.com: add comment for memcg_vm_event_stat (suggested by Michal)]\n  Link: https://lkml.kernel.org/r/20220606154028.55030-1-zhengqi.arch@bytedance.com\n[zhengqi.arch@bytedance.com: fix the doc, thanks to Johannes]\n  Link: https://lkml.kernel.org/r/20220607064803.79363-1-zhengqi.arch@bytedance.com\nLink: https://lkml.kernel.org/r/20220604082209.55174-1-zhengqi.arch@bytedance.com\nSigned-off-by: Qi Zheng <zhengqi.arch@bytedance.com>\nAcked-by: Johannes Weiner <hannes@cmpxchg.org>\nAcked-by: Roman Gushchin <roman.gushchin@linux.dev>\nAcked-by: Muchun Song <songmuchun@bytedance.com>\nAcked-by: Shakeel Butt <shakeelb@google.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Muchun Song <songmuchun@bytedance.com>\nCc: Jonathan Corbet <corbet@lwn.net>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/673520f8da64f16077c1ecb190cbb38aa939fb41"
        },
        {
          "sha": "9384d79249d04b03572abb7e551a35d99c9268c0",
          "author": {
            "email": "fmdefrancesco@gmail.com",
            "name": "Fabio M. De Francesco"
          },
          "message": "mm/highmem: delete memmove_page()\n\nMatthew Wilcox reported that, while he was looking at memmove_page(), he\nrealized that it can't actually work.\n\nThe reasons are hidden in its implementation, which makes use of memmove()\non logical addresses provided by kmap_local_page().  memmove() does the\nwrong thing when it tests \"if (dest <= src)\".\n\nTherefore, delete memmove_page().\n\nNo need to change any other code because we have no call sites of\nmemmove_page() across the whole kernel.\n\nLink: https://lkml.kernel.org/r/20220606141533.555-1-fmdefrancesco@gmail.com\nSigned-off-by: Fabio M. De Francesco <fmdefrancesco@gmail.com>\nReported-by: Matthew Wilcox <willy@infradead.org>\nReviewed-by: Baoquan He <bhe@redhat.com>\nReviewed-by: Ira Weiny <ira.weiny@intel.com>\nCc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9384d79249d04b03572abb7e551a35d99c9268c0"
        },
        {
          "sha": "446ec83805ddaab5b8734d30ba4ae8c56739a9b4",
          "author": {
            "email": "daniel.vetter@ffwll.ch",
            "name": "Daniel Vetter"
          },
          "message": "mm/page_alloc: use might_alloc()\n\n...  instead of open coding it.  Completely equivalent code, just a notch\nmore meaningful when reading.\n\nLink: https://lkml.kernel.org/r/20220605152539.3196045-1-daniel.vetter@ffwll.ch\nSigned-off-by: Daniel Vetter <daniel.vetter@intel.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nReviewed-by: Vlastimil Babka <vbabka@suse.cz>\nCc: Christoph Lameter <cl@linux.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: Roman Gushchin <roman.gushchin@linux.dev>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/446ec83805ddaab5b8734d30ba4ae8c56739a9b4"
        },
        {
          "sha": "a3967244430eb91698ac8dca7db8bd0871251305",
          "author": {
            "email": "daniel.vetter@ffwll.ch",
            "name": "Daniel Vetter"
          },
          "message": "mm/slab: delete cache_alloc_debugcheck_before()\n\nIt only does a might_sleep_if(GFP_RECLAIM) check, which is already covered\nby the might_alloc() in slab_pre_alloc_hook().  And all callers of\ncache_alloc_debugcheck_before() call that beforehand already.\n\nLink: https://lkml.kernel.org/r/20220605152539.3196045-2-daniel.vetter@ffwll.ch\nSigned-off-by: Daniel Vetter <daniel.vetter@intel.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: Roman Gushchin <roman.gushchin@linux.dev>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a3967244430eb91698ac8dca7db8bd0871251305"
        },
        {
          "sha": "21bfe8db0a4223c16d4f863ef4250dce5ffd08bb",
          "author": {
            "email": "daniel.vetter@ffwll.ch",
            "name": "Daniel Vetter"
          },
          "message": "mm/mempool: use might_alloc()\n\nmempool are generally used for GFP_NOIO, so this wont benefit all that\nmuch because might_alloc currently only checks GFP_NOFS.  But it does\nvalidate against mmu notifier pte zapping, some might catch some drivers\ndoing really silly things, plus it's a bit more meaningful in what we're\nchecking for here.\n\nLink: https://lkml.kernel.org/r/20220605152539.3196045-3-daniel.vetter@ffwll.ch\nSigned-off-by: Daniel Vetter <daniel.vetter@intel.com>\nReviewed-by: Vlastimil Babka <vbabka@suse.cz>\nCc: Christoph Lameter <cl@linux.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: Roman Gushchin <roman.gushchin@linux.dev>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/21bfe8db0a4223c16d4f863ef4250dce5ffd08bb"
        },
        {
          "sha": "23689037e0986724e3bdc41bb2ee6fa1b497b8f9",
          "author": {
            "email": "linmiaohe@huawei.com",
            "name": "Miaohe Lin"
          },
          "message": "mm/memremap: fix wrong function name above memremap_pages()\n\nFix the wrong function name dev_memremap_pages above memremap_pages() to\navoid confusion.  Minor readability improvement.\n\nLink: https://lkml.kernel.org/r/20220607143621.58989-1-linmiaohe@huawei.com\nSigned-off-by: Miaohe Lin <linmiaohe@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/23689037e0986724e3bdc41bb2ee6fa1b497b8f9"
        },
        {
          "sha": "ed913b055a74b723976f8e885a3395162a0371e6",
          "author": {
            "email": "linmiaohe@huawei.com",
            "name": "Miaohe Lin"
          },
          "message": "lib/test_hmm: avoid accessing uninitialized pages\n\nIf make_device_exclusive_range() fails or returns pages marked for\nexclusive access less than required, remaining fields of pages will left\nuninitialized.  So dmirror_atomic_map() will access those yet\nuninitialized fields of pages.  To fix it, do dmirror_atomic_map() iff all\npages are marked for exclusive access (we will break if mapped is less\nthan required anyway) so we won't access those uninitialized fields of\npages.\n\nLink: https://lkml.kernel.org/r/20220609130835.35110-1-linmiaohe@huawei.com\nFixes: b659baea7546 (\"mm: selftests for exclusive device memory\")\nSigned-off-by: Miaohe Lin <linmiaohe@huawei.com>\nCc: Jerome Glisse <jglisse@redhat.com>\nCc: Alistair Popple <apopple@nvidia.com>\nCc: Jason Gunthorpe <jgg@ziepe.ca>\nCc: Ralph Campbell <rcampbell@nvidia.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ed913b055a74b723976f8e885a3395162a0371e6"
        },
        {
          "sha": "c200d90049dbe08fa8b016f74b713fddefca0479",
          "author": {
            "email": "patrick.wang.shcn@gmail.com",
            "name": "Patrick Wang"
          },
          "message": "mm: kmemleak: remove kmemleak_not_leak_phys() and the min_count argument to kmemleak_alloc_phys()\n\nPatch series \"mm: kmemleak: store objects allocated with physical address\nseparately and check when scan\", v4.\n\nThe kmemleak_*_phys() interface uses \"min_low_pfn\" and \"max_low_pfn\" to\ncheck address.  But on some architectures, kmemleak_*_phys() is called\nbefore those two variables initialized.  The following steps will be\ntaken:\n\n1) Add OBJECT_PHYS flag and rbtree for the objects allocated\n   with physical address\n2) Store physical address in objects if allocated with OBJECT_PHYS\n3) Check the boundary when scan instead of in kmemleak_*_phys()\n\nThis patch set will solve:\nhttps://lore.kernel.org/r/20220527032504.30341-1-yee.lee@mediatek.com\nhttps://lore.kernel.org/r/9dd08bb5-f39e-53d8-f88d-bec598a08c93@gmail.com\n\nv3: https://lore.kernel.org/r/20220609124950.1694394-1-patrick.wang.shcn@gmail.com\nv2: https://lore.kernel.org/r/20220603035415.1243913-1-patrick.wang.shcn@gmail.com\nv1: https://lore.kernel.org/r/20220531150823.1004101-1-patrick.wang.shcn@gmail.com\n\n\nThis patch (of 4):\n\nRemove the unused kmemleak_not_leak_phys() function.  And remove the\nmin_count argument to kmemleak_alloc_phys() function, assume it's 0.\n\nLink: https://lkml.kernel.org/r/20220611035551.1823303-1-patrick.wang.shcn@gmail.com\nLink: https://lkml.kernel.org/r/20220611035551.1823303-2-patrick.wang.shcn@gmail.com\nSigned-off-by: Patrick Wang <patrick.wang.shcn@gmail.com>\nSuggested-by: Catalin Marinas <catalin.marinas@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nCc: Yee Lee <yee.lee@mediatek.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c200d90049dbe08fa8b016f74b713fddefca0479"
        },
        {
          "sha": "8e0c4ab36c61c514a9c1caaf5707d1f55ab5f6df",
          "author": {
            "email": "patrick.wang.shcn@gmail.com",
            "name": "Patrick Wang"
          },
          "message": "mm: kmemleak: add OBJECT_PHYS flag for objects allocated with physical address\n\nAdd OBJECT_PHYS flag for object.  This flag is used to identify the\nobjects allocated with physical address.  The create_object_phys()\nfunction is added as well to set that flag and is used by\nkmemleak_alloc_phys().\n\nLink: https://lkml.kernel.org/r/20220611035551.1823303-3-patrick.wang.shcn@gmail.com\nSigned-off-by: Patrick Wang <patrick.wang.shcn@gmail.com>\nSuggested-by: Catalin Marinas <catalin.marinas@arm.com>\nReviewed-by: Catalin Marinas <catalin.marinas@arm.com>\nCc: Yee Lee <yee.lee@mediatek.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8e0c4ab36c61c514a9c1caaf5707d1f55ab5f6df"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T23:39:07Z"
  },
  {
    "id": "23290056636",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10651712401,
      "size": 79,
      "distinct_size": 79,
      "ref": "refs/heads/master",
      "head": "74cae210a335d159f2eb822e261adee905b6951a",
      "before": "9e2f40233670c70c25e0681cb66d50d1e2742829",
      "commits": [
        {
          "sha": "33ec82a6d2b119938f26e5c8040ed5d92378eb54",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "mtd: maps: Fix refcount leak in of_flash_probe_versatile\n\nof_find_matching_node_and_match() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nFixes: b0afd44bc192 (\"mtd: physmap_of: add a hook for Versatile write protection\")\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nReviewed-by: Linus Walleij <linus.walleij@linaro.org>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220523140205.48625-1-linmq006@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/33ec82a6d2b119938f26e5c8040ed5d92378eb54"
        },
        {
          "sha": "77087a04c8fd554134bddcb8a9ff87b21f357926",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "mtd: maps: Fix refcount leak in ap_flash_init\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nFixes: b0afd44bc192 (\"mtd: physmap_of: add a hook for Versatile write protection\")\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nReviewed-by: Linus Walleij <linus.walleij@linaro.org>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220523143255.4376-1-linmq006@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/77087a04c8fd554134bddcb8a9ff87b21f357926"
        },
        {
          "sha": "18178e03b124b0c6be17abbbca914157642f5d7a",
          "author": {
            "email": "wupeng58@huawei.com",
            "name": "Peng Wu"
          },
          "message": "mtd: rawnand: cafe: fix drivers probe/remove methods\n\nDriver should call pci_disable_device() if it returns from\ncafe_nand_probe() with error.\n\nMeanwhile, the driver calls pci_enable_device() in\ncafe_nand_probe(), but never calls pci_disable_device()\nduring removal.\n\nSigned-off-by: Peng Wu <wupeng58@huawei.com>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220520084425.116686-1-wupeng58@huawei.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/18178e03b124b0c6be17abbbca914157642f5d7a"
        },
        {
          "sha": "ec0da06337751b18f6dee06b6526e0f0d6e80369",
          "author": {
            "email": "christophe.jaillet@wanadoo.fr",
            "name": "Christophe JAILLET"
          },
          "message": "mtd: rawnand: meson: Fix a potential double free issue\n\nWhen meson_nfc_nand_chip_cleanup() is called, it will call:\n\tmeson_nfc_free_buffer(&meson_chip->nand);\n\tnand_cleanup(&meson_chip->nand);\n\nnand_cleanup() in turn will call nand_detach() which calls the\n.detach_chip() which is here meson_nand_detach_chip().\n\nmeson_nand_detach_chip() already calls meson_nfc_free_buffer(), so we\ncould double free some memory.\n\nFix it by removing the unneeded explicit call to meson_nfc_free_buffer().\n\nFixes: 8fae856c5350 (\"mtd: rawnand: meson: add support for Amlogic NAND flash controller\")\nSigned-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>\nAcked-by: Liang Yang <liang.yang@amlogic.com>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/ec15c358b8063f7c50ff4cd628cf0d2e14e43f49.1653064877.git.christophe.jaillet@wanadoo.fr",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ec0da06337751b18f6dee06b6526e0f0d6e80369"
        },
        {
          "sha": "99c1734f318c97492083c16910cbda2583830eb1",
          "author": {
            "email": "robh@kernel.org",
            "name": "Rob Herring"
          },
          "message": "dt-bindings: mtd: mxc-nand: Drop undocumented properties from example\n\nWith unevaluatedProperties issues fixed, 'nand-bus-width' and\n'nand-ecc-mode' are flagged as undocumented. Removing them from the example\nis the easiest solution to silence the warnings.\n\nSigned-off-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220525205947.2487165-1-robh@kernel.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/99c1734f318c97492083c16910cbda2583830eb1"
        },
        {
          "sha": "fc602b4f692cb83c937b5f79628bca32b60c4402",
          "author": {
            "email": "aidanmacdonald.0x0@gmail.com",
            "name": "Aidan MacDonald"
          },
          "message": "mtd: spinand: Add support for ATO25D1GA\n\nAdd support for the ATO25D1GA SPI NAND flash.\n\nDatasheet:\n- https://atta.szlcsc.com/upload/public/pdf/source/20191212/C469320_04599D67B03B078044EB65FF5AEDDDE9.pdf\n\nSigned-off-by: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220604113250.4745-1-aidanmacdonald.0x0@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fc602b4f692cb83c937b5f79628bca32b60c4402"
        },
        {
          "sha": "a61528d997619a518ee8c51cf0ef0513021afaff",
          "author": {
            "email": "duoming@zju.edu.cn",
            "name": "Duoming Zhou"
          },
          "message": "mtd: sm_ftl: Fix deadlock caused by cancel_work_sync in sm_release\n\nThere is a deadlock between sm_release and sm_cache_flush_work\nwhich is a work item. The cancel_work_sync in sm_release will\nnot return until sm_cache_flush_work is finished. If we hold\nmutex_lock and use cancel_work_sync to wait the work item to\nfinish, the work item also requires mutex_lock. As a result,\nthe sm_release will be blocked forever. The race condition is\nshown below:\n\n    (Thread 1)             |   (Thread 2)\nsm_release                 |\n  mutex_lock(&ftl->mutex)  | sm_cache_flush_work\n                           |   mutex_lock(&ftl->mutex)\n  cancel_work_sync         |   ...\n\nThis patch moves del_timer_sync and cancel_work_sync out of\nmutex_lock in order to mitigate deadlock.\n\nFixes: 7d17c02a01a1 (\"mtd: Add new SmartMedia/xD FTL\")\nSigned-off-by: Duoming Zhou <duoming@zju.edu.cn>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220524044841.10517-1-duoming@zju.edu.cn",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a61528d997619a518ee8c51cf0ef0513021afaff"
        },
        {
          "sha": "9f7e62815cf3cbbcb1b8cb21649fb4dfdb3aa016",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "mtd: partitions: Fix refcount leak in parse_redboot_of\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nFixes: 237960880960 (\"mtd: partitions: redboot: seek fis-index-block in the right node\")\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nReviewed-by: Linus Walleij <linus.walleij@linaro.org>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220526110652.64849-1-linmq006@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9f7e62815cf3cbbcb1b8cb21649fb4dfdb3aa016"
        },
        {
          "sha": "9b78ef0c7997052e9eaa0f7a4513d546fa17358c",
          "author": {
            "email": "csharper2005@gmail.com",
            "name": "Mikhail Zhilkin"
          },
          "message": "mtd: parsers: add support for Sercomm partitions\n\nThis adds an MTD partition parser for the Sercomm partition table that\nis used in some Beeline, Netgear and Sercomm routers.\n\nThe Sercomm partition map table contains real partition offsets, which\nmay differ from device to device depending on the number and location of\nbad blocks on NAND.\n\nOriginal patch (proposed by NOGUCHI Hiroshi):\nLink: https://github.com/openwrt/openwrt/pull/1318#issuecomment-420607394\n\nSigned-off-by: NOGUCHI Hiroshi <drvlabo@gmail.com>\nSigned-off-by: Mikhail Zhilkin <csharper2005@gmail.com>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220529110714.189732-1-csharper2005@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9b78ef0c7997052e9eaa0f7a4513d546fa17358c"
        },
        {
          "sha": "e607879b0da18c451de5e91daf239cc2f2f8ff2d",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "mtd: parsers: ofpart: Fix refcount leak in bcm4908_partitions_fw_offset\n\nof_find_node_by_path() returns a node pointer with refcount incremented,\nwe should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nFixes: bb17230c61a6 (\"mtd: parsers: ofpart: support BCM4908 fixed partitions\")\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220605070726.5979-1-linmq006@gmail.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e607879b0da18c451de5e91daf239cc2f2f8ff2d"
        },
        {
          "sha": "a1eda864c04cf24ea1130334963c6199318f6f95",
          "author": {
            "email": "kernel@kempniu.pl",
            "name": "Michał Kępień"
          },
          "message": "mtdchar: prevent integer overflow in a safety check\n\nCommit 6420ac0af95d (\"mtdchar: prevent unbounded allocation in MEMWRITE\nioctl\") added a safety check to mtdchar_write_ioctl() which attempts to\nensure that the write request sent by user space does not extend beyond\nthe MTD device's size.  However, that check contains an addition of two\nstruct mtd_write_req fields, 'start' and 'len', both of which are u64\nvariables.  The result of that addition can overflow, allowing the\nsafety check to be bypassed.\n\nThe arguably simplest fix - changing the data types of the relevant\nstruct mtd_write_req fields - is not feasible as it would break user\nspace.\n\nFix by making mtdchar_write_ioctl() truncate the value provided by user\nspace in the 'len' field of struct mtd_write_req, so that only the lower\n32 bits of that field are used, preventing the overflow.\n\nWhile the 'ooblen' field of struct mtd_write_req is not currently used\nin any similarly flawed safety check, also truncate it to 32 bits, for\nconsistency with the 'len' field and with other MTD routines handling\nOOB data.\n\nUpdate include/uapi/mtd/mtd-abi.h accordingly.\n\nSuggested-by: Richard Weinberger <richard@nod.at>\nSigned-off-by: Michał Kępień <kernel@kempniu.pl>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220516070601.11428-2-kernel@kempniu.pl",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a1eda864c04cf24ea1130334963c6199318f6f95"
        },
        {
          "sha": "83208e106a8e8a859110ebb04a5e927ced911afb",
          "author": {
            "email": "kernel@kempniu.pl",
            "name": "Michał Kępień"
          },
          "message": "mtdchar: use kvmalloc() for potentially large allocations\n\nmtdchar_write_ioctl() calls kmalloc() with the 'size' argument set to\nthe smaller of two values: the write request's data/OOB length provided\nby user space and the erase block size of the MTD device.  If the latter\nis large, kmalloc() may not be able to serve such allocation requests.\nUse kvmalloc() instead.  Correspondingly, replace kfree() calls with\nkvfree() calls.\n\nSuggested-by: Richard Weinberger <richard@nod.at>\nSigned-off-by: Michał Kępień <kernel@kempniu.pl>\nAcked-by: Richard Weinberger <richard@nod.at>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220516070601.11428-3-kernel@kempniu.pl",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/83208e106a8e8a859110ebb04a5e927ced911afb"
        },
        {
          "sha": "0c90466a7985d39355f743e9cd2139da3e86c4d8",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: hyperbus: Make hyperbus_unregister_device() return void\n\nThe only thing that could theoretically fail in that function is\nmtd_device_unregister(). However it's not supposed to fail and when\nused correctly it doesn't. So wail loudly if it does anyhow.\n\nThis matches how other drivers (e.g. nand/raw/nandsim.c) use\nmtd_device_unregister().\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-2-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0c90466a7985d39355f743e9cd2139da3e86c4d8"
        },
        {
          "sha": "90914b4e8e2fb630d21d430f8844f7de583a1ac3",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: powernv_flash: Warn about failure to unregister mtd device\n\nmtd_device_unregister() shouldn't fail. Wail loudly if it does anyhow.\n\nThis matches how other drivers (e.g. nand/raw/nandsim.c) use\nmtd_device_unregister().\n\nBy returning 0 in the platform remove callback a generic error message\nby the device core is suppressed, nothing else changes.\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-4-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/90914b4e8e2fb630d21d430f8844f7de583a1ac3"
        },
        {
          "sha": "0aaa0b5f84a0908fb2de30e8fea10811b154bf56",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: lpddr2_nvm: Warn about failure to unregister mtd device\n\nmtd_device_unregister() shouldn't fail. Wail loudly if it does anyhow.\n\nThis matches how other drivers (e.g. nand/raw/nandsim.c) use\nmtd_device_unregister().\n\nBy returning 0 in the platform remove callback a generic error message\nby the device core is suppressed, nothing else changes.\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-6-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0aaa0b5f84a0908fb2de30e8fea10811b154bf56"
        },
        {
          "sha": "0057568b391488a5940635cbda562ea397bf4bdd",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: spear_smi: Don't skip cleanup after mtd_device_unregister() failed\n\nIf mtd_device_unregister() fails (which it doesn't when used correctly),\nthe resources bound by the nand chip should be freed anyhow as returning\nan error value doesn't prevent the device getting unbound.\n\nInstead use WARN_ON on the return value similar to how other drivers do\nit.\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-7-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0057568b391488a5940635cbda562ea397bf4bdd"
        },
        {
          "sha": "279d719be39d8edb37c9178c15e167a94c7bc0a0",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: spear_smi: Drop if with an always false condition\n\nThe remove callback is only called after probe completed successfully.\nIn this case platform_set_drvdata() was called with a non-NULL argument\nand so dev is never NULL.\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-8-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/279d719be39d8edb37c9178c15e167a94c7bc0a0"
        },
        {
          "sha": "37e00244047c5675a7f3f1ec0358f8c53cd12b75",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: rawnand: omap2: Suppress error message after WARN in .remove()\n\nReturning an error value in a platform remove callback results in an error\nmessage being emitted by the platform core, but otherwise it doesn't make\na difference. After the WARN splat this generic error message doesn't add\nany value, so return 0 unconditionally\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-10-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/37e00244047c5675a7f3f1ec0358f8c53cd12b75"
        },
        {
          "sha": "413948cc6208c7b47dd9fc8c56cbb04c3b2381b3",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: rawnand: tegra: Don't skip cleanup after mtd_device_unregister() failed\n\nIf mtd_device_unregister() fails (which it doesn't when used correctly),\nthe resources bound by the nand chip should be freed anyhow as returning\nan error value doesn't prevent the device getting unbound.\n\nInstead use WARN_ON on the return value similar to how other drivers do\nit.\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-11-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/413948cc6208c7b47dd9fc8c56cbb04c3b2381b3"
        },
        {
          "sha": "7beae6946255711d7914abe7c4914ff2691c4b8e",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "mtd: rawnand: meson: Don't skip cleanup after mtd_device_unregister() failed\n\nIf mtd_device_unregister() fails (which it doesn't when used correctly),\nthe resources bound by the nand chip should be freed anyhow as returning\nan error value doesn't prevent the device getting unbound.\n\nInstead use WARN_ON on the return value similar to how other drivers do\nit. Then meson_nfc_nand_chip_cleanup() returns 0 unconditionally and can\nbe changed to return void which allows further simplification in the\nremove callback.\n\nThis is a preparation for making platform remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Miquel Raynal <miquel.raynal@bootlin.com>\nLink: https://lore.kernel.org/linux-mtd/20220603210758.148493-12-u.kleine-koenig@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7beae6946255711d7914abe7c4914ff2691c4b8e"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T21:24:28Z"
  },
  {
    "id": "23287184258",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10650282898,
      "size": 33,
      "distinct_size": 33,
      "ref": "refs/heads/master",
      "head": "9e2f40233670c70c25e0681cb66d50d1e2742829",
      "before": "3bd6e5854bf9bb5436d6b533e206561839e3b284",
      "commits": [
        {
          "sha": "4c3f73584c0c0152b75dd6a090558ada39601159",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Add short descriptions to ENCLS wrappers\n\nThe SGX ENCLS instruction uses EAX to specify an SGX function and\nmay require additional registers, depending on the SGX function.\nENCLS invokes the specified privileged SGX function for managing\nand debugging enclaves. Macros are used to wrap the ENCLS\nfunctionality and several wrappers are used to wrap the macros to\nmake the different SGX functions accessible in the code.\n\nThe wrappers of the supported SGX functions are cryptic. Add short\ndescriptions of each as a comment.\n\nSuggested-by: Dave Hansen <dave.hansen@linux.intel.com>\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/5e78a1126711cbd692d5b8132e0683873398f69e.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4c3f73584c0c0152b75dd6a090558ada39601159"
        },
        {
          "sha": "0fb2126db8414e0206960febb3e4a116439c69dd",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Add wrapper for SGX2 EMODPR function\n\nAdd a wrapper for the EMODPR ENCLS leaf function used to\nrestrict enclave page permissions as maintained in the\nSGX hardware's Enclave Page Cache Map (EPCM).\n\nEMODPR:\n1) Updates the EPCM permissions of an enclave page by treating\n   the new permissions as a mask. Supplying a value that attempts\n   to relax EPCM permissions has no effect on EPCM permissions\n   (PR bit, see below, is changed).\n2) Sets the PR bit in the EPCM entry of the enclave page to\n   indicate that permission restriction is in progress. The bit\n   is reset by the enclave by invoking ENCLU leaf function\n   EACCEPT or EACCEPTCOPY.\n\nThe enclave may access the page throughout the entire process\nif conforming to the EPCM permissions for the enclave page.\n\nAfter performing the permission restriction by issuing EMODPR\nthe kernel needs to collaborate with the hardware to ensure that\nall logical processors sees the new restricted permissions. This\nis required for the enclave's EACCEPT/EACCEPTCOPY to succeed and\nis accomplished with the ETRACK flow.\n\nExpand enum sgx_return_code with the possible EMODPR return\nvalues.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/d15e7a769e13e4ca671fa2d0a0d3e3aec5aedbd4.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0fb2126db8414e0206960febb3e4a116439c69dd"
        },
        {
          "sha": "09b38d0b412dbf8922b3dc33103c1a1257519ab9",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Add wrapper for SGX2 EMODT function\n\nAdd a wrapper for the EMODT ENCLS leaf function used to\nchange the type of an enclave page as maintained in the\nSGX hardware's Enclave Page Cache Map (EPCM).\n\nEMODT:\n1) Updates the EPCM page type of the enclave page.\n2) Sets the MODIFIED bit in the EPCM entry of the enclave page.\n   This bit is reset by the enclave by invoking ENCLU leaf\n   function EACCEPT or EACCEPTCOPY.\n\nAccess from within the enclave to the enclave page is not possible\nwhile the MODIFIED bit is set.\n\nAfter changing the enclave page type by issuing EMODT the kernel\nneeds to collaborate with the hardware to ensure that no logical\nprocessor continues to hold a reference to the changed page. This\nis required to ensure no required security checks are circumvented\nand is required for the enclave's EACCEPT/EACCEPTCOPY to succeed.\nEnsuring that no references to the changed page remain is\naccomplished with the ETRACK flow.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/dba63a8c0db1d510b940beee1ba2a8207efeb1f1.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/09b38d0b412dbf8922b3dc33103c1a1257519ab9"
        },
        {
          "sha": "61416b294af02e4747554c0d1b28d436a4a537d2",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Add wrapper for SGX2 EAUG function\n\nAdd a wrapper for the EAUG ENCLS leaf function used to\nadd a page to an initialized enclave.\n\nEAUG:\n1) Stores all properties of the new enclave page in the SGX\n   hardware's Enclave Page Cache Map (EPCM).\n2) Sets the PENDING bit in the EPCM entry of the enclave page.\n   This bit is cleared by the enclave by invoking ENCLU leaf\n   function EACCEPT or EACCEPTCOPY.\n\nAccess from within the enclave to the new enclave page is not\npossible until the PENDING bit is cleared.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/97a46754fe4764e908651df63694fb760f783d6e.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/61416b294af02e4747554c0d1b28d436a4a537d2"
        },
        {
          "sha": "b3fb517dc6020fec85c82171a909da10c6a6f90a",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Support loading enclave page without VMA permissions check\n\nsgx_encl_load_page() is used to find and load an enclave page into\nenclave (EPC) memory, potentially loading it from the backing storage.\nBoth usages of sgx_encl_load_page() are during an access to the\nenclave page from a VMA and thus the permissions of the VMA are\nconsidered before the enclave page is loaded.\n\nSGX2 functions operating on enclave pages belonging to an initialized\nenclave requiring the page to be in EPC. It is thus required to\nsupport loading enclave pages into the EPC independent from a VMA.\n\nSplit the current sgx_encl_load_page() to support the two usages:\nA new call, sgx_encl_load_page_in_vma(), behaves exactly like the\ncurrent sgx_encl_load_page() that takes VMA permissions into account,\nwhile sgx_encl_load_page() just loads an enclave page into EPC.\n\nVMA, PTE, and EPCM permissions continue to dictate whether\nthe pages can be accessed from within an enclave.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/d4393513c1f18987c14a490bcf133bfb71a5dc43.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b3fb517dc6020fec85c82171a909da10c6a6f90a"
        },
        {
          "sha": "7f391752d4adac10cfc1e5d7a76bab0ab5c9c9d4",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Export sgx_encl_ewb_cpumask()\n\nUsing sgx_encl_ewb_cpumask() to learn which CPUs might have executed\nan enclave is useful to ensure that TLBs are cleared when changes are\nmade to enclave pages.\n\nsgx_encl_ewb_cpumask() is used within the reclaimer when an enclave\npage is evicted. The upcoming SGX2 support enables changes to be\nmade to enclave pages and will require TLBs to not refer to the\nchanged pages and thus will be needing sgx_encl_ewb_cpumask().\n\nRelocate sgx_encl_ewb_cpumask() to be with the rest of the enclave\ncode in encl.c now that it is no longer unique to the reclaimer.\n\nTake care to ensure that any future usage maintains the\ncurrent context requirement that ETRACK has been called first.\nExpand the existing comments to highlight this while moving them\nto a more prominent location before the function.\n\nNo functional change.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/05b60747fd45130cf9fc6edb1c373a69a18a22c5.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7f391752d4adac10cfc1e5d7a76bab0ab5c9c9d4"
        },
        {
          "sha": "bdaa8799f697daa059bf807da40a9444de94d7e3",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Rename sgx_encl_ewb_cpumask() as sgx_encl_cpumask()\n\nsgx_encl_ewb_cpumask() is no longer unique to the reclaimer where it\nis used during the EWB ENCLS leaf function when EPC pages are written\nout to main memory and sgx_encl_ewb_cpumask() is used to learn which\nCPUs might have executed the enclave to ensure that TLBs are cleared.\n\nUpcoming SGX2 enabling will use sgx_encl_ewb_cpumask() during the\nEMODPR and EMODT ENCLS leaf functions that make changes to enclave\npages. The function is needed for the same reason it is used now: to\nlearn which CPUs might have executed the enclave to ensure that TLBs\nno longer point to the changed pages.\n\nRename sgx_encl_ewb_cpumask() to sgx_encl_cpumask() to reflect the\nbroader usage.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/d4d08c449450a13d8dd3bb6c2b1af03895586d4f.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bdaa8799f697daa059bf807da40a9444de94d7e3"
        },
        {
          "sha": "f89c2f9bf5a64f619de06ded4349dff5a35da860",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Move PTE zap code to new sgx_zap_enclave_ptes()\n\nThe SGX reclaimer removes page table entries pointing to pages that are\nmoved to swap.\n\nSGX2 enables changes to pages belonging to an initialized enclave, thus\nenclave pages may have their permission or type changed while the page\nis being accessed by an enclave. Supporting SGX2 requires page table\nentries to be removed so that any cached mappings to changed pages\nare removed. For example, with the ability to change enclave page types\na regular enclave page may be changed to a Thread Control Structure\n(TCS) page that may not be accessed by an enclave.\n\nFactor out the code removing page table entries to a separate function\nsgx_zap_enclave_ptes(), fixing accuracy of comments in the process,\nand make it available to the upcoming SGX2 code.\n\nPlace sgx_zap_enclave_ptes() with the rest of the enclave code in\nencl.c interacting with the page table since this code is no longer\nunique to the reclaimer.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/b010cdf01d7ce55dd0f00e883b7ccbd9db57160a.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f89c2f9bf5a64f619de06ded4349dff5a35da860"
        },
        {
          "sha": "c7c6a8a61b0066ba7e891783032dc2a7873c6dc7",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Make sgx_ipi_cb() available internally\n\nThe ETRACK function followed by an IPI to all CPUs within an enclave\nis a common pattern with more frequent use in support of SGX2.\n\nMake the (empty) IPI callback function available internally in\npreparation for usage by SGX2.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/1179ed4a9c3c1c2abf49d51bfcf2c30b493181cc.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c7c6a8a61b0066ba7e891783032dc2a7873c6dc7"
        },
        {
          "sha": "dda03e2c331b9fc7bbc8fc0de12a6d92d8c18661",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Create utility to validate user provided offset and length\n\nUser provided offset and length is validated when parsing the parameters\nof the SGX_IOC_ENCLAVE_ADD_PAGES ioctl(). Extract this validation\n(with consistent use of IS_ALIGNED) into a utility that can be used\nby the SGX2 ioctl()s that will also provide these values.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/767147bc100047abed47fe27c592901adfbb93a2.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dda03e2c331b9fc7bbc8fc0de12a6d92d8c18661"
        },
        {
          "sha": "8cb7b502f31e6cc4c6ebe2c5eeaa90dcab418cf1",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Keep record of SGX page type\n\nSGX2 functions are not allowed on all page types. For example,\nENCLS[EMODPR] is only allowed on regular SGX enclave pages and\nENCLS[EMODPT] is only allowed on TCS and regular pages. If these\nfunctions are attempted on another type of page the hardware would\ntrigger a fault.\n\nKeep a record of the SGX page type so that there is more\ncertainty whether an SGX2 instruction can succeed and faults\ncan be treated as real failures.\n\nThe page type is a property of struct sgx_encl_page\nand thus does not cover the VA page type. VA pages are maintained\nin separate structures and their type can be determined in\na different way. The SGX2 instructions needing the page type do not\noperate on VA pages and this is thus not a scenario needing to\nbe covered at this time.\n\nstruct sgx_encl_page hosting this information is maintained for each\nenclave page so the space consumed by the struct is important.\nThe existing sgx_encl_page->vm_max_prot_bits is already unsigned long\nwhile only using three bits. Transition to a bitfield for the two\nmembers to support the additional information without increasing\nthe space consumed by the struct.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/a0a6939eefe7ba26514f6c49723521cde372de64.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8cb7b502f31e6cc4c6ebe2c5eeaa90dcab418cf1"
        },
        {
          "sha": "3a5351415228d06c988a1e610e71d3889f707ac9",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Export sgx_encl_{grow,shrink}()\n\nIn order to use sgx_encl_{grow,shrink}() in the page augmentation code\nlocated in encl.c, export these functions.\n\nSuggested-by: Jarkko Sakkinen <jarkko@kernel.org>\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/d51730acf54b6565710b2261b3099517b38c2ec4.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3a5351415228d06c988a1e610e71d3889f707ac9"
        },
        {
          "sha": "8123073c4335fcd18ea5e049b85220f122ac1ca3",
          "author": {
            "email": "jarkko@kernel.org",
            "name": "Jarkko Sakkinen"
          },
          "message": "x86/sgx: Export sgx_encl_page_alloc()\n\nMove sgx_encl_page_alloc() to encl.c and export it so that it can be\nused in the implementation for support of adding pages to initialized\nenclaves, which requires to allocate new enclave pages.\n\nSigned-off-by: Jarkko Sakkinen <jarkko@kernel.org>\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nLink: https://lkml.kernel.org/r/57ae71b4ea17998467670232e12d6617b95c6811.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8123073c4335fcd18ea5e049b85220f122ac1ca3"
        },
        {
          "sha": "a76e7f1f18884a94998ca82862c0a4e6d0fd2933",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Support VA page allocation without reclaiming\n\nstruct sgx_encl should be protected with the mutex\nsgx_encl->lock. One exception is sgx_encl->page_cnt that\nis incremented (in sgx_encl_grow()) when an enclave page\nis added to the enclave. The reason the mutex is not held\nis to allow the reclaimer to be called directly if there are\nno EPC pages (in support of a new VA page) available at the time.\n\nIncrementing sgx_encl->page_cnt without sgc_encl->lock held\nis currently (before SGX2) safe from concurrent updates because\nall paths in which sgx_encl_grow() is called occur before\nenclave initialization and are protected with an atomic\noperation on SGX_ENCL_IOCTL.\n\nSGX2 includes support for dynamically adding pages after\nenclave initialization where the protection of SGX_ENCL_IOCTL\nis not available.\n\nMake direct reclaim of EPC pages optional when new VA pages\nare added to the enclave. Essentially the existing \"reclaim\"\nflag used when regular EPC pages are added to an enclave\nbecomes available to the caller when used to allocate VA pages\ninstead of always being \"true\".\n\nWhen adding pages without invoking the reclaimer it is possible\nto do so with sgx_encl->lock held, gaining its protection against\nconcurrent updates to sgx_encl->page_cnt after enclave\ninitialization.\n\nNo functional change.\n\nReported-by: Haitao Huang <haitao.huang@intel.com>\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/42c5934c229982ee67982bb97c6ab34bde758620.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a76e7f1f18884a94998ca82862c0a4e6d0fd2933"
        },
        {
          "sha": "ff08530a5232aab3b610db44cdc5045d26421911",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Support restricting of enclave page permissions\n\nIn the initial (SGX1) version of SGX, pages in an enclave need to be\ncreated with permissions that support all usages of the pages, from the\ntime the enclave is initialized until it is unloaded. For example,\npages used by a JIT compiler or when code needs to otherwise be\nrelocated need to always have RWX permissions.\n\nSGX2 includes a new function ENCLS[EMODPR] that is run from the kernel\nand can be used to restrict the EPCM permissions of regular enclave\npages within an initialized enclave.\n\nIntroduce ioctl() SGX_IOC_ENCLAVE_RESTRICT_PERMISSIONS to support\nrestricting EPCM permissions. With this ioctl() the user specifies\na page range and the EPCM permissions to be applied to all pages in\nthe provided range. ENCLS[EMODPR] is run to restrict the EPCM\npermissions followed by the ENCLS[ETRACK] flow that will ensure\nno cached linear-to-physical address mappings to the changed\npages remain.\n\nIt is possible for the permission change request to fail on any\npage within the provided range, either with an error encountered\nby the kernel or by the SGX hardware while running\nENCLS[EMODPR]. To support partial success the ioctl() returns an\nerror code based on failures encountered by the kernel as well\nas two result output parameters: one for the number of pages\nthat were successfully changed and one for the SGX return code.\n\nThe page table entry permissions are not impacted by the EPCM\npermission changes. VMAs and PTEs will continue to allow the\nmaximum vetted permissions determined at the time the pages\nare added to the enclave. The SGX error code in a page fault\nwill indicate if it was an EPCM permission check that prevented\nan access attempt.\n\nNo checking is done to ensure that the permissions are actually\nbeing restricted. This is because the enclave may have relaxed\nthe EPCM permissions from within the enclave without the kernel\nknowing. An attempt to relax permissions using this call will\nbe ignored by the hardware.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Haitao Huang <haitao.huang@intel.com>\nTested-by: Vijay Dhanraj <vijay.dhanraj@intel.com>\nLink: https://lkml.kernel.org/r/082cee986f3c1a2f4fdbf49501d7a8c5a98446f8.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ff08530a5232aab3b610db44cdc5045d26421911"
        },
        {
          "sha": "5a90d2c3f5ef87717e54572af8426aba6fdbdaa6",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Support adding of pages to an initialized enclave\n\nWith SGX1 an enclave needs to be created with its maximum memory demands\nallocated. Pages cannot be added to an enclave after it is initialized.\nSGX2 introduces a new function, ENCLS[EAUG], that can be used to add\npages to an initialized enclave. With SGX2 the enclave still needs to\nset aside address space for its maximum memory demands during enclave\ncreation, but all pages need not be added before enclave initialization.\nPages can be added during enclave runtime.\n\nAdd support for dynamically adding pages to an initialized enclave,\narchitecturally limited to RW permission at creation but allowed to\nobtain RWX permissions after trusted enclave runs EMODPE. Add pages\nvia the page fault handler at the time an enclave address without a\nbacking enclave page is accessed, potentially directly reclaiming\npages if no free pages are available.\n\nThe enclave is still required to run ENCLU[EACCEPT] on the page before\nit can be used. A useful flow is for the enclave to run ENCLU[EACCEPT]\non an uninitialized address. This will trigger the page fault handler\nthat will add the enclave page and return execution to the enclave to\nrepeat the ENCLU[EACCEPT] instruction, this time successful.\n\nIf the enclave accesses an uninitialized address in another way, for\nexample by expanding the enclave stack to a page that has not yet been\nadded, then the page fault handler would add the page on the first\nwrite but upon returning to the enclave the instruction that triggered\nthe page fault would be repeated and since ENCLU[EACCEPT] was not run\nyet it would trigger a second page fault, this time with the SGX flag\nset in the page fault error code. This can only be recovered by entering\nthe enclave again and directly running the ENCLU[EACCEPT] instruction on\nthe now initialized address.\n\nAccessing an uninitialized address from outside the enclave also\ntriggers this flow but the page will remain inaccessible (access will\nresult in #PF) until accepted from within the enclave via\nENCLU[EACCEPT].\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Haitao Huang <haitao.huang@intel.com>\nTested-by: Vijay Dhanraj <vijay.dhanraj@intel.com>\nLink: https://lkml.kernel.org/r/a254a58eabea053803277449b24b6e4963a3883b.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5a90d2c3f5ef87717e54572af8426aba6fdbdaa6"
        },
        {
          "sha": "7b013e723a1f689077347b30778d8831b6d92969",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Tighten accessible memory range after enclave initialization\n\nBefore an enclave is initialized the enclave's memory range is unknown.\nThe enclave's memory range is learned at the time it is created via the\nSGX_IOC_ENCLAVE_CREATE ioctl() where the provided memory range is\nobtained from an earlier mmap() of /dev/sgx_enclave. After an enclave\nis initialized its memory can be mapped into user space (mmap()) from\nwhere it can be entered at its defined entry points.\n\nWith the enclave's memory range known after it is initialized there is\nno reason why it should be possible to map memory outside this range.\n\nLock down access to the initialized enclave's memory range by denying\nany attempt to map memory outside its memory range.\n\nLocking down the memory range also makes adding pages to an initialized\nenclave more efficient. Pages are added to an initialized enclave by\naccessing memory that belongs to the enclave's memory range but not yet\nbacked by an enclave page. If it is possible for user space to map\nmemory that does not form part of the enclave then an access to this\nmemory would eventually fail. Failures range from a prompt general\nprotection fault if the access was an ENCLU[EACCEPT] from within the\nenclave, or a page fault via the vDSO if it was another access from\nwithin the enclave, or a SIGBUS (also resulting from a page fault) if\nthe access was from outside the enclave.\n\nDisallowing invalid memory to be mapped in the first place avoids\npreventable failures.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/6391460d75ae79cea2e81eef0f6ffc03c6e9cfe7.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7b013e723a1f689077347b30778d8831b6d92969"
        },
        {
          "sha": "45d546b8c109d69f6659d58b2ace005b2f07f557",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Support modifying SGX page type\n\nEvery enclave contains one or more Thread Control Structures (TCS). The\nTCS contains meta-data used by the hardware to save and restore thread\nspecific information when entering/exiting the enclave. With SGX1 an\nenclave needs to be created with enough TCSs to support the largest\nnumber of threads expecting to use the enclave and enough enclave pages\nto meet all its anticipated memory demands. In SGX1 all pages remain in\nthe enclave until the enclave is unloaded.\n\nSGX2 introduces a new function, ENCLS[EMODT], that is used to change\nthe type of an enclave page from a regular (SGX_PAGE_TYPE_REG) enclave\npage to a TCS (SGX_PAGE_TYPE_TCS) page or change the type from a\nregular (SGX_PAGE_TYPE_REG) or TCS (SGX_PAGE_TYPE_TCS)\npage to a trimmed (SGX_PAGE_TYPE_TRIM) page (setting it up for later\nremoval).\n\nWith the existing support of dynamically adding regular enclave pages\nto an initialized enclave and changing the page type to TCS it is\npossible to dynamically increase the number of threads supported by an\nenclave.\n\nChanging the enclave page type to SGX_PAGE_TYPE_TRIM is the first step\nof dynamically removing pages from an initialized enclave. The complete\npage removal flow is:\n1) Change the type of the pages to be removed to SGX_PAGE_TYPE_TRIM\n   using the SGX_IOC_ENCLAVE_MODIFY_TYPES ioctl() introduced here.\n2) Approve the page removal by running ENCLU[EACCEPT] from within\n   the enclave.\n3) Initiate actual page removal using the ioctl() introduced in the\n   following patch.\n\nAdd ioctl() SGX_IOC_ENCLAVE_MODIFY_TYPES to support changing SGX\nenclave page types within an initialized enclave. With\nSGX_IOC_ENCLAVE_MODIFY_TYPES the user specifies a page range and the\nenclave page type to be applied to all pages in the provided range.\nThe ioctl() itself can return an error code based on failures\nencountered by the kernel. It is also possible for SGX specific\nfailures to be encountered.  Add a result output parameter to\ncommunicate the SGX return code. It is possible for the enclave page\ntype change request to fail on any page within the provided range.\nSupport partial success by returning the number of pages that were\nsuccessfully changed.\n\nAfter the page type is changed the page continues to be accessible\nfrom the kernel perspective with page table entries and internal\nstate. The page may be moved to swap. Any access until ENCLU[EACCEPT]\nwill encounter a page fault with SGX flag set in error code.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Haitao Huang <haitao.huang@intel.com>\nTested-by: Vijay Dhanraj <vijay.dhanraj@intel.com>\nLink: https://lkml.kernel.org/r/babe39318c5bf16fc65fbfb38896cdee72161575.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/45d546b8c109d69f6659d58b2ace005b2f07f557"
        },
        {
          "sha": "9849bb27152c18e8531424c0a8ef5f51ece40aea",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Support complete page removal\n\nThe SGX2 page removal flow was introduced in previous patch and is\nas follows:\n1) Change the type of the pages to be removed to SGX_PAGE_TYPE_TRIM\n   using the ioctl() SGX_IOC_ENCLAVE_MODIFY_TYPES introduced in\n   previous patch.\n2) Approve the page removal by running ENCLU[EACCEPT] from within\n   the enclave.\n3) Initiate actual page removal using the ioctl()\n   SGX_IOC_ENCLAVE_REMOVE_PAGES introduced here.\n\nSupport the final step of the SGX2 page removal flow with ioctl()\nSGX_IOC_ENCLAVE_REMOVE_PAGES. With this ioctl() the user specifies\na page range that should be removed. All pages in the provided\nrange should have the SGX_PAGE_TYPE_TRIM page type and the request\nwill fail with EPERM (Operation not permitted) if a page that does\nnot have the correct type is encountered. Page removal can fail\non any page within the provided range. Support partial success by\nreturning the number of pages that were successfully removed.\n\nSince actual page removal will succeed even if ENCLU[EACCEPT] was not\nrun from within the enclave the ENCLU[EMODPR] instruction with RWX\npermissions is used as a no-op mechanism to ensure ENCLU[EACCEPT] was\nsuccessfully run from within the enclave before the enclave page is\nremoved.\n\nIf the user omits running SGX_IOC_ENCLAVE_REMOVE_PAGES the pages will\nstill be removed when the enclave is unloaded.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nReviewed-by: Jarkko Sakkinen <jarkko@kernel.org>\nTested-by: Haitao Huang <haitao.huang@intel.com>\nTested-by: Vijay Dhanraj <vijay.dhanraj@intel.com>\nTested-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/b75ee93e96774e38bb44a24b8e9bbfb67b08b51b.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9849bb27152c18e8531424c0a8ef5f51ece40aea"
        },
        {
          "sha": "a0506b3b063641f0a05b2a4399442a38aad22291",
          "author": {
            "email": "reinette.chatre@intel.com",
            "name": "Reinette Chatre"
          },
          "message": "x86/sgx: Free up EPC pages directly to support large page ranges\n\nThe page reclaimer ensures availability of EPC pages across all\nenclaves. In support of this it runs independently from the\nindividual enclaves in order to take locks from the different\nenclaves as it writes pages to swap.\n\nWhen needing to load a page from swap an EPC page needs to be\navailable for its contents to be loaded into. Loading an existing\nenclave page from swap does not reclaim EPC pages directly if\nnone are available, instead the reclaimer is woken when the\navailable EPC pages are found to be below a watermark.\n\nWhen iterating over a large number of pages in an oversubscribed\nenvironment there is a race between the reclaimer woken up and\nEPC pages reclaimed fast enough for the page operations to proceed.\n\nEnsure there are EPC pages available before attempting to load\na page that may potentially be pulled from swap into an available\nEPC page.\n\nSigned-off-by: Reinette Chatre <reinette.chatre@intel.com>\nSigned-off-by: Dave Hansen <dave.hansen@linux.intel.com>\nAcked-by: Jarkko Sakkinen <jarkko@kernel.org>\nLink: https://lkml.kernel.org/r/a0d8f037c4a075d56bf79f432438412985f7ff7a.1652137848.git.reinette.chatre@intel.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a0506b3b063641f0a05b2a4399442a38aad22291"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T17:51:59Z"
  },
  {
    "id": "23286895006",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10650139367,
      "size": 108,
      "distinct_size": 108,
      "ref": "refs/heads/master",
      "head": "3bd6e5854bf9bb5436d6b533e206561839e3b284",
      "before": "b2a88c212e652e94f1e4b635910972ac57ba4e97",
      "commits": [
        {
          "sha": "f2c5092190f21e02d384f750bcc473554f3aa3f8",
          "author": {
            "email": "bigeasy@linutronix.de",
            "name": "Sebastian Andrzej Siewior"
          },
          "message": "arch/*: Disable softirq stacks on PREEMPT_RT.\n\nPREEMPT_RT preempts softirqs and the current implementation avoids\ndo_softirq_own_stack() and only uses __do_softirq().\n\nDisable the unused softirqs stacks on PREEMPT_RT to save some memory and\nensure that do_softirq_own_stack() is not used bwcause it is not expected.\n\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f2c5092190f21e02d384f750bcc473554f3aa3f8"
        },
        {
          "sha": "548927e0312194167f7ee5de47d50c2036088cce",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "arm64: io: Use asm-generic high level MMIO accessors\n\nRemove custom arm64 MMIO accessors read{b,w,l,q} and their relaxed\nversions in support to use asm-generic defined accessors. Also define\none set of IO barriers (ar/bw version) used by asm-generic code to\noverride the arm64 specific variants.\n\nSuggested-by: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nAcked-by: Catalin Marinas <catalin.marinas@arm.com>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/548927e0312194167f7ee5de47d50c2036088cce"
        },
        {
          "sha": "018b741ea2a6f9138314c9b7333a2a3971006907",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "coresight: etm4x: Use asm-generic IO memory barriers\n\nPer discussion in [1], it was decided to move to using architecture\nindependent/asm-generic IO memory barriers to have just one set of\nthem and deprecate use of arm64 specific IO memory barriers in driver\ncode. So replace current usage of __io_rmb()/__iowmb() in drivers to\n__io_ar()/__io_bw().\n\n[1] https://lore.kernel.org/lkml/CAK8P3a0L2tLeF1Q0+0ijUxhGNaw+Z0fyPC1oW6_ELQfn0=i4iw@mail.gmail.com/\n\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nReviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nCc: Mathieu Poirier <mathieu.poirier@linaro.org>\nCc: Suzuki K Poulose <suzuki.poulose@arm.com>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/018b741ea2a6f9138314c9b7333a2a3971006907"
        },
        {
          "sha": "443685992bda9bb4f8b17fc02c9f6c60e62b1461",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "irqchip/tegra: Fix overflow implicit truncation warnings\n\nFix -Woverflow warnings for tegra irqchip driver which is a result\nof moving arm64 custom MMIO accessor macros to asm-generic function\nimplementations giving a bonus type-checking now and uncovering these\noverflow warnings.\n\ndrivers/irqchip/irq-tegra.c: In function ‘tegra_ictlr_suspend’:\ndrivers/irqchip/irq-tegra.c:151:18: warning: large integer implicitly truncated to unsigned type [-Woverflow]\n   writel_relaxed(~0ul, ictlr + ICTLR_COP_IER_CLR);\n                  ^\n\nSuggested-by: Marc Zyngier <maz@kernel.org>\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nCc: Marc Zyngier <maz@kernel.org>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/443685992bda9bb4f8b17fc02c9f6c60e62b1461"
        },
        {
          "sha": "98692f52c588225034cbff458622c2c06dfcb544",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "drm/meson: Fix overflow implicit truncation warnings\n\nFix -Woverflow warnings for drm/meson driver which is a result\nof moving arm64 custom MMIO accessor macros to asm-generic function\nimplementations giving a bonus type-checking now and uncovering these\noverflow warnings.\n\ndrivers/gpu/drm/meson/meson_viu.c: In function ‘meson_viu_init’:\ndrivers/gpu/drm/meson/meson_registers.h:1826:48: error: large integer implicitly truncated to unsigned type [-Werror=overflow]\n #define  VIU_OSD_BLEND_REORDER(dest, src)      ((src) << (dest * 4))\n                                                ^\ndrivers/gpu/drm/meson/meson_viu.c:472:18: note: in expansion of macro ‘VIU_OSD_BLEND_REORDER’\n   writel_relaxed(VIU_OSD_BLEND_REORDER(0, 1) |\n                  ^~~~~~~~~~~~~~~~~~~~~\n\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nReviewed-by: Arnd Bergmann <arnd@arndb.de>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Neil Armstrong <narmstrong@baylibre.com>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/98692f52c588225034cbff458622c2c06dfcb544"
        },
        {
          "sha": "d593d64f043add170d8ea9cf698449637917dcf9",
          "author": {
            "email": "psodagud@codeaurora.org",
            "name": "Prasad Sodagudi"
          },
          "message": "lib: Add register read/write tracing support\n\nGeneric MMIO read/write i.e., __raw_{read,write}{b,l,w,q} accessors\nare typically used to read/write from/to memory mapped registers\nand can cause hangs or some undefined behaviour in following few\ncases,\n\n* If the access to the register space is unclocked, for example: if\n  there is an access to multimedia(MM) block registers without MM\n  clocks.\n\n* If the register space is protected and not set to be accessible from\n  non-secure world, for example: only EL3 (EL: Exception level) access\n  is allowed and any EL2/EL1 access is forbidden.\n\n* If xPU(memory/register protection units) is controlling access to\n  certain memory/register space for specific clients.\n\nand more...\n\nSuch cases usually results in instant reboot/SErrors/NOC or interconnect\nhangs and tracing these register accesses can be very helpful to debug\nsuch issues during initial development stages and also in later stages.\n\nSo use ftrace trace events to log such MMIO register accesses which\nprovides rich feature set such as early enablement of trace events,\nfiltering capability, dumping ftrace logs on console and many more.\n\nSample output:\n\nrwmmio_write: __qcom_geni_serial_console_write+0x160/0x1e0 width=32 val=0xa0d5d addr=0xfffffbfffdbff700\nrwmmio_post_write: __qcom_geni_serial_console_write+0x160/0x1e0 width=32 val=0xa0d5d addr=0xfffffbfffdbff700\nrwmmio_read: qcom_geni_serial_poll_bit+0x94/0x138 width=32 addr=0xfffffbfffdbff610\nrwmmio_post_read: qcom_geni_serial_poll_bit+0x94/0x138 width=32 val=0x0 addr=0xfffffbfffdbff610\n\nCo-developed-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nSigned-off-by: Prasad Sodagudi <psodagud@codeaurora.org>\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nAcked-by: Steven Rostedt (Google) <rostedt@goodmis.org>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d593d64f043add170d8ea9cf698449637917dcf9"
        },
        {
          "sha": "451f2f1c908ba6225e2de82c53eae399f9d342c0",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "KVM: arm64: Add a flag to disable MMIO trace for nVHE KVM\n\nAdd a generic flag (__DISABLE_TRACE_MMIO__) to disable MMIO\ntracing in nVHE KVM as the tracepoint and MMIO logging symbols\nshould not be visible at nVHE KVM as there is no way to execute\nthem. It can also be used to disable MMIO tracing for specific\ndrivers.\n\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/451f2f1c908ba6225e2de82c53eae399f9d342c0"
        },
        {
          "sha": "210031971cdd25a2a2b70c190de98c237db0731f",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "asm-generic/io: Add logging support for MMIO accessors\n\nAdd logging support for MMIO high level accessors such as read{b,w,l,q}\nand their relaxed versions to aid in debugging unexpected crashes/hangs\ncaused by the corresponding MMIO operation.\n\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/210031971cdd25a2a2b70c190de98c237db0731f"
        },
        {
          "sha": "60457d5e158dd7dbd729c79809cd2c22fc676e2b",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "serial: qcom_geni_serial: Disable MMIO tracing for geni serial\n\nDisable MMIO tracing for geni serial driver to prevent excessive\nlogging. Any access over serial console would involve a lot of\nTX and RX register accesses (and few others), so these MMIO\nread/write trace events in these drivers cause a lot of unwanted\nnoise because of the high frequency of such operations and it is\nnot very useful tracing these events for such drivers.\nGiven we want to enable these trace events on development devices\n(maybe not production devices) where performance also really matters\nso that we don't regress other components by wasting CPU cycles and\nmemory collecting these traces, it makes more sense to disable these\ntraces from such drivers.\n\nAlso another reason to disable these traces would be to prevent\nrecursive tracing when we display the trace buffer containing\nthese MMIO trace events since writing onto serial console would\nfurther record MMIO traces.\n\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nCc: Bjorn Andersson <bjorn.andersson@linaro.org>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/60457d5e158dd7dbd729c79809cd2c22fc676e2b"
        },
        {
          "sha": "6f1de1da8156572e07287814bd6eb0ea3d90e495",
          "author": {
            "email": "quic_saipraka@quicinc.com",
            "name": "Sai Prakash Ranjan"
          },
          "message": "soc: qcom: geni: Disable MMIO tracing for GENI SE\n\nDisable MMIO tracing for GENI SE driver to prevent excessive\nlogging. Any access over serial console would involve a lot of\nTX and RX register accesses (and few others), so these MMIO\nread/write trace events in these drivers cause a lot of unwanted\nnoise because of the high frequency of such operations and it is\nnot very useful tracing these events for such drivers.\nGiven we want to enable these trace events on development devices\n(maybe not production devices) where performance also really\nmatters so that we don't regress other components by wasting CPU\ncycles and memory collecting these traces, it makes more sense to\ndisable these  traces from such drivers.\n\nAlso another reason to disable these traces would be to prevent\nrecursive tracing when we display the trace buffer containing\nthese MMIO trace events since writing onto serial console would\nfurther record MMIO traces.\n\nSigned-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>\nCc: Bjorn Andersson <bjorn.andersson@linaro.org>\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6f1de1da8156572e07287814bd6eb0ea3d90e495"
        },
        {
          "sha": "57a2d0c1b27dd0a92d4d22818176e7f53eed3104",
          "author": {
            "email": "sven@svenpeter.dev",
            "name": "Sven Peter"
          },
          "message": "MAINTAINERS: add ARM/APPLE MACHINE mailing list\n\nSigned-off-by: Sven Peter <sven@svenpeter.dev>\nReviewed-by: Alyssa Rosenzweig <alyssa@rosenzweig.io>\nSigned-off-by: Hector Martin <marcan@marcan.st>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/57a2d0c1b27dd0a92d4d22818176e7f53eed3104"
        },
        {
          "sha": "c02b60cb25289289cb7c1d0307d15a526b9e6669",
          "author": {
            "email": "marcan@marcan.st",
            "name": "Hector Martin"
          },
          "message": "arm64: dts: apple: Re-parent ANS2 power domains\n\nTurns out that the APCIE_ST*_SYS domains do hard-depend on ANS2, so\nwithout this they refuse to power up.\n\nReviewed-by: Sven Peter <sven@svenpeter.dev>\nSigned-off-by: Sven Peter <sven@svenpeter.dev>\nSigned-off-by: Hector Martin <marcan@marcan.st>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c02b60cb25289289cb7c1d0307d15a526b9e6669"
        },
        {
          "sha": "93929fb6c4ef6211e96679f060c842f35fac7710",
          "author": {
            "email": "arnd@arndb.de",
            "name": "Arnd Bergmann"
          },
          "message": "Merge branch 'asm-generic-mmiotrace' into asm-generic\n\nA patch series from Sai Prakash Ranjan, who explains:\n\nGeneric MMIO read/write i.e., __raw_{read,write}{b,l,w,q} accessors\nare typically used to read/write from/to memory mapped registers\nand can cause hangs or some undefined behaviour in following cases,\n\n* If the access to the register space is unclocked, for example: if\n  there is an access to multimedia(MM) block registers without MM\n  clocks.\n\n* If the register space is protected and not set to be accessible from\n  non-secure world, for example: only EL3 (EL: Exception level) access\n  is allowed and any EL2/EL1 access is forbidden.\n\n* If xPU(memory/register protection units) is controlling access to\n  certain memory/register space for specific clients.\n\nand more...\n\nSuch cases usually results in instant reboot/SErrors/NOC or interconnect\nhangs and tracing these register accesses can be very helpful to debug\nsuch issues during initial development stages and also in later stages.\n\nSo use ftrace trace events to log such MMIO register accesses which\nprovides rich feature set such as early enablement of trace events,\nfiltering capability, dumping ftrace logs on console and many more.\n\nSample output:\n\nrwmmio_write: __qcom_geni_serial_console_write+0x160/0x1e0 width=32 val=0xa0d5d addr=0xfffffbfffdbff700\nrwmmio_post_write: __qcom_geni_serial_console_write+0x160/0x1e0 width=32 val=0xa0d5d addr=0xfffffbfffdbff700\nrwmmio_read: qcom_geni_serial_poll_bit+0x94/0x138 width=32 addr=0xfffffbfffdbff610\nrwmmio_post_read: qcom_geni_serial_poll_bit+0x94/0x138 width=32 val=0x0 addr=0xfffffbfffdbff610\n\nThis series is a follow-up for the series [1] and a recent series [2] making use\nof both.\n\n[1] https://lore.kernel.org/lkml/cover.1536430404.git.saiprakash.ranjan@codeaurora.org/\n[2] https://lore.kernel.org/lkml/1604631386-178312-1-git-send-email-psodagud@codeaurora.org/\n\nNote in v4 version, Arnd suggested to benchmark and compare size with callback\nbased implementation, please see [3] for more details on that with brief comparison below.\n\n**Inline version with CONFIG_FTRACE=y and CONFIG_TRACE_MMIO_ACCESS=y**\n$ size vmlinux\n   text           data             bss     dec             hex         filename\n 23884219        14284468         532568 38701255        24e88c7        vmlinux\n\n**Callback version with CONFIG_FTRACE=y and CONFIG_TRACE_MMIO_ACCESS=y**\n$ size vmlinux\n    text          data             bss     dec             hex        filename\n 24108179        14279596         532568 38920343        251e097       vmlinux\n\n$ ./scripts/bloat-o-meter inline-vmlinux callback-vmlinux\nadd/remove: 8/3 grow/shrink: 4889/89 up/down: 242244/-11564 (230680)\nTotal: Before=25812612, After=26043292, chg +0.89%\n\n[3] https://lore.kernel.org/lkml/466449a1-36da-aaa9-7e4f-477f36b52c9e@quicinc.com/\n\nLink: https://lore.kernel.org/lkml/cover.1652891705.git.quic_saipraka@quicinc.com/\n\n* asm-generic-mmiotrace:\n  soc: qcom: geni: Disable MMIO tracing for GENI SE\n  serial: qcom_geni_serial: Disable MMIO tracing for geni serial\n  asm-generic/io: Add logging support for MMIO accessors\n  KVM: arm64: Add a flag to disable MMIO trace for nVHE KVM\n  lib: Add register read/write tracing support\n  drm/meson: Fix overflow implicit truncation warnings\n  irqchip/tegra: Fix overflow implicit truncation warnings\n  coresight: etm4x: Use asm-generic IO memory barriers\n  arm64: io: Use asm-generic high level MMIO accessors\n  arch/*: Disable softirq stacks on PREEMPT_RT.",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/93929fb6c4ef6211e96679f060c842f35fac7710"
        },
        {
          "sha": "4313a24985f00340eeb591fd66aa2b257b9e0a69",
          "author": {
            "email": "arnd@arndb.de",
            "name": "Arnd Bergmann"
          },
          "message": "arch/*/: remove CONFIG_VIRT_TO_BUS\n\nAll architecture-independent users of virt_to_bus() and bus_to_virt()\nhave been fixed to use the dma mapping interfaces or have been\nremoved now.  This means the definitions on most architectures, and the\nCONFIG_VIRT_TO_BUS symbol are now obsolete and can be removed.\n\nThe only exceptions to this are a few network and scsi drivers for m68k\nAmiga and VME machines and ppc32 Macintosh. These drivers work correctly\nwith the old interfaces and are probably not worth changing.\n\nOn alpha and parisc, virt_to_bus() were still used in asm/floppy.h.\nalpha can use isa_virt_to_bus() like x86 does, and parisc can just\nopen-code the virt_to_phys() here, as this is architecture specific\ncode.\n\nI tried updating the bus-virt-phys-mapping.rst documentation, which\nstarted as an email from Linus to explain some details of the Linux-2.0\ndriver interfaces. The bits about virt_to_bus() were declared obsolete\nbackin 2000, and the rest is not all that relevant any more, so in the\nend I just decided to remove the file completely.\n\nReviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>\nAcked-by: Geert Uytterhoeven <geert@linux-m68k.org>\nAcked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)\nAcked-by: Helge Deller <deller@gmx.de> # parisc\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4313a24985f00340eeb591fd66aa2b257b9e0a69"
        },
        {
          "sha": "b6b9585876da018bdde2d5f15d206a689c0d70f3",
          "author": {
            "email": "clement.leger@bootlin.com",
            "name": "Clément Léger"
          },
          "message": "reset: microchip-sparx5: allow building as a module\n\nSet RESET_MCHP_SPARX5 as a tristate and add MODULE_DEVICE_TABLE() to\nallow building this driver as a module.\n\nSigned-off-by: Clément Léger <clement.leger@bootlin.com>\nSigned-off-by: Philipp Zabel <p.zabel@pengutronix.de>\nLink: https://lore.kernel.org/r/20220617103730.490588-1-clement.leger@bootlin.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b6b9585876da018bdde2d5f15d206a689c0d70f3"
        },
        {
          "sha": "cdd23dd9fcd67cc3581d0f98a1c89acd90030336",
          "author": {
            "email": "sunying@nj.iscas.ac.cn",
            "name": "Ying Sun"
          },
          "message": "arch: microblaze: Remove unused \"select HANDLE_DOMAIN_IRQ\"\n\nThe \"CONFIG_HANDLE_DOMAIN_IRQ\" item has not been used right now.\nRemove the old unused selection in config MICROBLAZE.\n\nSigned-off-by: Ying Sun <sunying@nj.iscas.ac.cn>\nLink: https://lore.kernel.org/r/20220629080652.28029-1-sunying@nj.iscas.ac.cn\nSigned-off-by: Michal Simek <michal.simek@amd.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cdd23dd9fcd67cc3581d0f98a1c89acd90030336"
        },
        {
          "sha": "9a3bfa01aa1c5b5478edaf7c76ea0b3a94f9c13e",
          "author": {
            "email": "linux@rasmusvillemoes.dk",
            "name": "Rasmus Villemoes"
          },
          "message": "lib/test_printf.c: split write-beyond-buffer check in two\n\nBefore each invocation of vsnprintf(), do_test() memsets the entire\nallocated buffer to a sentinel value. That buffer includes leading and\ntrailing padding which is never included in the buffer area handed to\nvsnprintf (spaces merely for clarity):\n\n  pad  test_buffer      pad\n  **** **************** ****\n\nThen vsnprintf() is invoked with a bufsize argument <=\nBUF_SIZE. Suppose bufsize=10, then we'd have e.g.\n\n |pad |   test_buffer    |pad |\n  **** pizza0 **** ****** ****\n A    B      C    D           E\n\nwhere vsnprintf() was given the area from B to D.\n\nIt is obviously a bug for vsnprintf to touch anything between A and B\nor between D and E. The former is checked for as one would expect. But\nfor the latter, we are actually a little stricter in that we check the\narea between C and E.\n\nSplit that check in two, providing a clearer error message in case it\nwas a genuine buffer overrun and not merely a write within the\nprovided buffer, but after the end of the generated string.\n\nSo far, no part of the vsnprintf() implementation has had any use for\nusing the whole buffer as scratch space, but it's not unreasonable to\nallow that, as long as the result is properly nul-terminated and the\nreturn value is the right one. However, it is somewhat unusual, and\nmost %<something> won't need this, so keep the [C,D] check, but make\nit easy for a later patch to make that part opt-out for certain tests.\n\nSigned-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>\nTested-by: Jia He <justin.he@arm.com>\nSigned-off-by: Jia He <justin.he@arm.com>\nReviewed-by: Petr Mladek <pmladek@suse.com>\nSigned-off-by: Petr Mladek <pmladek@suse.com>\nLink: https://lore.kernel.org/r/20210615154952.2744-4-justin.he@arm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9a3bfa01aa1c5b5478edaf7c76ea0b3a94f9c13e"
        },
        {
          "sha": "18d1909be3451e1a2e322e9035f03d0a18f7bee8",
          "author": {
            "email": "ben.dooks@sifive.com",
            "name": "Ben Dooks"
          },
          "message": "reset: allow building of reset simple driver if expert config selected\n\nIf CONFIG_EXPERT is selected, allow selection of CONFIG_RESET_SIMPLE\nif needed by the user.\n\nSigned-off-by: Ben Dooks <ben.dooks@sifive.com>\nSigned-off-by: Philipp Zabel <p.zabel@pengutronix.de>\nLink: https://lore.kernel.org/r/20220708165656.269507-1-ben.dooks@sifive.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/18d1909be3451e1a2e322e9035f03d0a18f7bee8"
        },
        {
          "sha": "af19f1936d63f8aefeca61a5410f8908e0f11f56",
          "author": {
            "email": "p.zabel@pengutronix.de",
            "name": "Philipp Zabel"
          },
          "message": "reset: a10sr: allow building under COMPILE_TEST\n\nThis driver can be built under COMPILE_TEST. Allow it.\n\nSigned-off-by: Philipp Zabel <p.zabel@pengutronix.de>\nLink: https://lore.kernel.org/r/20220711130624.1217599-1-p.zabel@pengutronix.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/af19f1936d63f8aefeca61a5410f8908e0f11f56"
        },
        {
          "sha": "b5f37a0b6f667f5c72340ca9dcd7703f261cb981",
          "author": {
            "email": "jianchunfu@cmss.chinamobile.com",
            "name": "jianchunfu"
          },
          "message": "rtla/utils: Use calloc and check the potential memory allocation failure\n\nReplace malloc with calloc and add memory allocating check\nof mon_cpus before used.\n\nLink: https://lkml.kernel.org/r/20220615073348.6891-1-jianchunfu@cmss.chinamobile.com\n\nFixes: 7d0dc9576dc3 (\"rtla/timerlat: Add --dma-latency option\")\nSigned-off-by: jianchunfu <jianchunfu@cmss.chinamobile.com>\nAcked-by: Daniel Bristot de Oliveira <bristot@kernel.org>\nSigned-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b5f37a0b6f667f5c72340ca9dcd7703f261cb981"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T17:32:02Z"
  },
  {
    "id": "23273443759",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10643464171,
      "size": 784,
      "distinct_size": 784,
      "ref": "refs/heads/master",
      "head": "b2a88c212e652e94f1e4b635910972ac57ba4e97",
      "before": "31be1d0fbd950395701d9fd47d8fb1f99c996f61",
      "commits": [
        {
          "sha": "650126a890902a47304e9326a85b603c96f0c980",
          "author": {
            "email": "wangxiang@cdjrlc.com",
            "name": "Xiang wangx"
          },
          "message": "RDMA/hfi1: Fix typo in comment\n\nDelete the redundant word 'and'.\n\nLink: https://lore.kernel.org/r/20220606123419.29109-1-wangxiang@cdjrlc.com\nSigned-off-by: Xiang wangx <wangxiang@cdjrlc.com>\nSigned-off-by: Leon Romanovsky <leon@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/650126a890902a47304e9326a85b603c96f0c980"
        },
        {
          "sha": "158e71bb69e368b8b33e8b7c4ac8c111da0c1ae2",
          "author": {
            "email": "aharonl@nvidia.com",
            "name": "Aharon Landau"
          },
          "message": "RDMA/mlx5: Add a umr recovery flow\n\nWhen a UMR fails, the UMR QP state changes to an error state. Therefore,\nall the further UMR operations will fail too.\n\nAdd a recovery flow to the UMR QP, and repost the flushed WQEs.\n\nLink: https://lore.kernel.org/r/6cc24816cca049bd8541317f5e41d3ac659445d3.1652588303.git.leonro@nvidia.com\nSigned-off-by: Aharon Landau <aharonl@nvidia.com>\nReviewed-by: Michael Guralnik <michaelgur@nvidia.com>\nSigned-off-by: Leon Romanovsky <leon@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/158e71bb69e368b8b33e8b7c4ac8c111da0c1ae2"
        },
        {
          "sha": "9c40c36e75ffd49952cd4ead0672defc4b4dbdf7",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Reduce Initiator-Initiator thrashing\n\nThis patch uses GFFID switch command to scan whether remote device is\nTarget or Initiator mode.  Based on that info, driver will not pass up\nInitiator info to authentication application. This helps reduce unnecessary\nstress for authentication application to deal with unused connections.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-2-njavali@marvell.com\nFixes: 7ebb336e45ef (\"scsi: qla2xxx: edif: Add start + stop bsgs\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9c40c36e75ffd49952cd4ead0672defc4b4dbdf7"
        },
        {
          "sha": "7a7b0b4865d3490f62d6ef1a3aa39fa2b47859a4",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: bsg refactor\n\n - Add version field to edif bsg for future enhancement.\n\n - Add version edif bsg version check\n\n - Remove unused interfaces and fields.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-3-njavali@marvell.com\nFixes: dd30706e73b7 (\"scsi: qla2xxx: edif: Add key update\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7a7b0b4865d3490f62d6ef1a3aa39fa2b47859a4"
        },
        {
          "sha": "df648afa39da9c4d3af99c6c03dc3e9c7dfa99b0",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Wait for app to ack on sess down\n\nOn session deletion, wait for app to acknowledge before moving on. This\nallows both app and driver to stay in sync. In addition, this gives a\nchance for authentication app to do any type of cleanup before moving on.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-4-njavali@marvell.com\nFixes: dd30706e73b7 (\"scsi: qla2xxx: edif: Add key update\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/df648afa39da9c4d3af99c6c03dc3e9c7dfa99b0"
        },
        {
          "sha": "5ecd241bd7b1088a189581c0b560a13fe93621f6",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Add bsg interface to read doorbell events\n\nAdd bsg interface for app to read doorbell events. This interface lets\ndriver know how much app can read based on return buffer size. When the\nnext event(s) occur, driver will return the bsg_job with the event(s) in\nthe return buffer.\n\nIf there is no event to read, driver will hold on to the bsg_job up to few\nseconds as a way to control the polling interval.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-5-njavali@marvell.com\nFixes: dd30706e73b7 (\"scsi: qla2xxx: edif: Add key update\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5ecd241bd7b1088a189581c0b560a13fe93621f6"
        },
        {
          "sha": "e0fb8ce2bb9e52c846e54ad2c58b5b7beb13eb09",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Fix potential stuck session in sa update\n\nWhen a thread is in the process of reestablish a session, a flag is set to\nprevent multiple threads/triggers from doing the same task. This flag was\nleft on, and any attempt to relogin was locked out. Clear this flag if the\nattempt has failed.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-6-njavali@marvell.com\nFixes: dd30706e73b7 (\"scsi: qla2xxx: edif: Add key update\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e0fb8ce2bb9e52c846e54ad2c58b5b7beb13eb09"
        },
        {
          "sha": "cf79716e6636400ae38c37bc8a652b1e522abbba",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Synchronize NPIV deletion with authentication application\n\nNotify authentication application of a NPIV deletion event is about to\noccur. This allows app to perform cleanup.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-7-njavali@marvell.com\nFixes: 9efea843a906 (\"scsi: qla2xxx: edif: Add detection of secure device\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cf79716e6636400ae38c37bc8a652b1e522abbba"
        },
        {
          "sha": "0b3f3143d473b489a7aa0779c43bcdb344bd3014",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Add retry for ELS passthrough\n\nRelating to EDIF, when sending IKE message, updating key or deleting key,\ndriver can encounter IOCB queue full. Add additional retries to reduce\nhigher level recovery.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-8-njavali@marvell.com\nFixes: dd30706e73b7 (\"scsi: qla2xxx: edif: Add key update\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0b3f3143d473b489a7aa0779c43bcdb344bd3014"
        },
        {
          "sha": "1040e5f75ddf56fdd571a2a14b4d1a9e8ed846a9",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Remove old doorbell interface\n\nRecently driver has implemented a new doorbell mechanism via bsg.  The new\ndoorbell tells driver the exact buffer size application has where driver\ncan fill it up with events. The old doorbell guestimated application buffer\nsize is 256.\n\nRemove duplicate functionality, the application has moved on to the new\ndoorbell interface.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-9-njavali@marvell.com\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1040e5f75ddf56fdd571a2a14b4d1a9e8ed846a9"
        },
        {
          "sha": "789d54a4178634850e441f60c0326124138e7269",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Fix n2n discovery issue with secure target\n\nUser failed to see disk via n2n topology. Driver used up all login retries\nbefore authentication application started. When authentication application\nstarted, driver did not have enough login retries to connect securely. On\napp_start, driver will reset the login retry attempt count.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-10-njavali@marvell.com\nFixes: 4de067e5df12 (\"scsi: qla2xxx: edif: Add N2N support for EDIF\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/789d54a4178634850e441f60c0326124138e7269"
        },
        {
          "sha": "aec55325ddec975216119da000092cb8664a3399",
          "author": {
            "email": "qutran@marvell.com",
            "name": "Quinn Tran"
          },
          "message": "scsi: qla2xxx: edif: Fix n2n login retry for secure device\n\nAfter initiator has burned up all login retries, target authentication\napplication begins to run. This triggers a link bounce on target side.\nInitiator will attempt another login. Due to N2N, the PRLI [nvme | fcp] can\nfail because of the mode mismatch with target. This patch add a few more\nlogin retries to revive the connection.\n\nLink: https://lore.kernel.org/r/20220607044627.19563-11-njavali@marvell.com\nFixes: 4de067e5df12 (\"scsi: qla2xxx: edif: Add N2N support for EDIF\")\nSigned-off-by: Quinn Tran <qutran@marvell.com>\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/aec55325ddec975216119da000092cb8664a3399"
        },
        {
          "sha": "4dc48a107a146cade61097958ff2366c13da1f60",
          "author": {
            "email": "njavali@marvell.com",
            "name": "Nilesh Javali"
          },
          "message": "scsi: qla2xxx: Update version to 10.02.07.500-k\n\nLink: https://lore.kernel.org/r/20220607044627.19563-12-njavali@marvell.com\nSigned-off-by: Nilesh Javali <njavali@marvell.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4dc48a107a146cade61097958ff2366c13da1f60"
        },
        {
          "sha": "a11b80692be5c408a33ea89e3fe1a240bef8c820",
          "author": {
            "email": "d.bogdanov@yadro.com",
            "name": "Dmitry Bogdanov"
          },
          "message": "scsi: target: iscsi: Add upcast helpers\n\niSCSI target is cluttered with open-coded container_of() conversions from\nse_nacl to iscsi_node_acl. The code could be cleaned by introducing a\nhelper - to_iscsi_nacl() (similar to other helpers in target core).\n\nWhile at it, make another iSCSI conversion helper consistent and rename\niscsi_tpg() helper to to_iscsi_tpg().\n\nLink: https://lore.kernel.org/r/20220523095905.26070-2-d.bogdanov@yadro.com\nReviewed-by: Roman Bolshakov <r.bolshakov@yadro.com>\nReviewed-by: Konstantin Shelekhin <k.shelekhin@yadro.com>\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nReviewed-by: Lee Duncan <lduncan@suse.com>\nSigned-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a11b80692be5c408a33ea89e3fe1a240bef8c820"
        },
        {
          "sha": "a75fcb0912a549c6c1da8395f33271ce06e84acd",
          "author": {
            "email": "d.bogdanov@yadro.com",
            "name": "Dmitry Bogdanov"
          },
          "message": "scsi: target: iscsi: Extract auth functions\n\nCreate functions that answers simple questions: Whether authentication is\nrequired, what credentials, whether connection is autenticated.\n\nLink: https://lore.kernel.org/r/20220523095905.26070-3-d.bogdanov@yadro.com\nReviewed-by: Roman Bolshakov <r.bolshakov@yadro.com>\nReviewed-by: Konstantin Shelekhin <k.shelekhin@yadro.com>\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nReviewed-by: Lee Duncan <lduncan@suse.com>\nSigned-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a75fcb0912a549c6c1da8395f33271ce06e84acd"
        },
        {
          "sha": "a6e0d179764cb31b2981c85e6fd156adc777e4ed",
          "author": {
            "email": "d.bogdanov@yadro.com",
            "name": "Dmitry Bogdanov"
          },
          "message": "scsi: target: iscsi: Control authentication per ACL\n\nAdd acls/{ACL}/attrib/authentication attribute that controls authentication\nfor particular ACL. By default, this attribute inherits a value of the\nauthentication attribute of the target port group to keep backward\ncompatibility.\n\nAuthentication attribute has 3 states:\n\n \"0\" - authentication is turned off for this ACL\n\n \"1\" - authentication is required for this ACL\n\n \"-1\" - authentication is inherited from TPG\n\nLink: https://lore.kernel.org/r/20220523095905.26070-4-d.bogdanov@yadro.com\nReviewed-by: Roman Bolshakov <r.bolshakov@yadro.com>\nReviewed-by: Konstantin Shelekhin <k.shelekhin@yadro.com>\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nSigned-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a6e0d179764cb31b2981c85e6fd156adc777e4ed"
        },
        {
          "sha": "3fd3a52ca672fea71ff6ebaded2e2ddbbfb3a397",
          "author": {
            "email": "liuke94@huawei.com",
            "name": "keliu"
          },
          "message": "scsi: core: iscsi: Directly use ida_alloc()/ida_free()\n\nUse ida_alloc()/ida_free() instead of the deprecated\nida_simple_get()/ida_simple_remove() interface.\n\nLink: https://lore.kernel.org/r/20220527083049.2552526-1-liuke94@huawei.com\nReviewed-by: Mike Christie <michael.christie@oracle.com>\nReviewed-by: Lee Duncan <lduncan@suse.com>\nSigned-off-by: keliu <liuke94@huawei.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3fd3a52ca672fea71ff6ebaded2e2ddbbfb3a397"
        },
        {
          "sha": "5e69a33c5cec019dd8ca46e31749c6dc78f7cbf3",
          "author": {
            "email": "hch@lst.de",
            "name": "Christoph Hellwig"
          },
          "message": "PCI/ERR: Recognize disconnected devices in report_error_detected()\n\nWhen a device is already unplugged by pciehp by the time the AER handler is\ninvoked, the PCIe device will already be in the pci_channel_io_perm_failure\nstate.  In that case simply return PCI_ERS_RESULT_DISCONNECT instead of\ntrying to do a state transition that will fail.\n\nAlso untangle the state transition failure from the lack of methods to\nimprove the debugging output in case it happens again.\n\nLink: https://lore.kernel.org/r/20220601074024.3481035-1-hch@lst.de\nSigned-off-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Bjorn Helgaas <bhelgaas@google.com>\nReviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5e69a33c5cec019dd8ca46e31749c6dc78f7cbf3"
        },
        {
          "sha": "f030304fdeb87ec8f1b518c73703214aec6cc24a",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "PCI: microchip: Fix refcount leak in mc_pcie_init_irq_domains()\n\nof_get_next_child() returns a node pointer with refcount incremented, so we\nshould use of_node_put() on it when we don't need it anymore.\n\nmc_pcie_init_irq_domains() only calls of_node_put() in the normal path,\nmissing it in some error paths.  Add missing of_node_put() to avoid\nrefcount leak.\n\nFixes: 6f15a9c9f941 (\"PCI: microchip: Add Microchip PolarFire PCIe controller driver\")\nLink: https://lore.kernel.org/r/20220605055123.59127-1-linmq006@gmail.com\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nSigned-off-by: Bjorn Helgaas <bhelgaas@google.com>\nReviewed-by: Rob Herring <robh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f030304fdeb87ec8f1b518c73703214aec6cc24a"
        },
        {
          "sha": "e8fbd344a5ea62663554b8546b6bf9f88b93785a",
          "author": {
            "email": "linmq006@gmail.com",
            "name": "Miaoqian Lin"
          },
          "message": "PCI: tegra194: Fix PM error handling in tegra_pcie_config_ep()\n\npm_runtime_enable() will increase power disable depth.  If\ndw_pcie_ep_init() fails, we should use pm_runtime_disable() to balance it\nwith pm_runtime_enable().\n\nAdd missing pm_runtime_disable() for tegra_pcie_config_ep().\n\nFixes: c57247f940e8 (\"PCI: tegra: Add support for PCIe endpoint mode in Tegra194\")\nLink: https://lore.kernel.org/r/20220602031910.55859-1-linmq006@gmail.com\nSigned-off-by: Miaoqian Lin <linmq006@gmail.com>\nSigned-off-by: Bjorn Helgaas <bhelgaas@google.com>\nReviewed-by: Vidya Sagar <vidyas@nvidia.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e8fbd344a5ea62663554b8546b6bf9f88b93785a"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T03:25:49Z"
  },
  {
    "id": "23272509490",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10642965517,
      "size": 243,
      "distinct_size": 243,
      "ref": "refs/heads/master",
      "head": "31be1d0fbd950395701d9fd47d8fb1f99c996f61",
      "before": "5f0848190c6dd0f5b8a2aaf0f1d900a96d96bee0",
      "commits": [
        {
          "sha": "1fb7a9fb6295220eb96c490581316b35fce180fe",
          "author": {
            "email": "biju.das.jz@bp.renesas.com",
            "name": "Biju Das"
          },
          "message": "clk: renesas: r9a07g044: Add GPT clock and reset entry\n\nAdd GPT clock and reset entry to CPG driver.\n\nSigned-off-by: Biju Das <biju.das.jz@bp.renesas.com>\nLink: https://lore.kernel.org/r/20220510110653.7326-2-biju.das.jz@bp.renesas.com\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1fb7a9fb6295220eb96c490581316b35fce180fe"
        },
        {
          "sha": "b6ee0bbf388ab38384f92339aa9a1df15e716cfe",
          "author": {
            "email": "biju.das.jz@bp.renesas.com",
            "name": "Biju Das"
          },
          "message": "clk: renesas: r9a07g044: Add POEG clock and reset entries\n\nAdd POEG clock and reset entries to CPG driver.\n\nSigned-off-by: Biju Das <biju.das.jz@bp.renesas.com>\nLink: https://lore.kernel.org/r/20220510110653.7326-3-biju.das.jz@bp.renesas.com\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b6ee0bbf388ab38384f92339aa9a1df15e716cfe"
        },
        {
          "sha": "e55c4481e71de79d0ef566a238332bd346cef6de",
          "author": {
            "email": "phil.edworthy@renesas.com",
            "name": "Phil Edworthy"
          },
          "message": "clk: renesas: r9a09g011: Add PFC clock and reset entries\n\nAdd PFC clock/reset entries to CPG driver.\n\nSigned-off-by: Phil Edworthy <phil.edworthy@renesas.com>\nReviewed-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>\nLink: https://lore.kernel.org/r/20220518135208.39885-1-phil.edworthy@renesas.com\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e55c4481e71de79d0ef566a238332bd346cef6de"
        },
        {
          "sha": "efded37b426f4e1b7b004b1e9924ff4bf16ec0fd",
          "author": {
            "email": "phil.edworthy@renesas.com",
            "name": "Phil Edworthy"
          },
          "message": "clk: renesas: r9a09g011: Add WDT clock and reset entries\n\nAdd WDT0 clock and reset entries to CPG driver.\n\nSigned-off-by: Phil Edworthy <phil.edworthy@renesas.com>\nLink: https://lore.kernel.org/r/20220518150105.48167-1-phil.edworthy@renesas.com\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/efded37b426f4e1b7b004b1e9924ff4bf16ec0fd"
        },
        {
          "sha": "f46efcc4746f5c1a539df9db625c04321f75e494",
          "author": {
            "email": "ralph.siemsen@linaro.org",
            "name": "Ralph Siemsen"
          },
          "message": "clk: renesas: r9a06g032: Drop some unused fields\n\nRemove unused fields from struct r9a06g032_clkdesc.\nAs the D_UGATE macro no longer uses _gi, drop it from all declarations.\n\nSigned-off-by: Ralph Siemsen <ralph.siemsen@linaro.org>\nReviewed-by: Phil Edworthy <phil.edworthy@renesas.com>\nLink: https://lore.kernel.org/r/20220518172808.1691450-2-ralph.siemsen@linaro.org\nLink: https://lore.kernel.org/r/20220518172808.1691450-3-ralph.siemsen@linaro.org\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f46efcc4746f5c1a539df9db625c04321f75e494"
        },
        {
          "sha": "2dee50ab9e72a3cae75b65e5934c8dd3e9bf01bc",
          "author": {
            "email": "ralph.siemsen@linaro.org",
            "name": "Ralph Siemsen"
          },
          "message": "clk: renesas: r9a06g032: Fix UART clkgrp bitsel\n\nThere are two UART clock groups, each having a mux to select its\nupstream clock source. The register/bit definitions for accessing these\ntwo muxes appear to have been reversed since introduction. Correct them\nso as to match the hardware manual.\n\nFixes: 4c3d88526eba (\"clk: renesas: Renesas R9A06G032 clock driver\")\n\nSigned-off-by: Ralph Siemsen <ralph.siemsen@linaro.org>\nReviewed-by: Phil Edworthy <phil.edworthy@renesas.com>\nLink: https://lore.kernel.org/r/20220518182527.1693156-1-ralph.siemsen@linaro.org\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2dee50ab9e72a3cae75b65e5934c8dd3e9bf01bc"
        },
        {
          "sha": "e1c51d31befcebe42f4188a14c91503eba42d551",
          "author": {
            "email": "samuel@sholland.org",
            "name": "Samuel Holland"
          },
          "message": "clk: sunxi-ng: Deduplicate ccu_clks arrays\n\nThe ccu_clks arrays are used to link ccu_common objects to a platform\ndevice during probe. There is no requirement that the clk_hw inside the\nccu_common object ever gets registered with the clock framework. So the\ndrivers do not need a separate ccu_clks array for each CCU variant.\nA single array per driver, containing the union of the CCU clocks from\nall variants, is sufficient.\n\nLet's save some space by combining the ccu_clks arrays in each driver.\n\nSigned-off-by: Samuel Holland <samuel@sholland.org>\nAcked-by: Jernej Skrabec <jernej.skrabec@gmail.com>\nReviewed-by: Andre Przywara <andre.przywara@arm.com>\nSigned-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>\nLink: https://lore.kernel.org/r/20220531043539.41549-1-samuel@sholland.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e1c51d31befcebe42f4188a14c91503eba42d551"
        },
        {
          "sha": "02c96ed9e4cd1f47bfcd10296fec6b0b69d6b3c6",
          "author": {
            "email": "biju.das.jz@bp.renesas.com",
            "name": "Biju Das"
          },
          "message": "clk: renesas: rzg2l: Fix reset status function\n\nAs per RZ/G2L HW(Rev.1.10) manual, reset monitor register value 0 means\nreset signal is not applied (deassert state) and 1 means reset signal\nis applied (assert state).\n\nreset_control_status() expects a positive value if the reset line is\nasserted. But rzg2l_cpg_status function returns zero for asserted\nstate.\n\nThis patch fixes the issue by adding double inverted logic, so that\nreset_control_status returns a positive value if the reset line is\nasserted.\n\nFixes: ef3c613ccd68 (\"clk: renesas: Add CPG core wrapper for RZ/G2L SoC\")\nSigned-off-by: Biju Das <biju.das.jz@bp.renesas.com>\nLink: https://lore.kernel.org/r/20220531071657.104121-1-biju.das.jz@bp.renesas.com\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/02c96ed9e4cd1f47bfcd10296fec6b0b69d6b3c6"
        },
        {
          "sha": "baf32519979f22e34db255117449fd91a4ad3c53",
          "author": {
            "email": "fparent@baylibre.com",
            "name": "Fabien Parent"
          },
          "message": "dt-bindings: dma: mediatek,uart-dma: add MT8365 bindings\n\nAdd binding documentation in order to support the MT8365 SoC.\n\nSigned-off-by: Fabien Parent <fparent@baylibre.com>\nAcked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nLink: https://lore.kernel.org/r/20220531135026.238475-6-fparent@baylibre.com\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/baf32519979f22e34db255117449fd91a4ad3c53"
        },
        {
          "sha": "5f89b97e1fd5f5e6f1df78aade50d92ca7809b4b",
          "author": {
            "email": "geert+renesas@glider.be",
            "name": "Geert Uytterhoeven"
          },
          "message": "dmaengine: dmatest: Remove spaces before tabs\n\nScripts/checkpath.pl says \"please, no space before tabs\".\n\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>\nLink: https://lore.kernel.org/r/d863916120d043e3f9dd2f2670238c34f68f7d5f.1654702886.git.geert+renesas@glider.be\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5f89b97e1fd5f5e6f1df78aade50d92ca7809b4b"
        },
        {
          "sha": "e8ecf73adbb41ee00d5fbaf35c3edab252b5d30f",
          "author": {
            "email": "geert+renesas@glider.be",
            "name": "Geert Uytterhoeven"
          },
          "message": "dmaengine: dmatest: Replace symbolic permissions by octal permissions\n\nOctal permissions are easier to read.\n\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>\nLink: https://lore.kernel.org/r/a745b883288f95e999b71fac677bbc2daa13c22d.1654702928.git.geert+renesas@glider.be\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e8ecf73adbb41ee00d5fbaf35c3edab252b5d30f"
        },
        {
          "sha": "23fbc87c8ae6f550a2c919370d44fd29cbb568aa",
          "author": {
            "email": "linus.walleij@linaro.org",
            "name": "Linus Walleij"
          },
          "message": "dt-bindings: dma: Rewrite ST-Ericsson DMA40 to YAML\n\nThis rewrites the ST-Ericsson DMA40 bindings in YAML.\n\nCc: Lee Jones <lee.jones@linaro.org>\nCc: devicetree@vger.kernel.org\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org>\nReviewed-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/20220527215508.622374-1-linus.walleij@linaro.org\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/23fbc87c8ae6f550a2c919370d44fd29cbb568aa"
        },
        {
          "sha": "873971f8fb080d9d65865650fb43d5b9ee9a0d5d",
          "author": {
            "email": "povik+lin@cutebit.org",
            "name": "Martin Povišer"
          },
          "message": "dt-bindings: dma: Add Apple ADMAC\n\nApple's Audio DMA Controller (ADMAC) is used to fetch and store audio\nsamples on SoCs from the \"Apple Silicon\" family.\n\nReviewed-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Martin Povišer <povik+lin@cutebit.org>\nLink: https://lore.kernel.org/r/20220531213615.7822-2-povik+lin@cutebit.org\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/873971f8fb080d9d65865650fb43d5b9ee9a0d5d"
        },
        {
          "sha": "b127315d9a78c011c011b88b92f650510edcfbd2",
          "author": {
            "email": "povik+lin@cutebit.org",
            "name": "Martin Povišer"
          },
          "message": "dmaengine: apple-admac: Add Apple ADMAC driver\n\nAdd driver for Audio DMA Controller present on Apple SoCs from the\n\"Apple Silicon\" family.\n\nSigned-off-by: Martin Povišer <povik+lin@cutebit.org>\nLink: https://lore.kernel.org/r/20220531213615.7822-3-povik+lin@cutebit.org\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b127315d9a78c011c011b88b92f650510edcfbd2"
        },
        {
          "sha": "cb4e34856b77ff52f2b18e0554d364b558f9b258",
          "author": {
            "email": "povik+lin@cutebit.org",
            "name": "Martin Povišer"
          },
          "message": "MAINTAINERS: Add ADMAC driver under ARM/APPLE MACHINE\n\nRegister the driver source and binding schema.\n\nSigned-off-by: Martin Povišer <povik+lin@cutebit.org>\nLink: https://lore.kernel.org/r/20220531213615.7822-4-povik+lin@cutebit.org\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cb4e34856b77ff52f2b18e0554d364b558f9b258"
        },
        {
          "sha": "c33ed61249dc54e7cf2137c04462883560375b77",
          "author": {
            "email": "samuel@sholland.org",
            "name": "Samuel Holland"
          },
          "message": "clk: fixed: Remove Allwinner A10 special-case logic\n\nThis compatible is part of the legacy sunxi clock support, and has not\nbeen used since commit 6b48644b1d29 (\"ARM: gr8: Convert to CCU\") in\nOctober 2016. Since supporting this compatible adds some overhead to\ngeneric clock code, let's clean it up.\n\nSigned-off-by: Samuel Holland <samuel@sholland.org>\nLink: https://lore.kernel.org/r/20220531051742.43273-1-samuel@sholland.org\nSigned-off-by: Stephen Boyd <sboyd@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c33ed61249dc54e7cf2137c04462883560375b77"
        },
        {
          "sha": "b5b3edb5a3621ae84fec0ebf4ccfe8024b0382aa",
          "author": {
            "email": "samuel@sholland.org",
            "name": "Samuel Holland"
          },
          "message": "dt-bindings: clock: fixed-factor: Drop Allwinner A10 compatible\n\nThis compatible is part of the legacy sunxi clock support, and has not\nbeen used since commit 6b48644b1d29 (\"ARM: gr8: Convert to CCU\") in\nOctober 2016. Now that the code for this compatible has been removed,\nlet's drop the compatible.\n\nSigned-off-by: Samuel Holland <samuel@sholland.org>\nLink: https://lore.kernel.org/r/20220531051742.43273-2-samuel@sholland.org\nAcked-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Stephen Boyd <sboyd@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b5b3edb5a3621ae84fec0ebf4ccfe8024b0382aa"
        },
        {
          "sha": "1be3b43a5828839697ee53ab3273ecc71ceeaffe",
          "author": {
            "email": "matthias.bgg@gmail.com",
            "name": "Matthias Brugger"
          },
          "message": "dt-bindings: ARM: Mediatek: Remove msdc binding of MT8192 clock\n\nThe code controlling msdc clock gate was moved inthe the consumer, the MMC\ndriver. This node did never represent a working implementation of any\nperipheral. It was just a lonely clock gate that wasn't used. Delete the\nbinding description of this node.\n\nSigned-off-by: Matthias Brugger <matthias.bgg@gmail.com>\nReviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>\nReviewed-by: Miles Chen <miles.chen@mediatek.com>\nLink: https://lore.kernel.org/r/20220523102339.21927-2-matthias.bgg@kernel.org\nAcked-by: Rob Herring <robh@kernel.org>\nReviewed-by: Chen-Yu Tsai <wenst@chromium.org>\nSigned-off-by: Stephen Boyd <sboyd@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1be3b43a5828839697ee53ab3273ecc71ceeaffe"
        },
        {
          "sha": "1b83ad93ecfd30ca33c6b16414e2f440fe88dfaa",
          "author": {
            "email": "matthias.bgg@gmail.com",
            "name": "Matthias Brugger"
          },
          "message": "clk: mediatek: Delete MT8192 msdc gate\n\nThe msdc gate is part of the MMC driver. Delete the not used code.\n\nSigned-off-by: Matthias Brugger <matthias.bgg@gmail.com>\nReviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>\nReviewed-by: Miles Chen <miles.chen@mediatek.com>\nLink: https://lore.kernel.org/r/20220523102339.21927-3-matthias.bgg@kernel.org\nReviewed-by: Chen-Yu Tsai <wenst@chromium.org>\nSigned-off-by: Stephen Boyd <sboyd@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1b83ad93ecfd30ca33c6b16414e2f440fe88dfaa"
        },
        {
          "sha": "11a72ae911d3d4eccfba8dbf21daca4ce5f1b6af",
          "author": {
            "email": "vkoul@kernel.org",
            "name": "Vinod Koul"
          },
          "message": "dmaengine: apple-admac: Fix print format\n\nWe get a warning (treated as error now)\ndrivers/dma/apple-admac.c: In function 'admac_cyclic_write_one_desc':\ndrivers/dma/apple-admac.c:209:26: error: format '%x' expects argument of type 'unsigned int', but argument 7 has type 'long unsigned int' [-Werror=format=]\n  209 |         dev_dbg(ad->dev, \"ch%d descriptor: addr=0x%pad len=0x%zx flags=0x%x\\n\",\n\nUse %lx for priniting the flag\n\nFixes: b127315d9a78 (\"dmaengine: apple-admac: Add Apple ADMAC driver\")\nReported-by: Stephen Rothwell <sfr@canb.auug.org.au>\nSigned-off-by: Vinod Koul <vkoul@kernel.org>\nLink: https://lore.kernel.org/r/20220610043117.39337-1-vkoul@kernel.org\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Vinod Koul <vkoul@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/11a72ae911d3d4eccfba8dbf21daca4ce5f1b6af"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T01:48:42Z"
  },
  {
    "id": "23272314197",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10642858123,
      "size": 280,
      "distinct_size": 280,
      "ref": "refs/heads/master",
      "head": "5f0848190c6dd0f5b8a2aaf0f1d900a96d96bee0",
      "before": "c040862bfbd9c5f3cb64e1df1c623e20e38fe656",
      "commits": [
        {
          "sha": "7ccced33a0ba39b0103ae1dfbf7f1dffdc0a1bc2",
          "author": {
            "email": "pinglinux@gmail.com",
            "name": "Ping Cheng"
          },
          "message": "HID: wacom: Only report rotation for art pen\n\nThe generic routine, wacom_wac_pen_event, turns rotation value 90\ndegree anti-clockwise before posting the events. This non-zero\nevent trggers a non-zero ABS_Z event for non art pen tools. However,\nHID_DG_TWIST is only supported by art pen.\n\n[jkosina@suse.cz: fix build: add missing brace]\nCc: stable@vger.kernel.org\nSigned-off-by: Ping Cheng <ping.cheng@wacom.com>\nReviewed-by: Jason Gerecke <jason.gerecke@wacom.com>\n--\nHi Jiri,\n\nThis is kind of a version 2 of the last one I posted two days ago.\nI updated the logic so it has less changed lines: 29 vs 158! Hopefully,\nthe logic is easier to follow now. Please ignore the last one.\n\nThank you!\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7ccced33a0ba39b0103ae1dfbf7f1dffdc0a1bc2"
        },
        {
          "sha": "d6b675687a4ab4dba684716d97c8c6f81bf10905",
          "author": {
            "email": "pinglinux@gmail.com",
            "name": "Ping Cheng"
          },
          "message": "HID: wacom: Don't register pad_input for touch switch\n\nTouch switch state is received through WACOM_PAD_FIELD. However, it\nis reported by touch_input. Don't register pad_input if no other pad\nevents require the interface.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Ping Cheng <ping.cheng@wacom.com>\nReviewed-by: Jason Gerecke <jason.gerecke@wacom.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d6b675687a4ab4dba684716d97c8c6f81bf10905"
        },
        {
          "sha": "e51d8d3ea3d773334d2c047c8d1623dba66f592a",
          "author": {
            "email": "mario.limonciello@amd.com",
            "name": "Mario Limonciello"
          },
          "message": "HID: amd_sfh: Don't show client init failed as error when discovery fails\n\nWhen sensor discovery fails, this means that the system doesn't have\nany sensors connected and a user should only be notified at most one time.\nA message is already displayed at WARN level of \"failed to discover,\nsensors not enabled\".  It's pointless to show that the client init failed\nat ERR level for the same condition.\n\nCheck the return code and don't display this message in those conditions.\n\nFixes: b5d7f43e97da (\"HID: amd_sfh: Add support for sensor discovery\")\nReported-by: David Chang <David.Chang@amd.com>\nSigned-off-by: Mario Limonciello <mario.limonciello@amd.com>\nAcked-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e51d8d3ea3d773334d2c047c8d1623dba66f592a"
        },
        {
          "sha": "db681eaf7145158fb49eddbdb548692e8bfe7fab",
          "author": {
            "email": "tzungbi@kernel.org",
            "name": "Tzung-Bi Shih"
          },
          "message": "platform/chrome: cros_ec_proto: add Kunit tests for cros_ec_prepare_tx()\n\ncros_ec_prepare_tx() is used to fill the protocol headers according to\nthe requested protocol version.\n\nAdd Kunit tests cros_ec_prepare_tx() for each version.\n\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nLink: https://lore.kernel.org/r/20220518091814.2028579-2-tzungbi@kernel.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/db681eaf7145158fb49eddbdb548692e8bfe7fab"
        },
        {
          "sha": "23a34e3a9d00829f6bed67004a751d5b48f6084a",
          "author": {
            "email": "tzungbi@kernel.org",
            "name": "Tzung-Bi Shih"
          },
          "message": "platform/chrome: cros_ec_proto: factor legacy out from cros_ec_prepare_tx()\n\ncros_ec_prepare_tx() mixed the code for both versions.  To be neat and to\nmake it clear, factor the legacy part out as a separate function, rename\nthe function, and update the comments.\n\nSpecifically,\n- prepare_tx(), for current protocol version (i.e. 3).\n- prepare_tx_legacy(), for protocol version <= 2.\n\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nLink: https://lore.kernel.org/r/20220518091814.2028579-3-tzungbi@kernel.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/23a34e3a9d00829f6bed67004a751d5b48f6084a"
        },
        {
          "sha": "97b11dd6350a1d5fb076df69ebbf504eb5c4fd57",
          "author": {
            "email": "tzungbi@kernel.org",
            "name": "Tzung-Bi Shih"
          },
          "message": "platform/chrome: cros_ec_proto: update cros_ec_check_result() comment\n\nAt first glance, cros_ec_check_result() is quite like cros_ec_map_error().\nThey check for `ec_msg->result` and return corresponding errors.  However,\nas calling from `pkt_xfer` and `cmd_xfer`, cros_ec_check_result() should\nnot report furthermore errors.  -EAGAIN is the only exception.\n\nSee [1][2][3] for some known userland programs' code.  The return code\nfrom ioctl only denotes the EC communication status.  Userland programs\nwould further analyze the `result` in struct cros_ec_command* for\nfollow-up actions (e.g. [4]).\n\nTo clarify, update the function comment.\n\n[1]: https://crrev.com/54400e93a75ef440a83d6eaac2cec066daf99cf0/util/comm-dev.c#154\n[2]: https://crrev.com/fe32670a89bf59e1aff84bba9dd3295657b85e9b/cros_ec_dev.c#296\n[3]: https://crrev.com/4e19eb1d89de0422ff1bbd3f7260b131c761098c/drivers/google/cros_ec_dev.c#120\n[4]: https://crrev.com/54400e93a75ef440a83d6eaac2cec066daf99cf0/util/comm-dev.c#164\n\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nLink: https://lore.kernel.org/r/20220518091814.2028579-4-tzungbi@kernel.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/97b11dd6350a1d5fb076df69ebbf504eb5c4fd57"
        },
        {
          "sha": "4319cbd4ed99003e0c981728ab1626c25be7af4a",
          "author": {
            "email": "tzungbi@kernel.org",
            "name": "Tzung-Bi Shih"
          },
          "message": "platform/chrome: cros_ec_proto: add Kunit tests for cros_ec_check_result()\n\ncros_ec_check_result() is used to check if the EC communication success but\nEC responded EC_RES_IN_PROGRESS.  It should return 0 even if EC wasn't\nhappy about the host command.\n\nAdd Kunit tests for cros_ec_check_result().\n\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nLink: https://lore.kernel.org/r/20220518091814.2028579-5-tzungbi@kernel.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4319cbd4ed99003e0c981728ab1626c25be7af4a"
        },
        {
          "sha": "8d5976089c97a4beeeda4de59e2fba9862946893",
          "author": {
            "email": "wangxiang@cdjrlc.com",
            "name": "Xiang wangx"
          },
          "message": "platform/chrome: cros_ec_commands: Fix syntax errors in comments\n\nDelete the redundant word 'using'.\n\nSigned-off-by: Xiang wangx <wangxiang@cdjrlc.com>\nReviewed-by: Tzung-Bi Shih <tzungbi@kernel.org>\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nLink: https://lore.kernel.org/r/20220606022313.22912-1-wangxiang@cdjrlc.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8d5976089c97a4beeeda4de59e2fba9862946893"
        },
        {
          "sha": "39d649602be2ceb3f8f8e98483d09e4d71133c6a",
          "author": {
            "email": "clement.leger@bootlin.com",
            "name": "Clément Léger"
          },
          "message": "of: constify of_property_check_flags() prop argument\n\nThis argument is not modified and thus can be set as const.\n\nSigned-off-by: Clément Léger <clement.leger@bootlin.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/20220601081801.348571-2-clement.leger@bootlin.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/39d649602be2ceb3f8f8e98483d09e4d71133c6a"
        },
        {
          "sha": "442feb3174dc7b801fc9703c9c9113bf5e1e3caf",
          "author": {
            "email": "danilokrummrich@dk-develop.de",
            "name": "Danilo Krummrich"
          },
          "message": "dt-bindings: ps2-gpio: convert binding to json-schema\n\nConvert the ps2-gpio dt-binding documentation to DT schema format using\nthe json-schema.\n\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>\nSigned-off-by: Danilo Krummrich <danilokrummrich@dk-develop.de>\nReviewed-by: Linus Walleij <linus.walleij@linaro.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/20220529132638.13420-1-danilokrummrich@dk-develop.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/442feb3174dc7b801fc9703c9c9113bf5e1e3caf"
        },
        {
          "sha": "ef17936654043829ac527a2e0483d944eaba30aa",
          "author": {
            "email": "danilokrummrich@dk-develop.de",
            "name": "Danilo Krummrich"
          },
          "message": "dt-bindings: ps2-gpio: document bus signals open drain\n\nThe PS/2 bus defines data and clock line to be open drain, this should\nbe reflected in the gpio flags set in the binding.\n\nEspecially, this is important since the clock line sometimes is driven\nby the host while being used as interrupt source.\n\nReviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>\nSigned-off-by: Danilo Krummrich <danilokrummrich@dk-develop.de>\nReviewed-by: Linus Walleij <linus.walleij@linaro.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/20220529132638.13420-2-danilokrummrich@dk-develop.de",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ef17936654043829ac527a2e0483d944eaba30aa"
        },
        {
          "sha": "f06e4c9ec81e7884bd93c4126023c6c74168ac7d",
          "author": {
            "email": "geert+renesas@glider.be",
            "name": "Geert Uytterhoeven"
          },
          "message": "dt-bindings: display: bridge: sil,sii9022: Convert to json-schema\n\nConvert the Silicon Image sii902x HDMI bridge Device Tree binding\ndocumentation to json-schema.\n\nAdd missing sil,sii9022-cpi and sil,sii9022-tpi compatible values.\n\nSigned-off-by: Geert Uytterhoeven <geert+renesas@glider.be>\nReviewed-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/2f8e12b4980a82788c1dd413ceedf8d144fdca91.1652967387.git.geert+renesas@glider.be",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f06e4c9ec81e7884bd93c4126023c6c74168ac7d"
        },
        {
          "sha": "cbf9c4b9617b6767886a913705ca14b7600c77db",
          "author": {
            "email": "vaibhav@linux.ibm.com",
            "name": "Vaibhav Jain"
          },
          "message": "of: check previous kernel's ima-kexec-buffer against memory bounds\n\nPresently ima_get_kexec_buffer() doesn't check if the previous kernel's\nima-kexec-buffer lies outside the addressable memory range. This can result\nin a kernel panic if the new kernel is booted with 'mem=X' arg and the\nima-kexec-buffer was allocated beyond that range by the previous kernel.\nThe panic is usually of the form below:\n\n$ sudo kexec --initrd initrd vmlinux --append='mem=16G'\n\n<snip>\n BUG: Unable to handle kernel data access on read at 0xc000c01fff7f0000\n Faulting instruction address: 0xc000000000837974\n Oops: Kernel access of bad area, sig: 11 [#1]\n<snip>\n NIP [c000000000837974] ima_restore_measurement_list+0x94/0x6c0\n LR [c00000000083b55c] ima_load_kexec_buffer+0xac/0x160\n Call Trace:\n [c00000000371fa80] [c00000000083b55c] ima_load_kexec_buffer+0xac/0x160\n [c00000000371fb00] [c0000000020512c4] ima_init+0x80/0x108\n [c00000000371fb70] [c0000000020514dc] init_ima+0x4c/0x120\n [c00000000371fbf0] [c000000000012240] do_one_initcall+0x60/0x2c0\n [c00000000371fcc0] [c000000002004ad0] kernel_init_freeable+0x344/0x3ec\n [c00000000371fda0] [c0000000000128a4] kernel_init+0x34/0x1b0\n [c00000000371fe10] [c00000000000ce64] ret_from_kernel_thread+0x5c/0x64\n Instruction dump:\n f92100b8 f92100c0 90e10090 910100a0 4182050c 282a0017 3bc00000 40810330\n 7c0802a6 fb610198 7c9b2378 f80101d0 <a1240000> 2c090001 40820614 e9240010\n ---[ end trace 0000000000000000 ]---\n\nFix this issue by checking returned PFN range of previous kernel's\nima-kexec-buffer with page_is_ram() to ensure correct memory bounds.\n\nFixes: 467d27824920 (\"powerpc: ima: get the kexec buffer passed by the previous kernel\")\nCc: Frank Rowand <frowand.list@gmail.com>\nCc: Prakhar Srivastava <prsriva@linux.microsoft.com>\nCc: Lakshmi Ramasubramanian <nramas@linux.microsoft.com>\nCc: Thiago Jung Bauermann <bauerman@linux.ibm.com>\nCc: Rob Herring <robh@kernel.org>\nCc: Ritesh Harjani <ritesh.list@gmail.com>\nCc: Robin Murphy <robin.murphy@arm.com>\nSigned-off-by: Vaibhav Jain <vaibhav@linux.ibm.com>\nSigned-off-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/20220531041446.3334259-1-vaibhav@linux.ibm.com",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cbf9c4b9617b6767886a913705ca14b7600c77db"
        },
        {
          "sha": "72ca190052700d56dc130a106ce66651ba155835",
          "author": {
            "email": "krzysztof.kozlowski@linaro.org",
            "name": "Krzysztof Kozlowski"
          },
          "message": "dt-bindings: vendor-prefixes: document several vendors for Aspeed BMC boards\n\nAdd vendor prefixes for manufacturers of Aspeed SoC based BMC boards:\nASrock, ByteDance, Ingrasys, Inventec and Quanta.  Move also bticino to\nproper alphabetical place.\n\nSigned-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>\nSigned-off-by: Rob Herring <robh@kernel.org>\nLink: https://lore.kernel.org/r/20220529104928.79636-1-krzysztof.kozlowski@linaro.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/72ca190052700d56dc130a106ce66651ba155835"
        },
        {
          "sha": "015cd0043503a1691ba28529e21478fe0822f3ff",
          "author": {
            "email": "pmalani@chromium.org",
            "name": "Prashant Malani"
          },
          "message": "regulator: cros-ec: Use common cros_ec_command()\n\nReduce code duplication by using the common cros_ec_command() function\ninstead of the locally defined variant.\n\nCc: Stephen Boyd <swboyd@chromium.org>\nSigned-off-by: Prashant Malani <pmalani@chromium.org>\nReviewed-by: Stephen Boyd <swboyd@chromium.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nAcked-by: Mark Brown <broonie@kernel.org>\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nLink: https://lore.kernel.org/r/20220606201825.763788-2-pmalani@chromium.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/015cd0043503a1691ba28529e21478fe0822f3ff"
        },
        {
          "sha": "b1d288d9c3c5ca28df062214656a59cf7ee370e0",
          "author": {
            "email": "pmalani@chromium.org",
            "name": "Prashant Malani"
          },
          "message": "platform/chrome: cros_ec_proto: Rename cros_ec_command function\n\ncros_ec_command() is the name of a function as well as a struct, as such\nit can confuse indexing tools (like ctags). Avoid this by renaming it to\ncros_ec_cmd(). Update all the callsites to use the new name.\n\nThis patch is a find-and-replace, so should not introduce any functional\nchanges.\n\nSuggested-by: Stephen Boyd <swboyd@chromium.org>\nSigned-off-by: Prashant Malani <pmalani@chromium.org>\nAcked-by: Lee Jones <lee.jones@linaro.org>\nReviewed-by: Stephen Boyd <swboyd@chromium.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nLink: https://lore.kernel.org/r/20220606201825.763788-3-pmalani@chromium.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b1d288d9c3c5ca28df062214656a59cf7ee370e0"
        },
        {
          "sha": "f87e15fbf6d8cdb51f953338d41a4a52ad1aca14",
          "author": {
            "email": "pmalani@chromium.org",
            "name": "Prashant Malani"
          },
          "message": "platform/chrome: cros_ec_proto: Update size arg types\n\ncros_ec_cmd() takes 2 size arguments. Update them to be of the more\nappropriate type size_t.\n\nSuggested-by: Stephen Boyd <swboyd@chromium.org>\nSigned-off-by: Prashant Malani <pmalani@chromium.org>\nReviewed-by: Stephen Boyd <swboyd@chromium.org>\nReviewed-by: Guenter Roeck <groeck@chromium.org>\nSigned-off-by: Tzung-Bi Shih <tzungbi@kernel.org>\nLink: https://lore.kernel.org/r/20220606201825.763788-4-pmalani@chromium.org",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f87e15fbf6d8cdb51f953338d41a4a52ad1aca14"
        },
        {
          "sha": "ded3021ef20567affdf0a08b21e9300f72cfc7c4",
          "author": {
            "email": "dianders@chromium.org",
            "name": "Douglas Anderson"
          },
          "message": "dt-bindings: HID: i2c-hid: elan: Introduce bindings for Elan eKTH6915\n\nLike many i2c-hid touchscreen controllers, the Elan eKTH6915\ncontroller has a reset gpio. For the Goodix GT7375P touchscreen the\ndecision was to add a new binding rather than trying to add a new GPIO\nto the existing i2c-hid binding. We'll follow the lead and do it here,\ntoo.\n\nSIDE NOTE: the Elan eKTH6915 is a touchscreen _controller_ that's\nincluded as a part on some touchscreens. The reset line isn't truly\nnecessary for the functioning of the touchscreen, so it's possible\nthat some designs won't have it hooked up and will just guarantee the\npower sequencing requirements with RLC circuits. Thus, we'll mark the\nreset gpio as optional.\n\nNote that if the reset GPIO isn't used there's actually no true need\nto use the \"elan,ekth6915\" compatible instead of the \"hid-over-i2c\" on\nLinux. However:\n- Officially using just \"hid-over-i2c\" for this device violates the\n  existing \"hid-over-i2c\" bindings. The bindings say that you're not\n  supposed to use \"post-power-on-delay-ms\" without specifying a more\n  specific compatible. Currently the Linux driver doesn't enforce\n  this, but it violates the bindings to just use\n  \"hid-over-i2c\". ...and if you're going to add a more specific\n  compatible anyway, might as well do it right.\n- Using this compatible means we don't need to specify\n  \"hid-descr-addr\" since it's inferred from the compatible.\n- Using this compatible means that the regulator names match the names\n  on the Elan datasheet (vcc33 / vccio) vs the generic hid-over-i2c\n  (vdd / vddl).\n\nSigned-off-by: Douglas Anderson <dianders@chromium.org>\nReviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>\nReviewed-by: Rob Herring <robh@kernel.org>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ded3021ef20567affdf0a08b21e9300f72cfc7c4"
        },
        {
          "sha": "bd3cba00dcc639311c29eee81606707ba5fd9217",
          "author": {
            "email": "dianders@chromium.org",
            "name": "Douglas Anderson"
          },
          "message": "HID: i2c-hid: elan: Add support for Elan eKTH6915 i2c-hid touchscreens\n\nLike many i2c-hid touchscreen controllers, the Elan eKTH6915 has a\nreset GPIO hooked up to it. According to the datasheet, the way we're\nsupposed to turn the touchscreen on is:\n\n1. Turn on the 3.3V supply.\n2. Turn on the IO supply. It's OK if this is hardwired to the 3.3V\n   supply, but if it's not then it must be turned on _after_ the 3.3V\n   supply.\n3. Wait >= 1 ms.\n4. Deassert the reset GPIO (reset GPIO is active low, so there would\n   be a leakage path if this was deasserted _before_ the IO supply).\n5. Wait 300 ms.\n\nMuch of the above can be handled by the generic i2c-hid-of driver, but\nthe \"reset\" GPIO is not supported by that driver. Thus we'll do the\nsame as we did for Goodix and add a new tiny driver that uses the\ni2c-hid core.\n\nNOTE: support for this new touchscreen could theorically fit into the\nGoodix driver. I've made it a separate driver because the Elan driver\nsupports _two_ regulators and it's unclear exactly how that would fit\nin with commit 18eeef46d359 (\"HID: i2c-hid: goodix: Tie the reset line\nto true state of the regulator\").\n\nSigned-off-by: Douglas Anderson <dianders@chromium.org>\nReviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>\nReviewed-by: Matthias Kaehlcke <mka@chromium.org>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bd3cba00dcc639311c29eee81606707ba5fd9217"
        },
        {
          "sha": "92cdfba40155aab313d307eecbaef331b447fe54",
          "author": {
            "email": "djogorchock@gmail.com",
            "name": "Daniel J. Ogorchock"
          },
          "message": "HID: nintendo: fix unused const warning\n\nJC_RUMBLE_ZERO_AMP_PKT_CNT is only used when force feedback support in\nthe driver is enabled. Place the declaration in the CONFIG_NINTENDO_FF\nifdef to avoid a warning when compiling without rumble support.\n\nSigned-off-by: Daniel J. Ogorchock <djogorchock@gmail.com>\nReviewed-by: Silvan Jegen <s.jegen@gmail.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/92cdfba40155aab313d307eecbaef331b447fe54"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-05T01:27:00Z"
  },
  {
    "id": "23270781055",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10642050844,
      "size": 661,
      "distinct_size": 661,
      "ref": "refs/heads/master",
      "head": "c040862bfbd9c5f3cb64e1df1c623e20e38fe656",
      "before": "c1c76700a0d6e6090ccfe1209527f14c21b6681b",
      "commits": [
        {
          "sha": "8e39efd840b8d4eae5ab398b43e20ffaff0010cc",
          "author": {
            "email": "dmatlack@google.com",
            "name": "David Matlack"
          },
          "message": "KVM: VMX: Print VM-instruction error when it may be helpful\n\nInclude the value of the \"VM-instruction error\" field from the current\nVMCS (if any) in the error message for VMCLEAR and VMPTRLD, since each\nof these instructions may result in more than one VM-instruction\nerror. Previously, this field was only reported for VMWRITE errors.\n\nSigned-off-by: David Matlack <dmatlack@google.com>\n[Rebased and refactored code; dropped the error number for INVVPID and\nINVEPT; reworded commit message.]\nSigned-off-by: Jim Mattson <jmattson@google.com>\nMessage-Id: <20220510224035.1792952-1-jmattson@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8e39efd840b8d4eae5ab398b43e20ffaff0010cc"
        },
        {
          "sha": "cc07e60b0811eeeca769fb342aa6e13da5977657",
          "author": {
            "email": "jmattson@google.com",
            "name": "Jim Mattson"
          },
          "message": "KVM: VMX: Print VM-instruction error as unsigned\n\nChange the printf format character from 'd' to 'u' for the\nVM-instruction error in vmwrite_error().\n\nFixes: 6aa8b732ca01 (\"[PATCH] kvm: userspace interface\")\nReported-by: Sean Christopherson <seanjc@google.com>\nSigned-off-by: Jim Mattson <jmattson@google.com>\nMessage-Id: <20220510224035.1792952-2-jmattson@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cc07e60b0811eeeca769fb342aa6e13da5977657"
        },
        {
          "sha": "0471a7bd1bca2a47a5f378f2222c5cf39ce94152",
          "author": {
            "email": "lkujaw@member.fsf.org",
            "name": "Lev Kujawski"
          },
          "message": "KVM: set_msr_mce: Permit guests to ignore single-bit ECC errors\n\nCertain guest operating systems (e.g., UNIXWARE) clear bit 0 of\nMC1_CTL to ignore single-bit ECC data errors.  Single-bit ECC data\nerrors are always correctable and thus are safe to ignore because they\nare informational in nature rather than signaling a loss of data\nintegrity.\n\nPrior to this patch, these guests would crash upon writing MC1_CTL,\nwith resultant error messages like the following:\n\nerror: kvm run failed Operation not permitted\nEAX=fffffffe EBX=fffffffe ECX=00000404 EDX=ffffffff\nESI=ffffffff EDI=00000001 EBP=fffdaba4 ESP=fffdab20\nEIP=c01333a5 EFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0\nES =0108 00000000 ffffffff 00c09300 DPL=0 DS   [-WA]\nCS =0100 00000000 ffffffff 00c09b00 DPL=0 CS32 [-RA]\nSS =0108 00000000 ffffffff 00c09300 DPL=0 DS   [-WA]\nDS =0108 00000000 ffffffff 00c09300 DPL=0 DS   [-WA]\nFS =0000 00000000 ffffffff 00c00000\nGS =0000 00000000 ffffffff 00c00000\nLDT=0118 c1026390 00000047 00008200 DPL=0 LDT\nTR =0110 ffff5af0 00000067 00008b00 DPL=0 TSS32-busy\nGDT=     ffff5020 000002cf\nIDT=     ffff52f0 000007ff\nCR0=8001003b CR2=00000000 CR3=0100a000 CR4=00000230\nDR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000\nDR6=ffff0ff0 DR7=00000400\nEFER=0000000000000000\nCode=08 89 01 89 51 04 c3 8b 4c 24 08 8b 01 8b 51 04 8b 4c 24 04 <0f>\n30 c3 f7 05 a4 6d ff ff 10 00 00 00 74 03 0f 31 c3 33 c0 33 d2 c3 8d\n74 26 00 0f 31 c3\n\nSigned-off-by: Lev Kujawski <lkujaw@member.fsf.org>\nMessage-Id: <20220521081511.187388-1-lkujaw@member.fsf.org>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0471a7bd1bca2a47a5f378f2222c5cf39ce94152"
        },
        {
          "sha": "345b0fd6fe5f66dfe841bad0b39dd11a5672df68",
          "author": {
            "email": "seanjc@google.com",
            "name": "Sean Christopherson"
          },
          "message": "KVM: Drop unused @gpa param from gfn=>pfn cache's __release_gpc() helper\n\nDrop the @pga param from __release_gpc() and rename the helper to make it\nmore obvious that the cache itself is not being released.  The helper\nwill be reused by a future commit to release a pfn+khva combination that\nis _never_ associated with the cache, at which point the current name\nwould go from slightly misleading to blatantly wrong.\n\nNo functional change intended.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220429210025.3293691-4-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/345b0fd6fe5f66dfe841bad0b39dd11a5672df68"
        },
        {
          "sha": "3dddf65b4f4c451c345d34ae85bdf1791a746e49",
          "author": {
            "email": "seanjc@google.com",
            "name": "Sean Christopherson"
          },
          "message": "KVM: Put the extra pfn reference when reusing a pfn in the gpc cache\n\nPut the struct page reference to pfn acquired by hva_to_pfn() when the\nold and new pfns for a gfn=>pfn cache match.  The cache already has a\nreference via the old/current pfn, and will only put one reference when\nthe cache is done with the pfn.\n\nFixes: 982ed0de4753 (\"KVM: Reinstate gfn_to_pfn_cache with invalidation support\")\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220429210025.3293691-5-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3dddf65b4f4c451c345d34ae85bdf1791a746e49"
        },
        {
          "sha": "3ba2c95ea180740b16281fa43a3ee5f47279c0ed",
          "author": {
            "email": "seanjc@google.com",
            "name": "Sean Christopherson"
          },
          "message": "KVM: Do not incorporate page offset into gfn=>pfn cache user address\n\nDon't adjust the userspace address in the gfn=>pfn cache by the page\noffset from the gpa.  KVM should never use the user address directly, and\nall KVM operations that translate a user address to something else\nrequire the user address to be page aligned.  Ignoring the offset will\nallow the cache to reuse a gfn=>hva translation in the unlikely event\nthat the page offset of the gpa changes, but the gfn does not.  And more\nimportantly, not having to (un)adjust the user address will simplify a\nfuture bug fix.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220429210025.3293691-6-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3ba2c95ea180740b16281fa43a3ee5f47279c0ed"
        },
        {
          "sha": "93984f19e7bce4c18084a6ef3dacafb155b806ed",
          "author": {
            "email": "seanjc@google.com",
            "name": "Sean Christopherson"
          },
          "message": "KVM: Fully serialize gfn=>pfn cache refresh via mutex\n\nProtect gfn=>pfn cache refresh with a mutex to fully serialize refreshes.\nThe refresh logic doesn't protect against\n\n- concurrent unmaps, or refreshes with different GPAs (which may or may not\n  happen in practice, for example if a cache is only used under vcpu->mutex;\n  but it's allowed in the code)\n\n- a false negative on the memslot generation.  If the first refresh sees\n  a stale memslot generation, it will refresh the hva and generation before\n  moving on to the hva=>pfn translation.  If it then drops gpc->lock, a\n  different user of the cache can come along, acquire gpc->lock, see that\n  the memslot generation is fresh, and skip the hva=>pfn update due to the\n  userspace address also matching (because it too was updated).\n\nThe refresh path can already sleep during hva=>pfn resolution, so wrap\nthe refresh with a mutex to ensure that any given refresh runs to\ncompletion before other callers can start their refresh.\n\nCc: stable@vger.kernel.org\nCc: Lai Jiangshan <jiangshanlai@gmail.com>\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220429210025.3293691-7-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/93984f19e7bce4c18084a6ef3dacafb155b806ed"
        },
        {
          "sha": "58cd407ca4c6278cf9f9d09a2e663bf645b0c982",
          "author": {
            "email": "seanjc@google.com",
            "name": "Sean Christopherson"
          },
          "message": "KVM: Fix multiple races in gfn=>pfn cache refresh\n\nRework the gfn=>pfn cache (gpc) refresh logic to address multiple races\nbetween the cache itself, and between the cache and mmu_notifier events.\n\nThe existing refresh code attempts to guard against races with the\nmmu_notifier by speculatively marking the cache valid, and then marking\nit invalid if a mmu_notifier invalidation occurs.  That handles the case\nwhere an invalidation occurs between dropping and re-acquiring gpc->lock,\nbut it doesn't handle the scenario where the cache is refreshed after the\ncache was invalidated by the notifier, but before the notifier elevates\nmmu_notifier_count.  The gpc refresh can't use the \"retry\" helper as its\ninvalidation occurs _before_ mmu_notifier_count is elevated and before\nmmu_notifier_range_start is set/updated.\n\n  CPU0                                    CPU1\n  ----                                    ----\n\n  gfn_to_pfn_cache_invalidate_start()\n  |\n  -> gpc->valid = false;\n                                          kvm_gfn_to_pfn_cache_refresh()\n                                          |\n                                          |-> gpc->valid = true;\n\n                                          hva_to_pfn_retry()\n                                          |\n                                          -> acquire kvm->mmu_lock\n                                             kvm->mmu_notifier_count == 0\n                                             mmu_seq == kvm->mmu_notifier_seq\n                                             drop kvm->mmu_lock\n                                             return pfn 'X'\n  acquire kvm->mmu_lock\n  kvm_inc_notifier_count()\n  drop kvm->mmu_lock()\n  kernel frees pfn 'X'\n                                          kvm_gfn_to_pfn_cache_check()\n                                          |\n                                          |-> gpc->valid == true\n\n                                          caller accesses freed pfn 'X'\n\nKey off of mn_active_invalidate_count to detect that a pfncache refresh\nneeds to wait for an in-progress mmu_notifier invalidation.  While\nmn_active_invalidate_count is not guaranteed to be stable, it is\nguaranteed to be elevated prior to an invalidation acquiring gpc->lock,\nso either the refresh will see an active invalidation and wait, or the\ninvalidation will run after the refresh completes.\n\nSpeculatively marking the cache valid is itself flawed, as a concurrent\nkvm_gfn_to_pfn_cache_check() would see a valid cache with stale pfn/khva\nvalues.  The KVM Xen use case explicitly allows/wants multiple users;\neven though the caches are allocated per vCPU, __kvm_xen_has_interrupt()\ncan read a different vCPU (or vCPUs).  Address this race by invalidating\nthe cache prior to dropping gpc->lock (this is made possible by fixing\nthe above mmu_notifier race).\n\nComplicating all of this is the fact that both the hva=>pfn resolution\nand mapping of the kernel address can sleep, i.e. must be done outside\nof gpc->lock.\n\nFix the above races in one fell swoop, trying to fix each individual race\nis largely pointless and essentially impossible to test, e.g. closing one\nhole just shifts the focus to the other hole.\n\nFixes: 982ed0de4753 (\"KVM: Reinstate gfn_to_pfn_cache with invalidation support\")\nCc: stable@vger.kernel.org\nCc: David Woodhouse <dwmw@amazon.co.uk>\nCc: Mingwei Zhang <mizhang@google.com>\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220429210025.3293691-8-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/58cd407ca4c6278cf9f9d09a2e663bf645b0c982"
        },
        {
          "sha": "85165781c5d900d97052be1d2723f6929d56768d",
          "author": {
            "email": "seanjc@google.com",
            "name": "Sean Christopherson"
          },
          "message": "KVM: Do not pin pages tracked by gfn=>pfn caches\n\nPut the reference to any struct page mapped/tracked by a gfn=>pfn cache\nupon inserting the pfn into its associated cache, as opposed to putting\nthe reference only when the cache is done using the pfn.  In other words,\ndon't pin pages while they're in the cache.  One of the major roles of\nthe gfn=>pfn cache is to play nicely with invalidation events, i.e. it\nexists in large part so that KVM doesn't rely on pinning pages.\n\nSigned-off-by: Sean Christopherson <seanjc@google.com>\nMessage-Id: <20220429210025.3293691-9-seanjc@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/85165781c5d900d97052be1d2723f6929d56768d"
        },
        {
          "sha": "ac640db3a0260541058e95e4acd249cc166cb0eb",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "s390/uv: Add SE hdr query information\n\nWe have information about the supported se header version and pcf bits\nso let's expose it via the sysfs files.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Steffen Eiden <seiden@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-2-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-2-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ac640db3a0260541058e95e4acd249cc166cb0eb"
        },
        {
          "sha": "38c218259d4c4a8c232c2b16a5598568b814d2df",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "s390/uv: Add dump fields to query\n\nThe new dump feature requires us to know how much memory is needed for\nthe \"dump storage state\" and \"dump finalize\" ultravisor call. These\nvalues are reported via the UV query call.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Steffen Eiden <seiden@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-3-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-3-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/38c218259d4c4a8c232c2b16a5598568b814d2df"
        },
        {
          "sha": "35d02493dba1ae6386fac07072908717affc3ff8",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "KVM: s390: pv: Add query interface\n\nSome of the query information is already available via sysfs but\nhaving a IOCTL makes the information easier to retrieve.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Steffen Eiden <seiden@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-4-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-4-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/35d02493dba1ae6386fac07072908717affc3ff8"
        },
        {
          "sha": "06eb3388e703d95de0dfeea657b2640fdda720db",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "KVM: s390: pv: Add dump support definitions\n\nLet's add the constants and structure definitions needed for the dump\nsupport.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Steffen Eiden <seiden@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-5-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-5-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/06eb3388e703d95de0dfeea657b2640fdda720db"
        },
        {
          "sha": "fe9a93e07ba4f29def2f8a4318b63e0c70a5c6c2",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "KVM: s390: pv: Add query dump information\n\nThe dump API requires userspace to provide buffers into which we will\nstore data. The dump information added in this patch tells userspace\nhow big those buffers need to be.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nReviewed-by: Steffen Eiden <seiden@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-6-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-6-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fe9a93e07ba4f29def2f8a4318b63e0c70a5c6c2"
        },
        {
          "sha": "0460eb35b443f73f8a8e3be1ea87bd690a852e20",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "KVM: s390: Add configuration dump functionality\n\nSometimes dumping inside of a VM fails, is unavailable or doesn't\nyield the required data. For these occasions we dump the VM from the\noutside, writing memory and cpu data to a file.\n\nUp to now PV guests only supported dumping from the inside of the\nguest through dumpers like KDUMP. A PV guest can be dumped from the\nhypervisor but the data will be stale and / or encrypted.\n\nTo get the actual state of the PV VM we need the help of the\nUltravisor who safeguards the VM state. New UV calls have been added\nto initialize the dump, dump storage state data, dump cpu data and\ncomplete the dump process. We expose these calls in this patch via a\nnew UV ioctl command.\n\nThe sensitive parts of the dump data are encrypted, the dump key is\nderived from the Customer Communication Key (CCK). This ensures that\nonly the owner of the VM who has the CCK can decrypt the dump data.\n\nThe memory is dumped / read via a normal export call and a re-import\nafter the dump initialization is not needed (no re-encryption with a\ndump key).\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-7-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-7-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0460eb35b443f73f8a8e3be1ea87bd690a852e20"
        },
        {
          "sha": "8aba09588d2af37c6cc1a781b87d1d91ebf389ae",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "KVM: s390: Add CPU dump functionality\n\nThe previous patch introduced the per-VM dump functions now let's\nfocus on dumping the VCPU state via the newly introduced\nKVM_S390_PV_CPU_COMMAND ioctl which mirrors the VM UV ioctl and can be\nextended with new commands later.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-8-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-8-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8aba09588d2af37c6cc1a781b87d1d91ebf389ae"
        },
        {
          "sha": "e9bf3acb23f0a6e18438c35944d6cb618d16cf05",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "KVM: s390: Add KVM_CAP_S390_PROTECTED_DUMP\n\nThe capability indicates dump support for protected VMs.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nReviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-9-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-9-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e9bf3acb23f0a6e18438c35944d6cb618d16cf05"
        },
        {
          "sha": "660a28653d839b70949087d2662e140cc511b363",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "Documentation: virt: Protected virtual machine dumps\n\nLet's add a documentation file which describes the dump process. Since\nwe only copy the UV dump data from the UV to userspace we'll not go\ninto detail here and let the party which processes the data describe\nits structure.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nAcked-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-10-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-10-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/660a28653d839b70949087d2662e140cc511b363"
        },
        {
          "sha": "437cfd714db9c1d28878a6e2555e9a730f3490c8",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "Documentation/virt/kvm/api.rst: Add protvirt dump/info api descriptions\n\nTime to add the dump API changes to the api documentation file.\nAlso some minor cleanup.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nAcked-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-11-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-11-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/437cfd714db9c1d28878a6e2555e9a730f3490c8"
        },
        {
          "sha": "b0f46280d3fcd59a65cfae9742fa5172362af893",
          "author": {
            "email": "frankja@linux.ibm.com",
            "name": "Janosch Frank"
          },
          "message": "Documentation/virt/kvm/api.rst: Explain rc/rrc delivery\n\nLet's explain in which situations the rc/rrc will set in struct\nkvm_pv_cmd so it's clear that the struct members should be set to\n0. rc/rrc are independent of the IOCTL return code.\n\nSigned-off-by: Janosch Frank <frankja@linux.ibm.com>\nAcked-by: Claudio Imbrenda <imbrenda@linux.ibm.com>\nLink: https://lore.kernel.org/r/20220517163629.3443-12-frankja@linux.ibm.com\nMessage-Id: <20220517163629.3443-12-frankja@linux.ibm.com>\nSigned-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b0f46280d3fcd59a65cfae9742fa5172362af893"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-04T22:46:19Z"
  },
  {
    "id": "23268013197",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10640670416,
      "size": 1000,
      "distinct_size": 1143,
      "ref": "refs/heads/master",
      "head": "c1c76700a0d6e6090ccfe1209527f14c21b6681b",
      "before": "b44f2fd87919b5ae6e1756d4c7ba2cbba22238e1",
      "commits": [
        {
          "sha": "a725d0f6dfc5d3739d6499f30ec865305ba3544d",
          "author": {
            "email": "m.grzeschik@pengutronix.de",
            "name": "Michael Grzeschik"
          },
          "message": "usb: gadget: uvc: call uvc uvcg_warn on completed status instead of uvcg_info\n\nLikewise to the uvcvideo hostside driver, this patch is changing the\nusb_request message of an non zero completion handler call from dev_info\nto dev_warn.\n\nReviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nSigned-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>\nLink: https://lore.kernel.org/r/20220529223848.105914-4-m.grzeschik@pengutronix.de\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a725d0f6dfc5d3739d6499f30ec865305ba3544d"
        },
        {
          "sha": "757bdf1f2fb5f1281cb13da5f24860ae81c6140e",
          "author": {
            "email": "saurav.girepunje@gmail.com",
            "name": "Saurav Girepunje"
          },
          "message": "usb: musb: remove schedule work called after flush\n\nIn musb_remove() cancel_delayed_work_sync(&musb->irq_work)\nis called which flush the irq_work work queue.\n\nAfter cancel delayed work, musb_remove() call\nmusb_gadget_cleanup->usb_del_gadget_udc->usb_del_gadget\n->usb_gadget_remove_driver->usb_gadget_udc_stop->udc\n->gadget->ops->udc_stop(udc->gadget);\n\nWhere musb_gadget_stop() call \"schedule_delayed_work(&musb->irq_work, 0)”\nwhich is already cancel/flush.\n\nSo remove the schedule_delayed_work(&musb->irq_work, 0);\nfrom musb_gadget_stop function.\n\nSigned-off-by: Saurav Girepunje <saurav.girepunje@gmail.com>\nLink: https://lore.kernel.org/r/YqDnxkWZV2KfZh5q@Sauravs-MacBook-Air.local\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/757bdf1f2fb5f1281cb13da5f24860ae81c6140e"
        },
        {
          "sha": "5e1fa6dd4caa7ce26029427647bc2f424784a559",
          "author": {
            "email": "chunfeng.yun@mediatek.com",
            "name": "Chunfeng Yun"
          },
          "message": "usb: mtu3: sync interrupt before unbind the udc\n\nRegister gadget irq to avoid the interrupt handler is occurred\nor scheduled during the unbind flow, may happen when do android\nfunction switch stress test.\n\nSigned-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>\nLink: https://lore.kernel.org/r/20220609074233.15532-1-chunfeng.yun@mediatek.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5e1fa6dd4caa7ce26029427647bc2f424784a559"
        },
        {
          "sha": "54c4862f29725a0a20b09a10f2fa788a973713ee",
          "author": {
            "email": "chunfeng.yun@mediatek.com",
            "name": "Chunfeng Yun"
          },
          "message": "usb: mtu3: implement udc_async_callbacks of gadget operation\n\nImplement udc_async_callbacks hook function to avoid a race when unnbinding\ngadget drivers, refer to:\n7dc0c55e9f30 ('USB: UDC core: Add udc_async_callbacks gadget op')\n\nSigned-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>\nLink: https://lore.kernel.org/r/20220609074233.15532-2-chunfeng.yun@mediatek.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/54c4862f29725a0a20b09a10f2fa788a973713ee"
        },
        {
          "sha": "13118959cb1a67eb80bf06152e35e0df733615e2",
          "author": {
            "email": "chunfeng.yun@mediatek.com",
            "name": "Chunfeng Yun"
          },
          "message": "usb: mtu3: register mtu3_irq by threaded irq\n\nUse threaded irq to improve time consuming top-half\n\nSigned-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>\nLink: https://lore.kernel.org/r/20220609074233.15532-3-chunfeng.yun@mediatek.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/13118959cb1a67eb80bf06152e35e0df733615e2"
        },
        {
          "sha": "5767f40053ebf599e47d688e65b259d0b6f3227a",
          "author": {
            "email": "Sanket.Goswami@amd.com",
            "name": "Sanket Goswami"
          },
          "message": "ucsi_ccg: Do not hardcode interrupt polarity and type\n\nThe current implementation supports only Level trigger with ACTIVE HIGH,\nwhich is overriding level and polarity set by the ACPI table, hence\nimplement the common utility function to manage irq requests.\n\nSuggested-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>\nSigned-off-by: Sanket Goswami <Sanket.Goswami@amd.com>\nLink: https://lore.kernel.org/r/20220526063305.3144352-2-Sanket.Goswami@amd.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5767f40053ebf599e47d688e65b259d0b6f3227a"
        },
        {
          "sha": "5fd6c4f0a649c956b2c50c18e0da765b7f5e3eff",
          "author": {
            "email": "Sanket.Goswami@amd.com",
            "name": "Sanket Goswami"
          },
          "message": "ucsi_ccg: ACPI based I2c client enumeration for AMD ASICs\n\nSome of the AMD platforms have Cypress CCGX PD controller connected\nto system I2C i.e designware I2C controller. Added support to enumerate\nthe CCGX client by adding ACPI ID to the firmware.\n\nSuggested-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>\nSigned-off-by: Sanket Goswami <Sanket.Goswami@amd.com>\nLink: https://lore.kernel.org/r/20220526063305.3144352-3-Sanket.Goswami@amd.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5fd6c4f0a649c956b2c50c18e0da765b7f5e3eff"
        },
        {
          "sha": "d2b47721a10037c17b378decc611341bfff60c44",
          "author": {
            "email": "johan@kernel.org",
            "name": "Johan Hovold"
          },
          "message": "staging: greybus: audio: replace safe list iteration\n\nNo entry is being removed from the list when iterating the widget list\nin gbaudio_dapm_free_controls() so there's no need to use\nlist_for_each_entry_safe().\n\nSigned-off-by: Johan Hovold <johan@kernel.org>\nLink: https://lore.kernel.org/r/20220610075347.18917-1-johan@kernel.org\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d2b47721a10037c17b378decc611341bfff60c44"
        },
        {
          "sha": "4bbdc208a5ff3ba970fecd4fdb36a9ce6ca06895",
          "author": {
            "email": "penguin-kernel@I-love.SAKURA.ne.jp",
            "name": "Tetsuo Handa"
          },
          "message": "staging: olpc_dcon: Replace flush_scheduled_work() with flush_work().\n\nSince \"struct dcon_priv\" is per a device struct, I assume that\ndcon_set_source_sync() needs to wait for only one work associated with\nthat device. Therefore, wait for only that work using flush_work().\n\nSigned-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nLink: https://lore.kernel.org/r/a973969d-cfd0-adc8-2651-d299199dbd7b@I-love.SAKURA.ne.jp\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4bbdc208a5ff3ba970fecd4fdb36a9ce6ca06895"
        },
        {
          "sha": "20646f5b1e798bcc20044ae90ac3702f177bf254",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "netfilter: xtables: Bring SPDX identifier back\n\nCommit e2be04c7f995 (\"License cleanup: add SPDX license identifier to\nuapi header files with a license\") added the correct SPDX identifier to\ninclude/uapi/linux/netfilter/xt_IDLETIMER.h.\n\nA subsequent commit removed it for no reason and reintroduced the UAPI\nlicense incorrectness as the file is now missing the UAPI exception\nagain.\n\nAdd it back and remove the GPLv2 boilerplate while at it.\n\nFixes: 68983a354a65 (\"netfilter: xtables: Add snapshot of hardidletimer target\")\nCc: Manoj Basapathi <manojbm@codeaurora.org>\nCc: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>\nCc: Pablo Neira Ayuso <pablo@netfilter.org>\nCc: netfilter-devel@vger.kernel.org\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/20646f5b1e798bcc20044ae90ac3702f177bf254"
        },
        {
          "sha": "a6546f89eac9bfad4b50a7f8ccfbefe0ae01e7df",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_8.RULE\n\nBased on the normalized pattern:\n\n    this program is free software you can redistribute it and/or modify it\n    under the terms of the gnu general public license version 2 as\n    published by the free software foundation\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a6546f89eac9bfad4b50a7f8ccfbefe0ae01e7df"
        },
        {
          "sha": "52e6676ef56f4803b1ef14ed427c5824050163a3",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_30.RULE (part 1)\n\nBased on the normalized pattern:\n\n    this program is free software you can redistribute it and/or modify it\n    under the terms of the gnu general public license as published by the\n    free software foundation version 2  this program is distributed as is\n    without any warranty of any kind whether express or implied without\n    even the implied warranty of merchantability or fitness for a\n    particular purpose see the gnu general public license for more details\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/52e6676ef56f4803b1ef14ed427c5824050163a3"
        },
        {
          "sha": "2aec85b26f39fa9e036c5872950c0ef9b479a1ec",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_30.RULE (part 2)\n\nBased on the normalized pattern:\n\n    this program is free software you can redistribute it and/or modify it\n    under the terms of the gnu general public license as published by the\n    free software foundation version 2  this program is distributed as is\n    without any warranty of any kind whether express or implied without\n    even the implied warranty of merchantability or fitness for a\n    particular purpose see the gnu general public license for more details\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2aec85b26f39fa9e036c5872950c0ef9b479a1ec"
        },
        {
          "sha": "0fdebc5ec2ca492d69df2d93a6a7abade4941aae",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_56.RULE (part 1)\n\nBased on the normalized pattern:\n\n    this file is licensed under the terms of the gnu general public\n    license version 2 this program is licensed as is without any warranty\n    of any kind whether express or implied\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0fdebc5ec2ca492d69df2d93a6a7abade4941aae"
        },
        {
          "sha": "3bb165608ec6a6f775dcd0a6ef5f0b4493e74d73",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_56.RULE (part 2)\n\nBased on the normalized pattern:\n\n    this file is licensed under the terms of the gnu general public\n    license version 2 this program is licensed as is without any warranty\n    of any kind whether express or implied\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3bb165608ec6a6f775dcd0a6ef5f0b4493e74d73"
        },
        {
          "sha": "94c0ded75c85201bfb8fce95dab44cc53addfcb5",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_133.RULE\n\nBased on the normalized pattern:\n\n    this program is free software you can redistribute it and/or modify it\n    under the terms of the gnu general public license version 2 as\n    published by the free software foundation  this program is distributed\n    in the hope that it will be useful merchantability or fitness for a\n    particular purpose see the gnu general public license for more details\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/94c0ded75c85201bfb8fce95dab44cc53addfcb5"
        },
        {
          "sha": "b7bc1c9e5b04da3d2e578fe91d666c9060e77c63",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_147.RULE\n\nBased on the normalized pattern:\n\n    licensed under gplv2\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b7bc1c9e5b04da3d2e578fe91d666c9060e77c63"
        },
        {
          "sha": "1accad5e74635d7f9d994e692649fbe736afe150",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_149.RULE\n\nBased on the normalized pattern:\n\n    netapp provides this source code under the gpl v2 license the gpl v2\n    license is available at https://opensource org/licenses/gpl-license\n    php  this software is provided by the copyright holders and\n    contributors as is and any express or implied warranties including but\n    not limited to the implied warranties of merchantability and fitness\n    for a particular purpose are disclaimed in no event shall the\n    copyright owner or contributors be liable for any direct indirect\n    incidental special exemplary or consequential damages (including but\n    not limited to procurement of substitute goods or services loss of use\n    data or profits or business interruption) however caused and on any\n    theory of liability whether in contract strict liability or tort\n    (including negligence or otherwise) arising in any way out of the use\n    of this software even if advised of the possibility of such damage\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1accad5e74635d7f9d994e692649fbe736afe150"
        },
        {
          "sha": "298b95f111be85f2d5a18dc0177eb9a64130f9b4",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_152.RULE\n\nBased on the normalized pattern:\n\n    this software is distributed under the terms of the gnu general public\n    license ( gpl ) version 2 as published by the free software foundation\n    this software is provided by the copyright holders and contributors as\n    is and any express or implied warranties including but not limited to\n    the implied warranties of merchantability and fitness for a particular\n    purpose are disclaimed in no event shall the copyright owner or\n    contributors be liable for any direct indirect incidental special\n    exemplary or consequential damages (including but not limited to\n    procurement of substitute goods or services loss of use data or\n    profits or business interruption) however caused and on any theory of\n    liability whether in contract strict liability or tort (including\n    negligence or otherwise) arising in any way out of the use of this\n    software even if advised of the possibility of such damage\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/298b95f111be85f2d5a18dc0177eb9a64130f9b4"
        },
        {
          "sha": "1f88a7433f1b8aa941880f395783148f8bc9bd3c",
          "author": {
            "email": "tglx@linutronix.de",
            "name": "Thomas Gleixner"
          },
          "message": "treewide: Replace GPLv2 boilerplate/reference with SPDX - gpl-2.0_160.RULE\n\nBased on the normalized pattern:\n\n    the code contained herein is licensed under the gnu general public\n    license you may obtain a copy of the gnu general public license\n    version 2 at the following locations:  http://www opensource\n    org/licenses/gpl-license html http://www gnu org/copyleft/gpl html\n\nextracted by the scancode license scanner the SPDX license identifier\n\n    GPL-2.0-only\n\nhas been chosen to replace the boilerplate/reference.\n\nReviewed-by: Allison Randal <allison@lohutok.net>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1f88a7433f1b8aa941880f395783148f8bc9bd3c"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-04T19:27:14Z"
  },
  {
    "id": "23250776017",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10632176072,
      "size": 1000,
      "distinct_size": 1994,
      "ref": "refs/heads/master",
      "head": "b44f2fd87919b5ae6e1756d4c7ba2cbba22238e1",
      "before": "f86d1fbbe7858884d6754534a0afbb74fc30bc26",
      "commits": [
        {
          "sha": "25eb441d55d479581a65bcc9de88bc1d86bf76c1",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Add all the vc5 HDMI registers into the debugfs dumps\n\nThe vc5 HDMI registers hadn't been added into the debugfs\nregister sets, therefore weren't dumped on request.\nAdd them in.\n\nFixes: 8323989140f3 (\"drm/vc4: hdmi: Support the BCM2711 HDMI controllers\")\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-19-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/25eb441d55d479581a65bcc9de88bc1d86bf76c1"
        },
        {
          "sha": "b6079d1578dc4b4b8050d613a5449a63def7d1dd",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Clear unused infoframe packet RAM registers\n\nUsing a hdmi analyser the bytes in packet ram\nregisters beyond the length were visible in the\ninfoframes and it flagged the checksum as invalid.\n\nZeroing unused words of packet RAM avoids this\n\nFixes: 21317b3fba54 (\"drm/vc4: Set up the AVI and SPD infoframes.\")\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-20-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b6079d1578dc4b4b8050d613a5449a63def7d1dd"
        },
        {
          "sha": "1c594eeccf92368177c2e22f1d3ee4933dfb8567",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Avoid full hdmi audio fifo writes\n\nWe are getting occasional VC4_HD_MAI_CTL_ERRORF in\nHDMI_MAI_CTL which seem to correspond with audio dropouts.\n\nReduce the threshold where we deassert DREQ to avoid the fifo\noverfilling\n\nFixes: bb7d78568814 (\"drm/vc4: Add HDMI audio support\")\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-21-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1c594eeccf92368177c2e22f1d3ee4933dfb8567"
        },
        {
          "sha": "35dc00c12a72700a9c4592afee7d136ecb280cbd",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Reset HDMI MISC_CONTROL register\n\nThe HDMI block can repeat pixels for double clocked modes,\nand the firmware is now configuring the block to do this as\nthe PV is doing it incorrectly when at 2pixels/clock.\nIf the kernel doesn't reset it then we end up with strange\nmodes.\n\nReset MISC_CONTROL.\n\nFixes: 8323989140f3 (\"drm/vc4: hdmi: Support the BCM2711 HDMI controllers\")\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-22-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/35dc00c12a72700a9c4592afee7d136ecb280cbd"
        },
        {
          "sha": "fcef97e70094a33ded73b3eb9bef06698c6e9c12",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Switch to pm_runtime_status_suspended\n\nIf the controller isn't clocked or its domain powered up, the register\naccesses will either stall the CPU or return garbage, respectively.\n\nThus, we had a warning in our register access function to complain when\nthat kind of risky accesses were performed.\n\nIn order to check the runtime_pm power state, we were using\npm_runtime_active(), but it turns out that it will become active only\nonce the runtime_resume hook has been executed.\n\nThis prevents us from doing any WARN-free register access in our\nruntime_resume() implementation, while this is valid.\n\nLet's switch to pm_runtime_status_suspended() instead.\n\nFixes: 14e193b95604 (\"drm/vc4: hdmi: Warn if we access the controller while disabled\")\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-23-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fcef97e70094a33ded73b3eb9bef06698c6e9c12"
        },
        {
          "sha": "467e30171b5b483922b1c24c573fa50787207cb6",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Move HDMI reset to pm_resume\n\nThe BCM2835-37 found in the RaspberryPi 0 to 3 have a power domain\nattached to the HDMI block, handled in Linux through runtime_pm.\n\nThat power domain is shared with the VEC block, so even if we put our\nruntime_pm reference in the HDMI driver it would keep being on. If the\nVEC is disabled though, the power domain would be disabled and we would\nlose any initialization done in our bind implementation.\n\nThat initialization involves calling the reset function and initializing\nthe CEC registers.\n\nLet's move the initialization to our runtime_resume implementation so\nthat we initialize everything properly if we ever need to.\n\nFixes: c86b41214362 (\"drm/vc4: hdmi: Move the HSM clock enable to runtime_pm\")\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-24-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/467e30171b5b483922b1c24c573fa50787207cb6"
        },
        {
          "sha": "05954270bd230ec31f894b34874fb0e2e534873d",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Stop checking for enabled output in audio\n\nThe current HDMI driver, in vc4_hdmi_audio_can_stream() checks whether\nthe display output is enabled.\n\nThis has been there in one form or the other since the introduction of\nthe audio support in the VC4 HDMI driver in commit bb7d78568814\n(\"drm/vc4: Add HDMI audio support\"), but no justification for this check\nis in the commit message, or in the discussions around the patches.\n\nOne can only assume this was done to prevent a user from playing audio\non the ALSA soundcard when the monitor doesn't support it.\n\nHowever, this is causing some issues. Indeed, Kodi, for example, was\nhitting some errors if it was streaming audio during a modeset. With the\ntheory above, it does make sense, but the display and audio threads are\ntypically completely different processes with no opportunity to\nsynchronise which makes it hard to workaround.\n\nRemoving that check also doesn't seem to cause any trouble, so let's\njust remove it.\n\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-25-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/05954270bd230ec31f894b34874fb0e2e534873d"
        },
        {
          "sha": "4ae3d6c09d25a932ce812b1e092d615ab799d5dd",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Skip writes to disabled packet RAM\n\nThis path actually occurs when audio is started during a hdmi mode set.\nAs the data will be written by vc4_hdmi_set_infoframes when packet RAM\nis enabled again, don't treat as an error\n\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-26-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4ae3d6c09d25a932ce812b1e092d615ab799d5dd"
        },
        {
          "sha": "125076c8754ee6bb7419134cf3c6b56144217685",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Remove VC4_HDMI_SCHEDULER_CONTROL_VERT_ALWAYS_KEEPOUT\n\nThis bit ensures data island packets are never generated when disallowed\nby HDCP. As no Pi boards support HDCP this is providing an unnecessary\nrestriction\n\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-27-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/125076c8754ee6bb7419134cf3c6b56144217685"
        },
        {
          "sha": "d5ca98701af6cc82c9ed2406cf6eca407212e8d0",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Add HDMI format detection registers to register list\n\nThe block can detect what the incoming image timings are for\ndebug purposes. Add them to the list of registers understood\nby the driver to allow easy dumping of the values.\n\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-28-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d5ca98701af6cc82c9ed2406cf6eca407212e8d0"
        },
        {
          "sha": "f3f27511316bd14ebf0a3c0f76aafced59e541df",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Add MISC_CONTROL register for vc4\n\nThe MISC_CONTROL register allows configuration of pixel repetition\nfor pixel doubling in the HDMI block instead of PixelValve.\nIt was already defined for vc5, so add it for vc4.\n\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-29-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f3f27511316bd14ebf0a3c0f76aafced59e541df"
        },
        {
          "sha": "5731f7abf32281fc55a089cce255f6121b1596fb",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Report that 3d/stereo is allowed\n\nOur HDMI controllers supports Stereo output so let's enable it.\n\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-30-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5731f7abf32281fc55a089cce255f6121b1596fb"
        },
        {
          "sha": "0ee5a40152b15f200ed3a0d51e8aa782ea979c6a",
          "author": {
            "email": "kfyatek+publicgit@gmail.com",
            "name": "Mateusz Kwiatkowski"
          },
          "message": "drm/vc4: hdmi: Fix timings for interlaced modes\n\nIncrease the number of post-sync blanking lines on odd fields instead of\ndecreasing it on even fields. This makes the total number of lines\nproperly match the modelines.\n\nAdditionally fix the value of PV_VCONTROL_ODD_DELAY, which did not take\npixels_per_clock into account, causing some displays to invert the\nfields when driven by bcm2711.\n\nFixes: 682e62c45406 (\"drm/vc4: Fix support for interlaced modes on HDMI.\")\nSigned-off-by: Mateusz Kwiatkowski <kfyatek+publicgit@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-31-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0ee5a40152b15f200ed3a0d51e8aa782ea979c6a"
        },
        {
          "sha": "c94cd0620a922156c9ff9af9c3301b174b287677",
          "author": {
            "email": "popcornmix@gmail.com",
            "name": "Dom Cobley"
          },
          "message": "drm/vc4: hdmi: Force modeset when bpc or format changes\n\nWhenever the maximum BPC is changed, vc4_hdmi_encoder_compute_config()\nmight pick up a different BPC or format depending on the display\ncapabilities.\n\nThat change will have a number of side effects, including the clock\nrates and whether the scrambling is enabled.\n\nHowever, only drm_crtc_state.connectors_changed will be set to true,\nsince that properly only affects the connector.\n\nThis means that while drm_atomic_crtc_needs_modeset() will return true,\nand thus drm_atomic_helper_commit_modeset_enables() will call our\nencoder atomic_enable() hook, mode_changed will be false.\n\nSo crtc_set_mode() will not call our encoder .atomic_mode_set() hook. We\nuse this hook in vc4 to set the vc4_hdmi_connector_state.output_bpc (and\noutput_format), and will then reuse the value in .atomic_enable() to select\nwhether or not scrambling should be enabled.\n\nHowever, since our clock rate is pre-computed during .atomic_check(), we\nend up with the clocks properly configured, but the scrambling disabled,\nleading to a blank screen.\n\nLet's set mode_changed to true in our HDMI driver to force the update of\noutput_bpc, and thus prevent the issue entirely.\n\nFixes: ba8c0faebbb0 (\"drm/vc4: hdmi: Enable 10/12 bpc output\")\nSigned-off-by: Dom Cobley <popcornmix@gmail.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-32-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c94cd0620a922156c9ff9af9c3301b174b287677"
        },
        {
          "sha": "fb10dc451c0f15e3c19798a2f41d357f3f7576f5",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Correct HDMI timing registers for interlaced modes\n\nFor interlaced modes the timings were not being correctly\nprogrammed into the HDMI block, so correct them.\n\nFixes: 8323989140f3 (\"drm/vc4: hdmi: Support the BCM2711 HDMI controllers\")\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-33-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fb10dc451c0f15e3c19798a2f41d357f3f7576f5"
        },
        {
          "sha": "3650062e4281ab28a6f8c9d59606d0a6266be736",
          "author": {
            "email": "dave.stevenson@raspberrypi.com",
            "name": "Dave Stevenson"
          },
          "message": "drm/vc4: hdmi: Move pixel doubling from Pixelvalve to HDMI block\n\nWith the change to 2 pixels/clock, the pixel doubling in the PV\nresults in doubling each pair of pixels, ie ABABCDCD instead of\nAABBCCDD.\n\nMove the pixel doubling to the HDMI block, however this means\nthat DBLCLK modes now fall foul of requiring even values for\nall the horizontal timing parameters.\nAs both 480i and 576i fail this, attempt to fix up DBLCLK modes\nthat have odd timings values.\n\nFixes: 8323989140f3 (\"drm/vc4: hdmi: Support the BCM2711 HDMI controllers\")\nSigned-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>\nLink: https://lore.kernel.org/r/20220613144800.326124-34-maxime@cerno.tech\nSigned-off-by: Maxime Ripard <maxime@cerno.tech>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3650062e4281ab28a6f8c9d59606d0a6266be736"
        },
        {
          "sha": "cea9ed611e85d36a05db52b6457bf584b7d969e2",
          "author": {
            "email": "hbh25y@gmail.com",
            "name": "Hangyu Hua"
          },
          "message": "drm/i915: fix a possible refcount leak in intel_dp_add_mst_connector()\n\nIf drm_connector_init fails, intel_connector_free will be called to take\ncare of proper free. So it is necessary to drop the refcount of port\nbefore intel_connector_free.\n\nFixes: 091a4f91942a (\"drm/i915: Handle drm-layer errors in intel_dp_add_mst_connector\")\nSigned-off-by: Hangyu Hua <hbh25y@gmail.com>\nReviewed-by: José Roberto de Souza <jose.souza@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20220624130406.17996-1-jose.souza@intel.com\nSigned-off-by: José Roberto de Souza <jose.souza@intel.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cea9ed611e85d36a05db52b6457bf584b7d969e2"
        },
        {
          "sha": "01cf387b1c7f60527c91627528370f463bcb84f3",
          "author": {
            "email": "alexander.deucher@amd.com",
            "name": "Alex Deucher"
          },
          "message": "drm/amdgpu/display: reduce stack size in dml32_ModeSupportAndSystemConfigurationFull()\n\nMove more stack variable in to dummy vars structure on the heap.\n\nFixes stack frame size errors:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dml/dcn32/display_mode_vba_32.c: In function 'dml32_ModeSupportAndSystemConfigurationFull':\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dml/dcn32/display_mode_vba_32.c:3833:1: error: the frame size of 2720 bytes is larger than 2048 bytes [-Werror=frame-larger-than=]\n 3833 | } // ModeSupportAndSystemConfigurationFull\n      | ^\n\nFixes: dda4fb85e433 (\"drm/amd/display: DML changes for DCN32/321\")\nCc: Stephen Rothwell <sfr@canb.auug.org.au>\nCc: Aurabindo Pillai <aurabindo.pillai@amd.com>\nCc: Rodrigo Siqueira Jordao <Rodrigo.Siqueira@amd.com>\nReviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/01cf387b1c7f60527c91627528370f463bcb84f3"
        },
        {
          "sha": "d7f0c8aff01340c2bed48f1e712a7f17c31b3db9",
          "author": {
            "email": "evan.quan@amd.com",
            "name": "Evan Quan"
          },
          "message": "drm/amdgpu: update GFX11 cs settings\n\nUpdate GFX11 cs related settings.\n\nSigned-off-by: Evan Quan <evan.quan@amd.com>\nAcked-by: Alex Deucher <alexander.deucher@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d7f0c8aff01340c2bed48f1e712a7f17c31b3db9"
        },
        {
          "sha": "1d3182006cf6eea26d0cd752f8042c3cae43139b",
          "author": {
            "email": "evan.quan@amd.com",
            "name": "Evan Quan"
          },
          "message": "drm/amd/pm: enable VR0 HOT support for SMU 13.0.0\n\nEnable VR0 Hot support for SMU 13.0.0.\n\nSigned-off-by: Evan Quan <evan.quan@amd.com>\nAcked-by: Alex Deucher <alexander.deucher@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1d3182006cf6eea26d0cd752f8042c3cae43139b"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-04T03:19:37Z"
  },
  {
    "id": "23248686186",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10631055883,
      "size": 1000,
      "distinct_size": 2078,
      "ref": "refs/heads/master",
      "head": "f86d1fbbe7858884d6754534a0afbb74fc30bc26",
      "before": "526942b8134cc34d25d27f95dfff98b8ce2f6fcd",
      "commits": [
        {
          "sha": "0a178a6084d6b6a1cb782d01ae8f65d9f6ddc37c",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: connac: move mt76_connac_tx_complete_skb in shared code\n\nSince now txp structures are in common code we can reuse\nmt76_connac_tx_complete_skb routine in mt7921e, mt7915e and mt7615e\ndrivers.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0a178a6084d6b6a1cb782d01ae8f65d9f6ddc37c"
        },
        {
          "sha": "5e610f8e3115ca92a59d3721642185e15df1a065",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: connac: move mt76_connac_write_hw_txp in shared code\n\nNow we can move mt76_connac_write_hw_txp routine in mt76-connac module\nand reuse it in mt7921e and mt7615e driver.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5e610f8e3115ca92a59d3721642185e15df1a065"
        },
        {
          "sha": "2b25b8555d631c6d21d7d29f4f3d85a118f1e52d",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: connac: move mt7615_txp_skb_unmap in common code\n\nMove mt7615_txp_skb_unmap in shared code and reuse it in mt7915e and\nmt7921e driver.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2b25b8555d631c6d21d7d29f4f3d85a118f1e52d"
        },
        {
          "sha": "a8021cb9c1ef26536a766a0c3ecdd1f702516cb0",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: mt7915: rely on mt76_connac_tx_free\n\nAs for mt7921 and mt7615 drivers, rely on mt76_connac_tx_free data\nstructure in mt7915e driver.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a8021cb9c1ef26536a766a0c3ecdd1f702516cb0"
        },
        {
          "sha": "fc6ee71a2a8f2d183724e3f97762e93c5102425c",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: move mcu_txd/mcu_rxd structures in shared code\n\nThis is a preliminary patch to add mt7990 chipset support.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fc6ee71a2a8f2d183724e3f97762e93c5102425c"
        },
        {
          "sha": "d2f5c8ed9fc436b53a59fdb8bdeb5f19f3a1b12c",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: move mt76_connac2_mcu_fill_message in mt76_connac module\n\nMove mt76_connac2_mcu_fill_message routine in shared module in order to\nreuse it for mt7921 and mt7915e drivers. This is a preliminary patch to\nadd mt7990 driver support.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d2f5c8ed9fc436b53a59fdb8bdeb5f19f3a1b12c"
        },
        {
          "sha": "c3f2ed588867e14560b86e9db6bf5ac29f03dc5a",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: mt7915: disable UL MU-MIMO for mt7915\n\nAfter initially establishing a connection, it can produce multi-second latency\nspikes and tx hangs when pushing traffic.\nIt should work better for MT7916 and MT7986, so leave it enabled there\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c3f2ed588867e14560b86e9db6bf5ac29f03dc5a"
        },
        {
          "sha": "6e744cfeee02c2d8676eb55d5b3720808812f41f",
          "author": {
            "email": "shayne.chen@mediatek.com",
            "name": "Shayne Chen"
          },
          "message": "mt76: mt7915: fix incorrect testmode ipg on band 1 caused by wmm_idx\n\nFix the issue that the measured inter packet gap didn't fit its\nsetting value.\n\nFixes: c2d3b1926f30 (\"mt76: mt7915: add support for ipg in testmode\")\nSigned-off-by: Shayne Chen <shayne.chen@mediatek.com>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6e744cfeee02c2d8676eb55d5b3720808812f41f"
        },
        {
          "sha": "8dae26a3bddf8bcd81f6f13de8c9ea085e64cdea",
          "author": {
            "email": "lorenzo@kernel.org",
            "name": "Lorenzo Bianconi"
          },
          "message": "mt76: mt7915: do not copy ieee80211_ops pointer in mt7915_mmio_probe\n\nWe do not modify ieee80211_ops pointers so we do not need to copy them.\n\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8dae26a3bddf8bcd81f6f13de8c9ea085e64cdea"
        },
        {
          "sha": "754f9ae80e4fc3a42cfb7e2c680fdf7710ff8273",
          "author": {
            "email": "chui-hao.chiu@mediatek.com",
            "name": "Peter Chiu"
          },
          "message": "mt76: mt7915: update mpdu density in 6g capability\n\nSet mpdu density to 2 usec in 6g capability to meet hardware\ncapability and also enhance throughput.\n\nSigned-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/754f9ae80e4fc3a42cfb7e2c680fdf7710ff8273"
        },
        {
          "sha": "8e3e7567b8c1216c743a69a32e468f7c86b8643f",
          "author": {
            "email": "shayne.chen@mediatek.com",
            "name": "Shayne Chen"
          },
          "message": "mt76: mt7915: add sta_rec with EXTRA_INFO_NEW for the first time only\n\nSet EXTRA_INFO_NEW for the first time only to prevent adding the same\nstarec entry, otherwise the entry might be removed in fw.\n\nReviewed-by: Ryder Lee <ryder.lee@mediatek.com>\nSigned-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>\nSigned-off-by: Shayne Chen <shayne.chen@mediatek.com>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8e3e7567b8c1216c743a69a32e468f7c86b8643f"
        },
        {
          "sha": "1858e4fc89b2301e9a9e056a331cbd0902e516b5",
          "author": {
            "email": "MeiChia.Chiu@mediatek.com",
            "name": "MeiChia Chiu"
          },
          "message": "mt76: do not check the ccmp pn for ONLY_MONITOR frame\n\nif the received frame enables RX_FLAG_ONLY_MONITOR,\ndriver doesn't need to check the ccmp pn of this frame.\n\nReviewed-by: Ryder Lee <ryder.lee@mediatek.com>\nSigned-off-by: MeiChia Chiu <MeiChia.Chiu@mediatek.com>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1858e4fc89b2301e9a9e056a331cbd0902e516b5"
        },
        {
          "sha": "18fced2017d8b8a21a484640f5880bd7ec0d62ec",
          "author": {
            "email": "MeiChia.Chiu@mediatek.com",
            "name": "MeiChia Chiu"
          },
          "message": "mt76: mt7915: update the maximum size of beacon offload\n\nSince an in-band discovery frame is offloaded by MCU,\nhere we enlarge the command size to accommodate the additional content.\n\nReviewed-by: Ryder Lee <ryder.lee@mediatek.com>\nSigned-off-by: Money Wang <Money.Wang@mediatek.com>\nSigned-off-by: MeiChia Chiu <MeiChia.Chiu@mediatek.com>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/18fced2017d8b8a21a484640f5880bd7ec0d62ec"
        },
        {
          "sha": "df6b739fd7d15371357c32d4b1190e681434a096",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: mt7615: add sta_rec with EXTRA_INFO_NEW for the first time only\n\nSet EXTRA_INFO_NEW for the first time only to prevent adding the same\nstarec entry, otherwise the entry might be removed in fw.\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/df6b739fd7d15371357c32d4b1190e681434a096"
        },
        {
          "sha": "8916e4e513a85ff6315d1e7fef999916b35023d7",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: mt76x02: improve reliability of the beacon hang check\n\nIncrement the counter only when writing beacons to the hardware in order\nto avoid triggering restarts if beacons are disabled.\nAdditionally, avoid resetting the MAC if stopping it failed\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/8916e4e513a85ff6315d1e7fef999916b35023d7"
        },
        {
          "sha": "3c1032e1221723777d59c116e805be5e3fcb319d",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: allow receiving frames with invalid CCMP PN via monitor interfaces\n\nThis can be useful for debugging\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3c1032e1221723777d59c116e805be5e3fcb319d"
        },
        {
          "sha": "aac86cebb4a09e3fa2c07589f79f7d0e07e8c9a4",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: mt7615: fix throughput regression on DFS channels\n\nFor some reason, mt7615 reacts badly to repeatedly enabling/disabling the radar\ndetector without also switching the channel.\nThis results in very bad throughput on DFS channels, because\nhw->conf.radar_enabled can get toggled a few times after CAC ends.\nFix this by always leaving the DFS detector enabled on DFS channels and instead\nsuppress unwanted detection events.\n\nFixes: 2c86f6752046 (\"mt76: mt7615: fix/rewrite the dfs state handling logic\")\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/aac86cebb4a09e3fa2c07589f79f7d0e07e8c9a4"
        },
        {
          "sha": "d08295f5be8e63e64f9e664572f1b582ede7958b",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: pass original queue id from __mt76_tx_queue_skb to the driver\n\nMT7615 and newer map multiple software tx queues to the hardware id\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d08295f5be8e63e64f9e664572f1b582ede7958b"
        },
        {
          "sha": "1d5af0acac6eee9cb2b6688ed5e7084494d8707b",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: do not use skb_set_queue_mapping for internal purposes\n\nPreviously the code used skb_set_queue_mapping for management or non-bufferable\npowersave frames that need to be sent to a different hardware queue.\nThis can confuse AQL, which expects the value to remain the same until the tx\nstatus report.\nThe only place that currently uses the altered skb queue mapping is the txwi\nwrite function. Change the code to pass the hardware queue id as a function\nparameter instead.\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1d5af0acac6eee9cb2b6688ed5e7084494d8707b"
        },
        {
          "sha": "bceb8b8ded9b2470c10a13e5446f2d5a8e178964",
          "author": {
            "email": "nbd@nbd.name",
            "name": "Felix Fietkau"
          },
          "message": "mt76: remove q->qid\n\nIt is no longer used\n\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bceb8b8ded9b2470c10a13e5446f2d5a8e178964"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T23:44:56Z"
  },
  {
    "id": "23247915048",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10630651771,
      "size": 218,
      "distinct_size": 218,
      "ref": "refs/heads/master",
      "head": "526942b8134cc34d25d27f95dfff98b8ce2f6fcd",
      "before": "ff89dd08c0f0a3fd330c9ef9d775e880f82c291e",
      "commits": [
        {
          "sha": "34a4d048d3cf11546864bc09ddab6c2e7b0f7e65",
          "author": {
            "email": "wangxiang@cdjrlc.com",
            "name": "Xiang wangx"
          },
          "message": "ata: libata: Fix syntax errors in comments\n\nDelete the redundant word 'in'.\n\nSigned-off-by: Xiang wangx <wangxiang@cdjrlc.com>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/34a4d048d3cf11546864bc09ddab6c2e7b0f7e65"
        },
        {
          "sha": "305f8db79d76ac3e047fe5004d2175b5835bb7fc",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: pata_hpt37x: move claculating PCI clock from hpt37x_clock_slot()\n\nhpt37x_init_one() incorrectly calls an averaged f_CNT register value 'freq'\nand hpt37x_clock_slot() takes that value as the 'freq' parameter -- rename\nthe former variable to 'fcnt' and move the actual code calculating the PCI\nclock from hpt37x_clock_slot() to hpt37x_init_one(), along with adding the\nfrequency clamping code, in preparation for the factoring out the PCI clock\ndetection, so that this driver would become more like the 'pata_hpt3x2n'\ndriver...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/305f8db79d76ac3e047fe5004d2175b5835bb7fc"
        },
        {
          "sha": "96c34ac4ec30f31941b55f6866a5cc7631b5e92f",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: pata_hpt37x: factor out hpt37x_pci_clock()\n\nFactor out the PCI clock frequency detection code into hpt37x_pci_clock(),\nso that this driver becomes more like 'pata_hpt3x2n'.  Note that I decided\nto change the way HPT374 is identified to using the PCI device ID...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/96c34ac4ec30f31941b55f6866a5cc7631b5e92f"
        },
        {
          "sha": "75b4d58cb5bd7401d537f149e2fa268beaa2c375",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: pata_hpt37x: merge hpt374_read_freq() to hpt37x_pci_clock()\n\nWith hpt374_read_freq() implemented as a separate function, there's\nsome code duplication going on, not to mention that this function is\nnamed incorrectly: it returns the f_CNT register value saved by BIOS,\nnot the PCI clock frequency.\nFolding hpt374_read_freq() into hpt37x_pci_clock() saves 20 bytes of\nobject code with x86_64 gcc 10.3.1...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/75b4d58cb5bd7401d537f149e2fa268beaa2c375"
        },
        {
          "sha": "6cd379f75f424b874ea1f35e3c02fa4090246eaf",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: pata_hpt3x2n: pass base DPLL frequency to hpt3x2n_pci_clock()\n\nCurrently, the base DPLL frequency is hardcoded in hpt3x2n_pci_clock().\nAlign with the updated 'pata_hpt37x' driver, where this frequency is a\nparameter to hpt37x_pci_clock().\n\nWhile at it, also do the following to align with the 'pata_hpt37x' driver:\n- fix the 'freq' local variable's type;\n- remove the 'iobase' local variable;\n- extend the comment to the inl() call;\n- move the 'total' local variable's declaration.\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6cd379f75f424b874ea1f35e3c02fa4090246eaf"
        },
        {
          "sha": "79ad6a561958777d6d8ecfa66e51d09d35ec6450",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: libata-core: fix sloppy typing in ata_id_n_sectors()\n\nThe code multiplying the # of cylinders/heads/sectors in ata_id_n_sectors()\nto get a disk capacity implicitly uses the *int* type for that calculation\nand casting the result to 'u64' before returning ensues a sign extension.\nExplicitly casting the 'u16' typed multipliers to 'u32' results in avoiding\na sign extension instruction and so in a more compact code...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool.\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/79ad6a561958777d6d8ecfa66e51d09d35ec6450"
        },
        {
          "sha": "5eb8deb4af56b120c152066ff43a0867267b264b",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: libata-core: get rid of *else* branches in ata_id_n_sectors()\n\nUsing *else* after *return* doesn't make much sense -- getting rid of such\n*else* branches reduces the indentation levels and thus reduces # of LoC...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5eb8deb4af56b120c152066ff43a0867267b264b"
        },
        {
          "sha": "6365a1935c5151455812e96d8de434c551dc0d98",
          "author": {
            "email": "mawupeng1@huawei.com",
            "name": "Ma Wupeng"
          },
          "message": "efi: Make code to find mirrored memory ranges generic\n\nCommit b05b9f5f9dcf (\"x86, mirror: x86 enabling - find mirrored memory\nranges\") introduce the efi_find_mirror() function on x86. In order to reuse\nthe API we make it public.\n\nArm64 can support mirrored memory too, so function efi_find_mirror() is added to\nefi_init() to this support for arm64.\n\nSince efi_init() is shared by ARM, arm64 and riscv, this patch will bring\nmirror memory support for these architectures, but this support is only tested\nin arm64.\n\nSigned-off-by: Ma Wupeng <mawupeng1@huawei.com>\nLink: https://lore.kernel.org/r/20220614092156.1972846-2-mawupeng1@huawei.com\n[ardb: fix subject to better reflect the payload]\nAcked-by: Mike Rapoport <rppt@linux.ibm.com>\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6365a1935c5151455812e96d8de434c551dc0d98"
        },
        {
          "sha": "14d9a675fd0d414b7ca3d47d2ff70fbda4f6cfc2",
          "author": {
            "email": "mawupeng1@huawei.com",
            "name": "Ma Wupeng"
          },
          "message": "mm: Ratelimited mirrored memory related warning messages\n\nIf system has mirrored memory, memblock will try to allocate mirrored\nmemory firstly and fallback to non-mirrored memory when fails, but if with\nlimited mirrored memory or some numa node without mirrored memory, lots of\nwarning message about memblock allocation will occur.\n\nThis patch ratelimit the warning message to avoid a very long print during\nbootup.\n\nSigned-off-by: Ma Wupeng <mawupeng1@huawei.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nAcked-by: Mike Rapoport <rppt@linux.ibm.com>\nReviewed-by: Anshuman Khandual <anshuman.khandual@arm.com>\nReviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>\nLink: https://lore.kernel.org/r/20220614092156.1972846-3-mawupeng1@huawei.com\nAcked-by: Mike Rapoport <rppt@linux.ibm.com>\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/14d9a675fd0d414b7ca3d47d2ff70fbda4f6cfc2"
        },
        {
          "sha": "abd62377c0064302df680ab33f4c05290ba24af8",
          "author": {
            "email": "mawupeng1@huawei.com",
            "name": "Ma Wupeng"
          },
          "message": "mm: Limit warning message in vmemmap_verify() to once\n\nFor a system only have limited mirrored memory or some numa node without\nmirrored memory, the per node vmemmap page_structs prefer to allocate\nmemory from mirrored region, which will lead to vmemmap_verify() in\nvmemmap_populate_basepages() report lots of warning message.\n\nThis patch change the frequency of \"potential offnode page_structs\" warning\nmessages to only once to avoid a very long print during bootup.\n\nSigned-off-by: Ma Wupeng <mawupeng1@huawei.com>\nAcked-by: David Hildenbrand <david@redhat.com>\nLink: https://lore.kernel.org/r/20220614092156.1972846-4-mawupeng1@huawei.com\nAcked-by: Mike Rapoport <rppt@linux.ibm.com>\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/abd62377c0064302df680ab33f4c05290ba24af8"
        },
        {
          "sha": "c0b978fedff685c9fdf91a46a6f026ac49d99591",
          "author": {
            "email": "mawupeng1@huawei.com",
            "name": "Ma Wupeng"
          },
          "message": "arm64: mm: Only remove nomap flag for initrd\n\nCommit 177e15f0c144 (\"arm64: add the initrd region to the linear mapping explicitly\")\nremove all the flags of the memory used by initrd. This is fine since\nMEMBLOCK_MIRROR is not used in arm64.\n\nHowever with mirrored feature introduced to arm64, this will clear the mirrored\nflag used by initrd, which will lead to error log printed by\nfind_zone_movable_pfns_for_nodes() if the lower 4G range has some non-mirrored\nmemory.\n\nTo solve this problem, only MEMBLOCK_NOMAP flag will be removed via\nmemblock_clear_nomap().\n\nSigned-off-by: Ma Wupeng <mawupeng1@huawei.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nLink: https://lore.kernel.org/r/20220614092156.1972846-5-mawupeng1@huawei.com\nAcked-by: Mike Rapoport <rppt@linux.ibm.com>\nAcked-by: Catalin Marinas <catalin.marinas@arm.com>\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c0b978fedff685c9fdf91a46a6f026ac49d99591"
        },
        {
          "sha": "902c2d91582c7ff0cb5f57ffb3766656f9b910c6",
          "author": {
            "email": "mawupeng1@huawei.com",
            "name": "Ma Wupeng"
          },
          "message": "memblock: Disable mirror feature if kernelcore is not specified\n\nIf system have some mirrored memory and mirrored feature is not specified\nin boot parameter, the basic mirrored feature will be enabled and this will\nlead to the following situations:\n\n- memblock memory allocation prefers mirrored region. This may have some\n  unexpected influence on numa affinity.\n\n- contiguous memory will be split into several parts if parts of them\n  is mirrored memory via memblock_mark_mirror().\n\nTo fix this, variable mirrored_kernelcore will be checked in\nmemblock_mark_mirror(). Mark mirrored memory with flag MEMBLOCK_MIRROR iff\nkernelcore=mirror is added in the kernel parameters.\n\nSigned-off-by: Ma Wupeng <mawupeng1@huawei.com>\nAcked-by: Ard Biesheuvel <ardb@kernel.org>\nLink: https://lore.kernel.org/r/20220614092156.1972846-6-mawupeng1@huawei.com\nAcked-by: Mike Rapoport <rppt@linux.ibm.com>\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/902c2d91582c7ff0cb5f57ffb3766656f9b910c6"
        },
        {
          "sha": "db01ea882bf601252dad57242655da17fd9ad2f5",
          "author": {
            "email": "liuzixian4@huawei.com",
            "name": "Liu Zixian"
          },
          "message": "efi: Correct comment on efi_memmap_alloc\n\nReturning zero means success now.\n\nSigned-off-by: Liu Zixian <liuzixian4@huawei.com>\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/db01ea882bf601252dad57242655da17fd9ad2f5"
        },
        {
          "sha": "f0a6d77b351c18c122fc1638ac9e58f5e0346f64",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: make transfer mode masks *unsigned int*\n\nThe packed transfer mode masks and also the {pio|mwdma|udma}_mask fields\nof *struct*s ata_device and ata_port_info are declared as *unsigned long*\n(which is a 64-bit type on 64-bit architectures) but actually the packed\nmasks occupy only 20 bits (7 PIO modes, 5 MWDMA modes, and 8 UDMA modes)\nand the PIO/MWDMA/UDMA masks easily fit into just 8 bits each, so we can\nsafely use (always 32-bit) *unsigned int* variables instead.  This saves\n745 bytes of object code in libata-core.o alone, not to mention LLDDs...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f0a6d77b351c18c122fc1638ac9e58f5e0346f64"
        },
        {
          "sha": "4d6119f06ce14756777c4bb098fb4ad99a0a5d46",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: libata-core: make ata_exec_internal_sg() *static*\n\nata_exec_internal_sg() is only called by ata_exec_internal() further in\nthe same file, so we can make it *static* and remove its prototype from\ndrivers/ata/libata.h...\n\nSuggested-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4d6119f06ce14756777c4bb098fb4ad99a0a5d46"
        },
        {
          "sha": "afae461a3bfa314c0432ab6871ca91a167fcb8be",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: libata-eh: fix sloppy result type of ata_eh_nr_in_flight()\n\nata_eh_nr_in_flight() counts the # of the active tagged commands and\nthus cannot return a negative value but the result type is nevertheless\nint.  Switching it to unsigned int (along with the local variables\nreceiving the function's result) helps avoiding the sign extension\ninstructions when comparing with or assigning to unsigned long\nata_port::fastdrain_cnt and thus results in a more compact 64-bit\ncode.\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE\nstatic analysis tool.\n\n[Damien]\nFixed commit message.\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/afae461a3bfa314c0432ab6871ca91a167fcb8be"
        },
        {
          "sha": "2e0aee8f0a22c60a1ae0876f7233e70ad9d026b8",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: make ata_port::fastdrain_cnt *unsigned int*\n\n*unsigned long* ata_port::fastdrain_cnt (64-bit value in a 64-bit kernel)\nis always assigned from the 32-bit *unsigned int* variables, thus could\nalso be made just *unsigned int*...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2e0aee8f0a22c60a1ae0876f7233e70ad9d026b8"
        },
        {
          "sha": "61176eed36d3a91305df6417be74755703a7db27",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: libata-core: fix sloppy parameter type in ata_exec_internal[_sg]()\n\nMake the 'timeout' parameter to ata_exec_internal_sg() *unsigned int* as\nmsecs_to_jiffies() that it calls takes just *unsigned int* for the time in\nmilliseconds. Then follow the suit with ata_exec_internal(), its only\ncaller; also fix up ata_dev_set_feature(), the only ata_exec_internal()'s\ncaller  that explicitly passes *unsigned long* variable for timeout...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool.\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/61176eed36d3a91305df6417be74755703a7db27"
        },
        {
          "sha": "e06233f9372c396191327790bd38999730869e01",
          "author": {
            "email": "s.shtylyov@omp.ru",
            "name": "Sergey Shtylyov"
          },
          "message": "ata: libata-eh: fix sloppy result type of ata_internal_cmd_timeout()\n\nata_internal_cmd_timeout() returns *unsigned long* timeout in ms, however\nata_exec_internal_sg() passes that timeout to msecs_to_jiffies() that takes\njust *unsigned int*.  Change ata_internal_cmd_timeout()'s result type to\n*unsigned int* as well, also updating the *struct* ata_eh_cmd_timeout_ent\nand the command timeout tables -- all timeouts fit into *unsigned int* but\nwe have to change ULONG_MAX to UINT_MAX...\n\nSigned-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>\nSigned-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e06233f9372c396191327790bd38999730869e01"
        },
        {
          "sha": "3881ee0b1edce0ece72d24b7c74f46b73bd6dcba",
          "author": {
            "email": "ardb@kernel.org",
            "name": "Ard Biesheuvel"
          },
          "message": "efi: avoid efivars layer when loading SSDTs from variables\n\nThe efivars intermediate variable access layer provides an abstraction\nthat permits the EFI variable store to be replaced by something else\nthat implements a compatible interface, and caches all variables in the\nvariable store for fast access via the efivarfs pseudo-filesystem.\n\nThe SSDT override feature does not take advantage of either feature, as\nit is only used when the generic EFI implementation of efivars is used,\nand it traverses all variables only once to find the ones it is\ninterested in, and frees all data structures that the efivars layer\nkeeps right after.\n\nSo in this case, let's just call EFI's code directly, using the function\npointers in struct efi.\n\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3881ee0b1edce0ece72d24b7c74f46b73bd6dcba"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T22:29:07Z"
  },
  {
    "id": "23246940398",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10630160511,
      "size": 18,
      "distinct_size": 18,
      "ref": "refs/heads/master",
      "head": "ff89dd08c0f0a3fd330c9ef9d775e880f82c291e",
      "before": "200e340f2196d7fd427a5810d06e893b932f145a",
      "commits": [
        {
          "sha": "0e3c3b901c00364198d31482fa2552ccf2d5c899",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "No need of likely/unlikely on calls of check_copy_size()\n\nit's inline and unlikely() inside of it (including the implicit one\nin WARN_ON_ONCE()) suffice to convince the compiler that getting\nfalse from check_copy_size() is unlikely.\n\nSpotted-by: Jens Axboe <axboe@kernel.dk>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0e3c3b901c00364198d31482fa2552ccf2d5c899"
        },
        {
          "sha": "f615625a44c4e641460acf74c91cedfaeab0dd28",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "9p: handling Rerror without copy_from_iter_full()\n\n        p9_client_zc_rpc()/p9_check_zc_errors() are playing fast\nand loose with copy_from_iter_full().\n\n\tReading from file is done by sending Tread request.  Response\nconsists of fixed-sized header (including the amount of data actually\nread) followed by the data itself.\n\n\tFor zero-copy case we arrange the things so that the first\n11 bytes of reply go into the fixed-sized buffer, with the rest going\nstraight into the pages we want to read into.\n\n\tWhat makes the things inconvenient is that sglist describing\nwhat should go where has to be set *before* the reply arrives.  As\nthe result, if reply is an error, the things get interesting.  On success\nwe get\n\tsize[4] Rread tag[2] count[4] data[count]\nFor error layout varies depending upon the protocol variant -\nin original 9P and 9P2000 it's\n\tsize[4] Rerror tag[2] len[2] error[len]\nin 9P2000.U\n\tsize[4] Rerror tag[2] len[2] error[len] errno[4]\nin 9P2000.L\n\tsize[4] Rlerror tag[2] errno[4]\n\n\tThe last case is nice and simple - we have an 11-byte response\nthat fits into the fixed-sized buffer we hoped to get an Rread into.\nIn other two, though, we get a variable-length string spill into the\npages we'd prepared for the data to be read.\n\n\tHad that been in fixed-sized buffer (which is actually 4K),\nwe would've dealt with that the same way we handle non-zerocopy case.\nHowever, for zerocopy it doesn't end up there, so we need to copy it\nfrom those pages.\n\n\tThe trouble is, by the time we get around to that, the\nreferences to pages in question are already dropped.  As the result,\np9_zc_check_errors() tries to get the data using copy_from_iter_full().\nUnfortunately, the iov_iter it's trying to read from might *NOT* be\ncapable of that.  It is, after all, a data destination, not data source.\nIn particular, if it's an ITER_PIPE one, copy_from_iter_full() will\nsimply fail.\n\n\tIn ->zc_request() itself we do have those pages and dealing with\nthe problem in there would be a simple matter of memcpy_from_page()\ninto the fixed-sized buffer.  Moreover, it isn't hard to recognize\nthe (rare) case when such copying is needed.  That way we get rid of\np9_zc_check_errors() entirely - p9_check_errors() can be used instead\nboth for zero-copy and non-zero-copy cases.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f615625a44c4e641460acf74c91cedfaeab0dd28"
        },
        {
          "sha": "36518b6b4da7e8d4387bc19ad21e772f1060e9d7",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "teach iomap_dio_rw() to suppress dsync\n\nNew flag, equivalent to removal of IOCB_DSYNC from iocb flags.\nThis mimics what btrfs is doing (and that's what btrfs will\nswitch to).  However, I'm not at all sure that we want to\nsuppress REQ_FUA for those - all btrfs hack really cares about\nis suppression of generic_write_sync().  For now let's keep\nthe existing behaviour, but I really want to hear more detailed\narguments pro or contra.\n\n[folded brain fix from willy]\n\nSuggested-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/36518b6b4da7e8d4387bc19ad21e772f1060e9d7"
        },
        {
          "sha": "eacdf4eaca632438c8453294727b94d7c5745c62",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "btrfs: use IOMAP_DIO_NOSYNC\n\n... instead of messing with iocb flags\n\nSuggested-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/eacdf4eaca632438c8453294727b94d7c5745c62"
        },
        {
          "sha": "e87f2c26c8085dac59978dee1beeb05cef31a9dd",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "struct file: use anonymous union member for rcuhead and llist\n\nOnce upon a time we couldn't afford anon unions; these days minimal\ngcc version had been raised enough to take care of that.\n\nReviewed-by: Jan Kara <jack@suse.cz>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e87f2c26c8085dac59978dee1beeb05cef31a9dd"
        },
        {
          "sha": "91b94c5d6ae55d1161633047ffeea644b110b35f",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "iocb: delay evaluation of IS_SYNC(...) until we want to check IOCB_DSYNC\n\nNew helper to be used instead of direct checks for IOCB_DSYNC:\niocb_is_dsync(iocb).  Checks converted, which allows to avoid\nthe IS_SYNC(iocb->ki_filp->f_mapping->host) part (4 cache lines)\nfrom iocb_flags() - it's checked in iocb_is_dsync() instead\n\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/91b94c5d6ae55d1161633047ffeea644b110b35f"
        },
        {
          "sha": "164f4064ca81eefcea29f7f5dcf394f92be1d0c0",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "keep iocb_flags() result cached in struct file\n\n* calculate at the time we set FMODE_OPENED (do_dentry_open() for normal\nopens, alloc_file() for pipe()/socket()/etc.)\n* update when handling F_SETFL\n* keep in a new field - file->f_iocb_flags; since that thing is needed only\nbefore the refcount reaches zero, we can put it into the same anon union\nwhere ->f_rcuhead and ->f_llist live - those are used only after refcount\nreaches zero.\n\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/164f4064ca81eefcea29f7f5dcf394f92be1d0c0"
        },
        {
          "sha": "59bb69c67cf1475a04cd5629d9c4f6dbbcba5e4a",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "copy_page_{to,from}_iter(): switch iovec variants to generic\n\nwe can do copyin/copyout under kmap_local_page(); it shouldn't overflow\nthe kmap stack - the maximal footprint increase only by one here.\n\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/59bb69c67cf1475a04cd5629d9c4f6dbbcba5e4a"
        },
        {
          "sha": "c3497fd009ef2c59eea60d21c3ac22de3585ed7d",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "fix short copy handling in copy_mc_pipe_to_iter()\n\nUnlike other copying operations on ITER_PIPE, copy_mc_to_iter() can\nresult in a short copy.  In that case we need to trim the unused\nbuffers, as well as the length of partially filled one - it's not\nenough to set ->head, ->iov_offset and ->count to reflect how\nmuch had we copied.  Not hard to fix, fortunately...\n\nI'd put a helper (pipe_discard_from(pipe, head)) into pipe_fs_i.h,\nrather than iov_iter.c - it has nothing to do with iov_iter and\nhaving it will allow us to avoid an ugly kludge in fs/splice.c.\nWe could put it into lib/iov_iter.c for now and move it later,\nbut I don't see the point going that way...\n\nCc: stable@kernel.org # 4.19+\nFixes: ca146f6f091e \"lib/iov_iter: Fix pipe handling in _copy_to_iter_mcsafe()\"\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c3497fd009ef2c59eea60d21c3ac22de3585ed7d"
        },
        {
          "sha": "18fa9af7263164ec9a8d7b28a848324825f14672",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "iov_iter_bvec_advance(): don't bother with bvec_iter\n\ndo what we do for iovec/kvec; that ends up generating better code,\nAFAICS.\n\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nReviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/18fa9af7263164ec9a8d7b28a848324825f14672"
        },
        {
          "sha": "7392ed1734c319150b5ddec3f192a6405728e8d0",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "iov_iter_get_pages{,_alloc}(): cap the maxsize with MAX_RW_COUNT\n\nAll callers can and should handle iov_iter_get_pages() returning\nfewer pages than requested.  All in-kernel ones do.  And it makes\nthe arithmetical overflow analysis much simpler...\n\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7392ed1734c319150b5ddec3f192a6405728e8d0"
        },
        {
          "sha": "599a0bdd72f0a7ed5f55faef0ecdcd36cb1bc287",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "iov_iter: lift dealing with maxpages out of first_{iovec,bvec}_segment()\n\ncaller can do that just as easily\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/599a0bdd72f0a7ed5f55faef0ecdcd36cb1bc287"
        },
        {
          "sha": "dda8e5d17c170415a3c10f68365f3a2800a6e68f",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "iov_iter: first_{iovec,bvec}_segment() - simplify a bit\n\nWe return length + offset in page via *size.  Don't bother - the caller\ncan do that arithmetics just as well; just report the length to it.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dda8e5d17c170415a3c10f68365f3a2800a6e68f"
        },
        {
          "sha": "59dbd7d0904a887ede1538b55bb8095ff2ce5078",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "iov_iter: massage calling conventions for first_{iovec,bvec}_segment()\n\nPass maxsize by reference, return length via the same.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/59dbd7d0904a887ede1538b55bb8095ff2ce5078"
        },
        {
          "sha": "dd45ab9dd28c82fc495d98cd9788666fd8d76b99",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "first_iovec_segment(): just return address\n\n... and calculate the offset in the caller\n\nReviewed-by: Jeff Layton <jlayton@kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/dd45ab9dd28c82fc495d98cd9788666fd8d76b99"
        },
        {
          "sha": "5264406cdb66c7003eb3edf53c9773b1b20611b9",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'pull-work.iov_iter-base' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull vfs iov_iter updates from Al Viro:\n \"Part 1 - isolated cleanups and optimizations.\n\n  One of the goals is to reduce the overhead of using ->read_iter() and\n  ->write_iter() instead of ->read()/->write().\n\n  new_sync_{read,write}() has a surprising amount of overhead, in\n  particular inside iocb_flags(). That's the explanation for the\n  beginning of the series is in this pile; it's not directly\n  iov_iter-related, but it's a part of the same work...\"\n\n* tag 'pull-work.iov_iter-base' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  first_iovec_segment(): just return address\n  iov_iter: massage calling conventions for first_{iovec,bvec}_segment()\n  iov_iter: first_{iovec,bvec}_segment() - simplify a bit\n  iov_iter: lift dealing with maxpages out of first_{iovec,bvec}_segment()\n  iov_iter_get_pages{,_alloc}(): cap the maxsize with MAX_RW_COUNT\n  iov_iter_bvec_advance(): don't bother with bvec_iter\n  copy_page_{to,from}_iter(): switch iovec variants to generic\n  keep iocb_flags() result cached in struct file\n  iocb: delay evaluation of IS_SYNC(...) until we want to check IOCB_DSYNC\n  struct file: use anonymous union member for rcuhead and llist\n  btrfs: use IOMAP_DIO_NOSYNC\n  teach iomap_dio_rw() to suppress dsync\n  No need of likely/unlikely on calls of check_copy_size()",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5264406cdb66c7003eb3edf53c9773b1b20611b9"
        },
        {
          "sha": "d9b58ab789b053b70dc475f1efda124857f10aa2",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'pull-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull copy_to_iter_mc fix from Al Viro:\n \"Backportable fix for copy_to_iter_mc() - the second part of iov_iter\n  work will pretty much overwrite this, but would be much harder to\n  backport\"\n\n* tag 'pull-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  fix short copy handling in copy_mc_pipe_to_iter()",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d9b58ab789b053b70dc475f1efda124857f10aa2"
        },
        {
          "sha": "ff89dd08c0f0a3fd330c9ef9d775e880f82c291e",
          "author": {
            "email": "torvalds@linux-foundation.org",
            "name": "Linus Torvalds"
          },
          "message": "Merge tag 'pull-work.9p' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs\n\nPull 9p iov_iter fix from Al Viro:\n \"net/9p abuses iov_iter primitives - it attempts to copy _from_ a\n  destination-only iov_iter when it handles Rerror arriving in reply to\n  zero-copy request.   Not hard to fix, fortunately.\n\n  This is a prereq for the iov_iter_get_pages() work in the second part\n  of iov_iter series, ended up in a separate branch\"\n\n* tag 'pull-work.9p' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs:\n  9p: handling Rerror without copy_from_iter_full()",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/ff89dd08c0f0a3fd330c9ef9d775e880f82c291e"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T21:14:03Z"
  },
  {
    "id": "23244798041",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10629106090,
      "size": 23,
      "distinct_size": 23,
      "ref": "refs/heads/master",
      "head": "200e340f2196d7fd427a5810d06e893b932f145a",
      "before": "f00654007fe1c154dafbdc1f5953c132e8c27c38",
      "commits": [
        {
          "sha": "20aac6c60981f5bfacd66661d090d907bf1482f0",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "__follow_mount_rcu(): verify that mount_lock remains unchanged\n\nValidate mount_lock seqcount as soon as we cross into mount in RCU\nmode.  Sure, ->mnt_root is pinned and will remain so until we\ndo rcu_read_unlock() anyway, and we will eventually fail to unlazy if\nthe mount_lock had been touched, but we might run into a hard error\n(e.g. -ENOENT) before trying to unlazy.  And it's possible to end\nup with RCU pathwalk racing with rename() and umount() in a way\nthat would fail with -ENOENT while non-RCU pathwalk would've\nsucceeded with any timings.\n\nOnce upon a time we hadn't needed that, but analysis had been subtle,\nbrittle and went out of window as soon as RENAME_EXCHANGE had been\nadded.\n\nIt's narrow, hard to hit and won't get you anything other than\nstray -ENOENT that could be arranged in much easier way with the\nsame priveleges, but it's a bug all the same.\n\nCc: stable@kernel.org\nX-sky-is-falling: unlikely\nFixes: da1ce0670c14 \"vfs: add cross-rename\"\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/20aac6c60981f5bfacd66661d090d907bf1482f0"
        },
        {
          "sha": "82ef069805a352bacb22fd4322b746edf809603c",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "namei: get rid of pointless unlikely(read_seqcount_retry(...))\n\nread_seqcount_retry() et.al. are inlined and there's enough annotations\nfor compiler to figure out that those are unlikely to return non-zero.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/82ef069805a352bacb22fd4322b746edf809603c"
        },
        {
          "sha": "51c6546c30ea6efe9aa819015bd61ffefc910944",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "follow_dotdot{,_rcu}(): change calling conventions\n\nInstead of returning NULL when we are in root, just make it return\nthe current position (and set *seqp and *inodep accordingly).\nThat collapses the calls of step_into() in handle_dots()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/51c6546c30ea6efe9aa819015bd61ffefc910944"
        },
        {
          "sha": "7e4745a09426b3fe63e9fbea3190e0f8500820a4",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "switch try_to_unlazy_next() to __legitimize_mnt()\n\nThe tricky case (__legitimize_mnt() failing after having grabbed\na reference) can be trivially dealt with by leaving nd->path.mnt\nnon-NULL, for terminate_walk() to drop it.\n\nlegitimize_mnt() becomes static after that.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7e4745a09426b3fe63e9fbea3190e0f8500820a4"
        },
        {
          "sha": "6e180327153071281dbbf6a16759e49862debdca",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "namei: move clearing LOOKUP_RCU towards rcu_read_unlock()\n\ntry_to_unlazy()/try_to_unlazy_next() drop LOOKUP_RCU in the\nvery beginning and do rcu_read_unlock() only at the very end.\nHowever, nothing done in between even looks at the flag in\nquestion; might as well clear it at the same time we unlock.\n\nNote that try_to_unlazy_next() used to call legitimize_mnt(),\nwhich might drop/regain rcu_read_lock() in some cases.  This\nis no longer true, so we really have rcu_read_lock() held\nall along until the end.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6e180327153071281dbbf6a16759e49862debdca"
        },
        {
          "sha": "03fa86e9f79d8b9a6aa28965829a4a8646139a0a",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "namei: stash the sampled ->d_seq into nameidata\n\nNew field: nd->next_seq.  Set to 0 outside of RCU mode, holds the sampled\nvalue for the next dentry to be considered.  Used instead of an arseload\nof local variables, arguments, etc.\n\nstep_into() has lost seq argument; nd->next_seq is used, so dentry passed\nto it must be the one ->next_seq is about.\n\nThere are two requirements for RCU pathwalk:\n\t1) it should not give a hard failure (other than -ECHILD) unless\nnon-RCU pathwalk might fail that way given suitable timings.\n\t2) it should not succeed unless non-RCU pathwalk might succeed\nwith the same end location given suitable timings.\n\nThe use of seq numbers is the way we achieve that.  Invariant we want\nto maintain is:\n\tif RCU pathwalk can reach the state with given nd->path, nd->inode\nand nd->seq after having traversed some part of pathname, it must be possible\nfor non-RCU pathwalk to reach the same nd->path and nd->inode after having\ntraversed the same part of pathname, and observe the nd->path.dentry->d_seq\nequal to what RCU pathwalk has in nd->seq\n\n\tFor transition from parent to child, we sample child's ->d_seq\nand verify that parent's ->d_seq remains unchanged.  Anything that\ndisrupts parent-child relationship would've bumped ->d_seq on both.\n\tFor transitions from child to parent we sample parent's ->d_seq\nand verify that child's ->d_seq has not changed.  Same reasoning as\nfor the previous case applies.\n\tFor transition from mountpoint to root of mounted we sample\nthe ->d_seq of root and verify that nobody has touched mount_lock since\nthe beginning of pathwalk.  That guarantees that mount we'd found had\nbeen there all along, with these mountpoint and root of the mounted.\nIt would be possible for a non-RCU pathwalk to reach the previous state,\nfind the same mount and observe its root at the moment we'd sampled\n->d_seq of that\n\tFor transitions from root of mounted to mountpoint we sample\n->d_seq of mountpoint and verify that mount_lock had not been touched\nsince the beginning of pathwalk.  The same reasoning as in the\nprevious case applies.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/03fa86e9f79d8b9a6aa28965829a4a8646139a0a"
        },
        {
          "sha": "a4f5b52167a80edec74093fe6fef291a0318f4ba",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "step_into(): lose inode argument\n\nmake handle_mounts() always fetch it.  This is just the first step -\nthe callers of step_into() will stop trying to calculate the sucker,\netc.\n\nThe passed value should be equal to dentry->d_inode in all cases;\nin RCU mode - fetched after we'd sampled ->d_seq.  Might as well\nfetch it here.  We do need to validate ->d_seq, which duplicates\nthe check currently done in lookup_fast(); that duplication will\ngo away shortly.\n\nAfter that change handle_mounts() always ignores the initial value of\n*inode and always sets it on success.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/a4f5b52167a80edec74093fe6fef291a0318f4ba"
        },
        {
          "sha": "b16c001de0f66bc633aefe770a8b0a75c8c39a3b",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "follow_dotdot{,_rcu}(): don't bother with inode\n\nstep_into() will fetch it, TYVM.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b16c001de0f66bc633aefe770a8b0a75c8c39a3b"
        },
        {
          "sha": "4cb640248041dab1c718a6140d758dad5a84b8ec",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "lookup_fast(): don't bother with inode\n\nNote that validation of ->d_seq after ->d_inode fetch is gone, along\nwith fetching of ->d_inode itself.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4cb640248041dab1c718a6140d758dad5a84b8ec"
        },
        {
          "sha": "3bd8bc897161730042051cd5f9c6ed1e94cb5453",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "step_into(): move fetching ->d_inode past handle_mounts()\n\n... and lose messing with it in __follow_mount_rcu()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3bd8bc897161730042051cd5f9c6ed1e94cb5453"
        },
        {
          "sha": "e7478158e1378325907edfdd960eca98a1be405b",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "fs: clear or set FMODE_LSEEK based on llseek function\n\nPipe-like behaviour on llseek(2) (i.e. unconditionally failing with\n-ESPIPE) can be expresses in 3 ways:\n\t1) ->llseek set to NULL in file_operations\n\t2) ->llseek set to no_llseek in file_operations\n\t3) FMODE_LSEEK *not* set in ->f_mode.\n\nEnforce (3) in cases (1) and (2); that will allow to simplify the\nchecks and eventually get rid of no_llseek boilerplate.\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e7478158e1378325907edfdd960eca98a1be405b"
        },
        {
          "sha": "4e3299eaddffd9d7d5b8bae28ad700bb775f02d0",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "fs: do not compare against ->llseek\n\nNow vfs_llseek() can simply check for FMODE_LSEEK; if it's set,\nwe know that ->llseek() won't be NULL and if it's not we should\njust fail with -ESPIPE.\n\nA couple of other places where we used to check for special\nvalues of ->llseek() (somewhat inconsistently) switched to\nchecking FMODE_LSEEK.\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4e3299eaddffd9d7d5b8bae28ad700bb775f02d0"
        },
        {
          "sha": "c9eb2d427c1c428e4f4e29f1e635b9a83236c015",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "dma-buf: remove useless FMODE_LSEEK flag\n\nThis is already set by anon_inode_getfile(), since dma_buf_fops has\nnon-NULL ->llseek, so we don't need to set it here too.\n\nAcked-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nAcked-by: Sumit Semwal <sumit.semwal@linaro.org>\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c9eb2d427c1c428e4f4e29f1e635b9a83236c015"
        },
        {
          "sha": "54ef7a47f67de9e87022a5310d1e8332af3e2696",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "vfio: do not set FMODE_LSEEK flag\n\nThis file does not support llseek, so don't set the flag advertising it.\n\nAcked-by: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/54ef7a47f67de9e87022a5310d1e8332af3e2696"
        },
        {
          "sha": "97ef77c52b789ec1411d360ed99dca1efe4b2c81",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "fs: check FMODE_LSEEK to control internal pipe splicing\n\nThe original direct splicing mechanism from Jens required the input to\nbe a regular file because it was avoiding the special socket case. It\nalso recognized blkdevs as being close enough to a regular file. But it\nforgot about chardevs, which behave the same way and work fine here.\n\nThis is an okayish heuristic, but it doesn't totally work. For example,\na few chardevs should be spliceable here. And a few regular files\nshouldn't. This patch fixes this by instead checking whether FMODE_LSEEK\nis set, which represents decently enough what we need rewinding for when\nsplicing to internal pipes.\n\nFixes: b92ce5589374 (\"[PATCH] splice: add direct fd <-> fd splicing support\")\nCc: Jens Axboe <axboe@kernel.dk>\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/97ef77c52b789ec1411d360ed99dca1efe4b2c81"
        },
        {
          "sha": "868941b14441282ba08761b770fc6cad69d5bdb7",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "fs: remove no_llseek\n\nNow that all callers of ->llseek are going through vfs_llseek(), we\ndon't gain anything by keeping no_llseek around. Nothing actually calls\nit and setting ->llseek to no_lseek is completely equivalent to\nleaving it NULL.\n\nLonger term (== by the end of merge window) we want to remove all such\nintializations.  To simplify the merge window this commit does *not*\ntouch initializers - it only defines no_llseek as NULL (and simplifies\nthe tests on file opening).\n\nAt -rc1 we'll need do a mechanical removal of no_llseek -\n\ngit grep -l -w no_llseek | grep -v porting.rst | while read i; do\n\tsed -i '/\\<no_llseek\\>/d' $i\ndone\nwould do it.\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/868941b14441282ba08761b770fc6cad69d5bdb7"
        },
        {
          "sha": "40a3cb0d2314a41975aa385a74643878454f6eac",
          "author": {
            "email": "viro@zeniv.linux.org.uk",
            "name": "Al Viro"
          },
          "message": "d_add_ci(): make sure we don't miss d_lookup_done()\n\nAll callers of d_alloc_parallel() must make sure that resulting\nin-lookup dentry (if any) will encounter __d_lookup_done() before\nthe final dput().  d_add_ci() might end up creating in-lookup\ndentries; they are fed to d_splice_alias(), which will normally\nmake sure they meet __d_lookup_done().  However, it is possible\nto end up with d_splice_alias() failing with ERR_PTR(-ELOOP)\nwithout having done so.  It takes a corrupted ntfs or case-insensitive\nxfs image, but neither should end up with memory corruption...\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/40a3cb0d2314a41975aa385a74643878454f6eac"
        },
        {
          "sha": "cf634d540a29018e8d69ab1befb7e08182bc6594",
          "author": {
            "email": "bigeasy@linutronix.de",
            "name": "Sebastian Andrzej Siewior"
          },
          "message": "fs/dcache: Disable preemption on i_dir_seq write side on PREEMPT_RT\n\ni_dir_seq is a sequence counter with a lock which is represented by the\nlowest bit. The writer atomically updates the counter which ensures that it\ncan be modified by only one writer at a time. This requires preemption to\nbe disabled across the write side critical section.\n\nOn !PREEMPT_RT kernels this is implicit by the caller acquiring\ndentry::lock. On PREEMPT_RT kernels spin_lock() does not disable preemption\nwhich means that a preempting writer or reader would live lock. It's\ntherefore required to disable preemption explicitly.\n\nAn alternative solution would be to replace i_dir_seq with a seqlock_t for\nPREEMPT_RT, but that comes with its own set of problems due to arbitrary\nlock nesting. A pure sequence count with an associated spinlock is not\npossible because the locks held by the caller are not necessarily related.\n\nAs the critical section is small, disabling preemption is a sensible\nsolution.\n\nReported-by: Oleg.Karfich@wago.com\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nLink: https://lkml.kernel.org/r/20220613140712.77932-2-bigeasy@linutronix.de\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cf634d540a29018e8d69ab1befb7e08182bc6594"
        },
        {
          "sha": "45f78b0a2743c4fd71b73400bd5d5339628bf538",
          "author": {
            "email": "bigeasy@linutronix.de",
            "name": "Sebastian Andrzej Siewior"
          },
          "message": "fs/dcache: Move the wakeup from __d_lookup_done() to the caller.\n\n__d_lookup_done() wakes waiters on dentry->d_wait.  On PREEMPT_RT we are\nnot allowed to do that with preemption disabled, since the wakeup\nacquired wait_queue_head::lock, which is a \"sleeping\" spinlock on RT.\n\nCalling it under dentry->d_lock is not a problem, since that is also a\n\"sleeping\" spinlock on the same configs.  Unfortunately, two of its\ncallers (__d_add() and __d_move()) are holding more than just ->d_lock\nand that needs to be dealt with.\n\nThe key observation is that wakeup can be moved to any point before\ndropping ->d_lock.\n\nAs a first step to solve this, move the wake up outside of the\nhlist_bl_lock() held section.\n\nThis is safe because:\n\nWaiters get inserted into ->d_wait only after they'd taken ->d_lock\nand observed DCACHE_PAR_LOOKUP in flags.  As long as they are\nwoken up (and evicted from the queue) between the moment __d_lookup_done()\nhas removed DCACHE_PAR_LOOKUP and dropping ->d_lock, we are safe,\nsince the waitqueue ->d_wait points to won't get destroyed without\nhaving __d_lookup_done(dentry) called (under ->d_lock).\n\n->d_wait is set only by d_alloc_parallel() and only in case when\nit returns a freshly allocated in-lookup dentry.  Whenever that happens,\nwe are guaranteed that __d_lookup_done() will be called for resulting\ndentry (under ->d_lock) before the wq in question gets destroyed.\n\nWith two exceptions wq lives in call frame of the caller of\nd_alloc_parallel() and we have an explicit d_lookup_done() on the\nresulting in-lookup dentry before we leave that frame.\n\nOne of those exceptions is nfs_call_unlink(), where wq is embedded into\n(dynamically allocated) struct nfs_unlinkdata.  It is destroyed in\nnfs_async_unlink_release() after an explicit d_lookup_done() on the\ndentry wq went into.\n\nRemaining exception is d_add_ci(). There wq is what we'd found in\n->d_wait of d_add_ci() argument. Callers of d_add_ci() are two\ninstances of ->d_lookup() and they must have been given an in-lookup\ndentry.  Which means that they'd been called by __lookup_slow() or\nlookup_open(), with wq in the call frame of one of those.\n\nResult of d_alloc_parallel() in d_add_ci() is fed to\nd_splice_alias(), which either returns non-NULL (and d_add_ci() does\nd_lookup_done()) or feeds dentry to __d_add() that will do\n__d_lookup_done() under ->d_lock.  That concludes the analysis.\n\nLet __d_lookup_unhash():\n\n  1) Lock the lookup hash and clear DCACHE_PAR_LOOKUP\n  2) Unhash the dentry\n  3) Retrieve and clear dentry::d_wait\n  4) Unlock the hash and return the retrieved waitqueue head pointer\n  5) Let the caller handle the wake up.\n  6) Rename __d_lookup_done() to __d_lookup_unhash_wake() to enforce\n     build failures for OOT code that used __d_lookup_done() and is not\n     aware of the new return value.\n\nThis does not yet solve the PREEMPT_RT problem completely because\npreemption is still disabled due to i_dir_seq being held for write. This\nwill be addressed in subsequent steps.\n\nAn alternative solution would be to switch the waitqueue to a simple\nwaitqueue, but aside of Linus not being a fan of them, moving the wake up\ncloser to the place where dentry::lock is unlocked reduces lock contention\ntime for the woken up waiter.\n\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nLink: https://lkml.kernel.org/r/20220613140712.77932-3-bigeasy@linutronix.de\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/45f78b0a2743c4fd71b73400bd5d5339628bf538"
        },
        {
          "sha": "50417d22d0efbb1be76c3cb66b2329f83741c9c7",
          "author": {
            "email": "bigeasy@linutronix.de",
            "name": "Sebastian Andrzej Siewior"
          },
          "message": "fs/dcache: Move wakeup out of i_seq_dir write held region.\n\n__d_add() and __d_move() wake up waiters on dentry::d_wait from within\nthe i_seq_dir write held region.  This violates the PREEMPT_RT\nconstraints as the wake up acquires wait_queue_head::lock which is a\n\"sleeping\" spinlock on RT.\n\nThere is no requirement to do so. __d_lookup_unhash() has cleared\nDCACHE_PAR_LOOKUP and dentry::d_wait and returned the now unreachable wait\nqueue head pointer to the caller, so the actual wake up can be postponed\nuntil the i_dir_seq write side critical section is left. The only\nrequirement is that dentry::lock is held across the whole sequence\nincluding the wake up. The previous commit includes an analysis why this\nis considered safe.\n\nMove the wake up past end_dir_add() which leaves the i_dir_seq write side\ncritical section and enables preemption.\n\nFor non RT kernels there is no difference because preemption is still\ndisabled due to dentry::lock being held, but it shortens the time between\nwake up and unlocking dentry::lock, which reduces the contention for the\nwoken up waiter.\n\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/50417d22d0efbb1be76c3cb66b2329f83741c9c7"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T19:00:41Z"
  },
  {
    "id": "23243565112",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10628502039,
      "size": 91,
      "distinct_size": 91,
      "ref": "refs/heads/master",
      "head": "f00654007fe1c154dafbdc1f5953c132e8c27c38",
      "before": "e2b542100719a93f8cdf6d90185410d38a57a4c1",
      "commits": [
        {
          "sha": "5f69a6577bc33d8f6d6bbe02bccdeb357b287f56",
          "author": {
            "email": "chenwandun@huawei.com",
            "name": "Chen Wandun"
          },
          "message": "psi: dont alloc memory for psi by default\n\nMemory about struct psi_group is allocated by default for\neach cgroup even if psi_disabled is true, in this case, these\nallocated memory is waste, so alloc memory for struct psi_group\nonly when psi_disabled is false.\n\nSigned-off-by: Chen Wandun <chenwandun@huawei.com>\nAcked-by: Johannes Weiner <hannes@cmpxchg.org>\nSigned-off-by: Tejun Heo <tj@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5f69a6577bc33d8f6d6bbe02bccdeb357b287f56"
        },
        {
          "sha": "e210a89f5b07680fe21d21e846e6817346c5ba3b",
          "author": {
            "email": "linf@wangsu.com",
            "name": "Lin Feng"
          },
          "message": "cgroup.c: add helper __cset_cgroup_from_root to cleanup duplicated codes\n\nNo funtionality change, but save us some lines.\n\nSigned-off-by: Lin Feng <linf@wangsu.com>\nAcked-by: Mukesh Ojha <quic_mojha@quicinc.com>\nSigned-off-by: Tejun Heo <tj@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/e210a89f5b07680fe21d21e846e6817346c5ba3b"
        },
        {
          "sha": "d75cd55ae2dedeee5382bb48832c322673b9781c",
          "author": {
            "email": "linf@wangsu.com",
            "name": "Lin Feng"
          },
          "message": "cgroup.c: remove redundant check for mixable cgroup in cgroup_migrate_vet_dst\n\nWe have:\nint cgroup_migrate_vet_dst(struct cgroup *dst_cgrp)\n{\n...\n\t/* mixables don't care */\n\tif (cgroup_is_mixable(dst_cgrp))\n\t\treturn 0;\n\n\t/*\n\t * If @dst_cgrp is already or can become a thread root or is\n\t * threaded, it doesn't matter.\n\t */\n\tif (cgroup_can_be_thread_root(dst_cgrp) || cgroup_is_threaded(dst_cgrp))\n\t\treturn 0;\n...\n}\n\nbut in fact the entry of cgroup_can_be_thread_root() covers case that\nchecking cgroup_is_mixable() as following:\nstatic bool cgroup_can_be_thread_root(struct cgroup *cgrp)\n{\n        /* mixables don't care */\n        if (cgroup_is_mixable(cgrp))\n                return true;\n...\n}\n\nso explicitly checking in cgroup_migrate_vet_dst is unnecessary.\n\nSigned-off-by: Lin Feng <linf@wangsu.com>\nReviewed-by: Michal Koutný <mkoutny@suse.com>\nSigned-off-by: Tejun Heo <tj@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d75cd55ae2dedeee5382bb48832c322673b9781c"
        },
        {
          "sha": "fb5c2029f8221e904e604938171c4a8ef169aadb",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "mm: Account dirty folios properly during splits\n\nIf the last folio in a file is split as a result of truncation,\nwe simply clear the dirty bits for the pages we're discarding.\nThat causes NR_FILE_DIRTY (among other counters) to be thrown off\nand eventually Linux will hang in balance_dirty_pages_ratelimited()\n\nReported-by: Dave Chinner <dchinner@redhat.com>\nTested-by: Dave Chinner <dchinner@redhat.com>\nTested-by: Darrick J. Wong <djwong@kernel.org>\nFixes: d68eccad3706 (\"mm/filemap: Allow large folios to be added to the page cache\")\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fb5c2029f8221e904e604938171c4a8ef169aadb"
        },
        {
          "sha": "6ffcd825e7d0416d78fd41cd5b7856a78122cc8c",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "mm: Remove __delete_from_page_cache()\n\nThis wrapper is no longer used.  Remove it and all references to it.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6ffcd825e7d0416d78fd41cd5b7856a78122cc8c"
        },
        {
          "sha": "211d04445b96db5b3640bcf345ad59105068a549",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "mpage: Convert do_mpage_readpage() to use a folio\n\nPass in a folio from mpage_readahead().  Also convert map_buffer_to_page()\nto map_buffer_to_folio().  There's still no support for large folios here;\nthere are numerous places which depend on the folio being PAGE_SIZE.\nThe VM_BUG_ON prevents anyone from thinking that it will work.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/211d04445b96db5b3640bcf345ad59105068a549"
        },
        {
          "sha": "d9ef44de5d731e1a1fa94ddb5e39ea1b308b1456",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "hugetlb: Convert huge_add_to_page_cache() to use a folio\n\nRemove the last caller of add_to_page_cache()\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Mike Kravetz <mike.kravetz@oracle.com>\nReviewed-by: Muchun Song <songmuchun@bytedance.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d9ef44de5d731e1a1fa94ddb5e39ea1b308b1456"
        },
        {
          "sha": "2bb876b58d593d7f2522ec0f41f20a74fde76822",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "filemap: Remove add_to_page_cache() and add_to_page_cache_locked()\n\nThese functions have no more users, so delete them.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nAcked-by: Mike Kravetz <mike.kravetz@oracle.com>\nReviewed-by: Muchun Song <songmuchun@bytedance.com>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2bb876b58d593d7f2522ec0f41f20a74fde76822"
        },
        {
          "sha": "be0ced5e9cb81a4c2edefd081a7794a1814fb60d",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "filemap: Add filemap_get_folios()\n\nThis is the equivalent of find_get_pages() but fills a folio_batch\ninstead of an array of pages.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/be0ced5e9cb81a4c2edefd081a7794a1814fb60d"
        },
        {
          "sha": "9e0b6f31bae6645010d2aa325560e74c05e17e5b",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "buffer: Convert clean_bdev_aliases() to use filemap_get_folios()\n\nUse a folio throughout this function.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9e0b6f31bae6645010d2aa325560e74c05e17e5b"
        },
        {
          "sha": "fb5a5be05fb45ab6fb3d1036c53435cde3d420ab",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "ext4: Convert mpage_release_unused_pages() to use filemap_get_folios()\n\nIf the folio is large, it may overlap the beginning or end of the\nunused range.  If it does, we need to avoid invalidating it.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fb5a5be05fb45ab6fb3d1036c53435cde3d420ab"
        },
        {
          "sha": "7530d0935cc7a5c58eab0acbc4ab8d32ac476d9a",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "ext4: Convert mpage_map_and_submit_buffers() to use filemap_get_folios()\n\nThe called functions all use pages, so just convert back to a page.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7530d0935cc7a5c58eab0acbc4ab8d32ac476d9a"
        },
        {
          "sha": "bbfe4f66002a1a0816e2f5dd3c87dd76dbfd41e6",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "f2fs: Convert f2fs_invalidate_compress_pages() to use filemap_get_folios()\n\nConvert this function to use folios throughout.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>\nAcked-by: Chao Yu <chao@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bbfe4f66002a1a0816e2f5dd3c87dd76dbfd41e6"
        },
        {
          "sha": "1508062ecd5515bcd50e76ceda20d626e8bfe939",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "hugetlbfs: Convert remove_inode_hugepages() to use filemap_get_folios()\n\nUse folios throughout this function.  That removes the last caller of\nhuge_pagevec_release(), so delete that too.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/1508062ecd5515bcd50e76ceda20d626e8bfe939"
        },
        {
          "sha": "f6e0e173442459759f0bfc76a3693c47a615d54c",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "nilfs2: Convert nilfs_copy_back_pages() to use filemap_get_folios()\n\nUse folios throughout.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nAcked-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f6e0e173442459759f0bfc76a3693c47a615d54c"
        },
        {
          "sha": "77414d195f905dd43f58bce82118775ffa59575c",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "vmscan: Add check_move_unevictable_folios()\n\nChange the guts of check_move_unevictable_pages() over to use folios\nand add check_move_unevictable_pages() as a wrapper.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/77414d195f905dd43f58bce82118775ffa59575c"
        },
        {
          "sha": "105c988f5dd76397616e0392ea85d45225397191",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "shmem: Convert shmem_unlock_mapping() to use filemap_get_folios()\n\nThis is a straightforward conversion.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/105c988f5dd76397616e0392ea85d45225397191"
        },
        {
          "sha": "bb4b42ba926224e26ed699e51def164b4b163935",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "filemap: Remove find_get_pages_range() and associated functions\n\nAll callers of find_get_pages_range(), pagevec_lookup_range() and\npagevec_lookup() have now been removed.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Christian Brauner (Microsoft) <brauner@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/bb4b42ba926224e26ed699e51def164b4b163935"
        },
        {
          "sha": "0e8e08cca5e3256a6209f02b482bee96fb91ba1b",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "netfs: Remove extern from function prototypes\n\nThe 'extern' keyword is not necessary and removing it lets us shorten\nsome lines.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0e8e08cca5e3256a6209f02b482bee96fb91ba1b"
        },
        {
          "sha": "9bc3e869386bdf5a00ecf71d6592050997e69d53",
          "author": {
            "email": "willy@infradead.org",
            "name": "Matthew Wilcox (Oracle)"
          },
          "message": "filemap: Move 'filler' case to the end of do_read_cache_folio()\n\nNo functionality change intended; this simply moves code around to\ndisentangle the function a little.\n\nSigned-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9bc3e869386bdf5a00ecf71d6592050997e69d53"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T17:48:56Z"
  },
  {
    "id": "23227828607",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10620764937,
      "size": 258,
      "distinct_size": 258,
      "ref": "refs/heads/master",
      "head": "e2b542100719a93f8cdf6d90185410d38a57a4c1",
      "before": "c2a24a7a036b3bd3a2e6c66730dfc777cae6540a",
      "commits": [
        {
          "sha": "df4bf98ec2d199ae32f215d083774ebb6424bf1f",
          "author": {
            "email": "niklas.soderlund@corigine.com",
            "name": "Niklas Söderlund"
          },
          "message": "scripts: kernel-doc: Always increment warnings counter\n\nSome warnings do not increment the warnings counter making the behavior\nof running kernel-doc with -Werror unlogical as some warnings will be\ngenerated but not treated as errors.\n\nFix this by creating a helper function that always incrementing the\nwarnings counter every time a warning is emitted. There is one location\nin get_sphinx_version() where a warning is not touched as it concerns\nthe execution environment of the kernel-doc and not the documentation\nbeing processed.\n\nIncrementing the counter only have effect when running kernel-doc in\neither verbose mode (-v or environment variable KBUILD_VERBOSE) or when\ntreating warnings as errors (-Werror or environment variable\nKDOC_WERROR). In both cases the number of warnings printed is printed to\nstderr and for the later the exit code of kernel-doc is non-zero if\nwarnings where encountered.\n\nSimple test case to demo one of the warnings,\n\n    $ cat test.c\n    /**\n     * foo() - Description\n     */\n    int bar();\n\n    # Without this change\n    $ ./scripts/kernel-doc -Werror -none test.c\n    test.c:4: warning: expecting prototype for foo(). Prototype was for\n    bar() instead\n\n    # With this change\n    $ ./scripts/kernel-doc -Werror -none test.c\n    test.c:4: warning: expecting prototype for foo(). Prototype was for\n    bar() instead\n    1 warnings as Errors\n\nSigned-off-by: Niklas Söderlund <niklas.soderlund@corigine.com>\nLink: https://lore.kernel.org/r/20220613090510.3088294-1-niklas.soderlund@corigine.com\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/df4bf98ec2d199ae32f215d083774ebb6424bf1f"
        },
        {
          "sha": "94bdaa7d9a9d778d893c670d494c06d8e007c1cd",
          "author": {
            "email": "mliska@suse.cz",
            "name": "Martin Liška"
          },
          "message": "docs/arm64: elf_hwcaps: Unify HWCAP lists as description lists\n\nAdd a series of blank lines to this document to get consistend rendering as\nan RST description list.\n\nSigned-off-by: Martin Liska <mliska@suse.cz>\nLink: https://lore.kernel.org/r/d0e576ab-6121-b7d7-da5b-7750f05ca7f4@suse.cz\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/94bdaa7d9a9d778d893c670d494c06d8e007c1cd"
        },
        {
          "sha": "d5b1d57b425c53e1e7e743265bbd4c71093bbc12",
          "author": {
            "email": "bobwxc@email.cn",
            "name": "Wu XiangCheng"
          },
          "message": "docs/zh_CN: Update translation of reporting-issues.rst to 5.18\n\nUpdate zh_CN/admin-guide/reporting-issues.rst to newest English version\n\ncommit 247097e2bbff4 (\"docs: reporting-issues.rst: link new document\n                       about regressions\")\n\nSigned-off-by: Wu XiangCheng <bobwxc@email.cn>\nReviewed-by: Alex Shi <alexs@kernel.org>\nLink: https://lore.kernel.org/r/YoRlDOUl/eg+h/Cc@bobwxc.mipc\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d5b1d57b425c53e1e7e743265bbd4c71093bbc12"
        },
        {
          "sha": "2adb5bb1b860705b9d4f3ac272f37b2d68649f7b",
          "author": {
            "email": "juerg.haefliger@canonical.com",
            "name": "Juerg Haefliger"
          },
          "message": "docs: Kconfig: Fix help text indentation\n\nThe convention for help text indentation seems to be a single tab followed\nby two whitespaces. Do that.\n\nWhile at it, remove a stray empty line.\n\nSigned-off-by: Juerg Haefliger <juergh@canonical.com>\nLink: https://lore.kernel.org/r/20220517140837.331298-1-juergh@canonical.com\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2adb5bb1b860705b9d4f3ac272f37b2d68649f7b"
        },
        {
          "sha": "2403e8044f222e7c816fb2416661f5f469662973",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu: Make normal polling GP be more precise about sequence numbers\n\nCurrently, poll_state_synchronize_rcu() uses rcu_seq_done() to check\nwhether the specified grace period has completed.  However, rcu_seq_done()\ndoes a simple comparison that reserves have of the sequence-number space\nfor uncompleted grace periods.  This has the unfortunate side-effect\nof not handling sequence-number wrap gracefully.  Of course, one can\nargue that if someone has already waited for half of the full range of\ngrace periods, they can wait for the other half, but why wait at all in\nthis case?\n\nThis commit therefore creates a rcu_seq_done_exact() that counts as\nuncompleted only the two grace periods during which the sequence number\nmight have been handed out, while still being uncompleted.  This way,\nif sequence-number wrap happens to hit that range, at most two additional\ngrace periods need be waited for.\n\nThis commit is in preparation for polled expedited grace periods.\n\nLink: https://lore.kernel.org/all/20220121142454.1994916-1-bfoster@redhat.com/\nLink: https://docs.google.com/document/d/1RNKWW9jQyfjxw2E8dsXVTdvZYh0HnYeSHDKog9jhdN8/edit?usp=sharing\nCc: Brian Foster <bfoster@redhat.com>\nCc: Dave Chinner <david@fromorbit.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Ian Kent <raven@themaw.net>\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2403e8044f222e7c816fb2416661f5f469662973"
        },
        {
          "sha": "414c12385d4741e35d88670c6cc2f40a77809734",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu: Provide a get_completed_synchronize_rcu() function\n\nIt is currently up to the caller to handle stale return values from\nget_state_synchronize_rcu().  If poll_state_synchronize_rcu() returned\ntrue once, a grace period has elapsed, regardless of the fact that counter\nwrap might cause some future poll_state_synchronize_rcu() invocation to\nreturn false.  For example, the caller might store a separate flag that\nindicates whether some previous call to poll_state_synchronize_rcu()\ndetermined that the relevant grace period had already ended.\n\nThis approach works, but it requires extra storage and is easy to get\nwrong.  This commit therefore introduces a get_completed_synchronize_rcu()\nthat returns a cookie that causes poll_state_synchronize_rcu() to always\nreturn true.  This already-completed cookie can be stored in place of the\ncookie that previously caused poll_state_synchronize_rcu() to return true.\nIt can also be used to flag a given structure as not having been exposed\nto readers, and thus not requiring a grace period to elapse.\n\nThis commit is in preparation for polled expedited grace periods.\n\nLink: https://lore.kernel.org/all/20220121142454.1994916-1-bfoster@redhat.com/\nLink: https://docs.google.com/document/d/1RNKWW9jQyfjxw2E8dsXVTdvZYh0HnYeSHDKog9jhdN8/edit?usp=sharing\nCc: Brian Foster <bfoster@redhat.com>\nCc: Dave Chinner <david@fromorbit.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Ian Kent <raven@themaw.net>\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/414c12385d4741e35d88670c6cc2f40a77809734"
        },
        {
          "sha": "d0eac20f9909de044fbeb958960b08ff235cf8a2",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcutorture: Validate get_completed_synchronize_rcu()\n\nThis commit verifies that the RCU grace-period state cookie returned\nfrom get_completed_synchronize_rcu() causes poll_state_synchronize_rcu()\nto return true, as required.\n\nThis commit is in preparation for polled expedited grace periods.\n\nLink: https://lore.kernel.org/all/20220121142454.1994916-1-bfoster@redhat.com/\nLink: https://docs.google.com/document/d/1RNKWW9jQyfjxw2E8dsXVTdvZYh0HnYeSHDKog9jhdN8/edit?usp=sharing\nCc: Brian Foster <bfoster@redhat.com>\nCc: Dave Chinner <david@fromorbit.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Ian Kent <raven@themaw.net>\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d0eac20f9909de044fbeb958960b08ff235cf8a2"
        },
        {
          "sha": "4cf0585c4d663654fefa0b359f1908b5cd72802b",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Check for abandoned callbacks\n\nThis commit adds a debugging scan for callbacks that got lost during a\ncallback-queueing transition.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4cf0585c4d663654fefa0b359f1908b5cd72802b"
        },
        {
          "sha": "d96225fd09ffb3a6424cebe01c8b1e1bddc30f07",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Split rcu_tasks_one_gp() from rcu_tasks_kthread()\n\nThis commit abstracts most of the rcu_tasks_kthread() function's loop\nbody into a new rcu_tasks_one_gp() function.  It also introduces\na new ->tasks_gp_mutex to synchronize concurrent calls to this new\nrcu_tasks_one_gp() function.  This commit is preparation for allowing\nRCU tasks grace periods to be driven by the calling task during the\nmid-boot dead zone.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d96225fd09ffb3a6424cebe01c8b1e1bddc30f07"
        },
        {
          "sha": "68cb47204db478302a37adb2aaa26a05882dbaa1",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Move synchronize_rcu_tasks_generic() down\n\nThis is strictly a code-motion commit that moves the\nsynchronize_rcu_tasks_generic() down to where it can invoke\nrcu_tasks_one_gp() without the need for a forward declaration.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/68cb47204db478302a37adb2aaa26a05882dbaa1"
        },
        {
          "sha": "4a8cc433b8bf3106cf7b1173a936c62d77b40b40",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Drive synchronous grace periods from calling task\n\nThis commit causes synchronous grace periods to be driven from the task\ninvoking synchronize_rcu_*(), allowing these functions to be invoked from\nthe mid-boot dead zone extending from when the scheduler was initialized\nto to point that the various RCU tasks grace-period kthreads are spawned.\nThis change will allow the self-tests to run in a consistent manner.\n\nReported-by: Matthew Wilcox <willy@infradead.org>\nReported-by: Zhouyi Zhou <zhouzhouyi@gmail.com>\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4a8cc433b8bf3106cf7b1173a936c62d77b40b40"
        },
        {
          "sha": "3847b64570b1753e9863a4106aec03f4d68e7b17",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Merge state into .b.need_qs and atomically update\n\nThis commit gets rid of the task_struct structure's ->trc_reader_checked\nfield, making it instead be a bit within the task_struct structure's\nexisting ->trc_reader_special.b.need_qs field.  This commit also\natomically loads, stores, and checks the resulting combination of the\nreader-checked and need-quiescent state flags.  This will in turn allow\nsignificant simplification of the rcu_tasks_trace_postgp() function\nas well as elimination of the trc_n_readers_need_end counter in later\ncommits.  These changes will in turn simplify later elimination of the\nRCU Tasks Trace scan of the task list, which will make RCU Tasks Trace\ngrace periods less CPU-intensive.\n\n[ paulmck: Apply kernel test robot feedback. ]\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3847b64570b1753e9863a4106aec03f4d68e7b17"
        },
        {
          "sha": "550611269b153dc17b44fa2d692c30f628d1c65c",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Remove rcu_tasks_trace_postgp() wait for counter\n\nNow that tasks are not removed from the list until they have responded to\nany needed request for a quiescent state, it is no longer necessary to\nwait for the trc_n_readers_need_end counter to go to zero.  This commit\ntherefore removes that waiting code.\n\nIt is therefore also no longer necessary for rcu_tasks_trace_postgp() to\ndo the final decrement of this counter, so that code is also removed.\nThis in turn means that trc_n_readers_need_end counter itself can\nbe removed, as can the rcu_tasks_trace_iw irq_work structure and the\nrcu_read_unlock_iw() function.\n\n[ paulmck: Apply feedback from Zqiang. ]\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/550611269b153dc17b44fa2d692c30f628d1c65c"
        },
        {
          "sha": "9ff86b4c443cc93bf3a9b624e3385e4114388e85",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Make trc_read_check_handler() fetch ->trc_reader_nesting only once\n\nThis commit replaces the pair of READ_ONCE(t->trc_reader_nesting) calls\nwith a single such call and a local variable.  This makes the code's\nintent more clear.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9ff86b4c443cc93bf3a9b624e3385e4114388e85"
        },
        {
          "sha": "5c9a9ca44fda41c5e82f50efced5297a9c19760d",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Idle tasks on offline CPUs are in quiescent states\n\nAny idle task corresponding to an offline CPU is in an RCU Tasks Trace\nquiescent state.  This commit causes rcu_tasks_trace_postscan() to ignore\nidle tasks for offline CPUs, which it can do safely due to CPU-hotplug\noperations being disabled.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5c9a9ca44fda41c5e82f50efced5297a9c19760d"
        },
        {
          "sha": "897ba84dc5aa7a5518e19da180d2985790723d30",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Handle idle tasks for recently offlined CPUs\n\nThis commit identifies idle tasks for recently offlined CPUs as residing\nin a quiescent state.  This is safe only because CPU-hotplug operations\nare excluded during these checks.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/897ba84dc5aa7a5518e19da180d2985790723d30"
        },
        {
          "sha": "5d4c90d755d5703d5a74fac0870c0a697250ec33",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: RCU Tasks Trace grace-period kthread has implicit QS\n\nBecause the task driving the grace-period kthread is in quiescent state\nthroughout, this commit excludes it from the list of tasks from which\na quiescent state is needed.\n\nThis does mean that attaching a sleepable BPF program to function in\nkernel/rcu/tasks.h is a bad idea, by the way.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/5d4c90d755d5703d5a74fac0870c0a697250ec33"
        },
        {
          "sha": "6a694411977a6d57ff76a896a745c2f717372dac",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Make rcu_note_context_switch() unconditionally call rcu_tasks_qs()\n\nThis commit makes rcu_note_context_switch() unconditionally invoke the\nrcu_tasks_qs() function, as opposed to doing so only when RCU (as opposed\nto RCU Tasks Trace) urgently needs a grace period to end.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6a694411977a6d57ff76a896a745c2f717372dac"
        },
        {
          "sha": "0968e8920b5b11b7a33982890ad9150e09e1cb1f",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Simplify trc_inspect_reader() QS logic\n\nCurrently, trc_inspect_reader() does one check for nesting less than\nor equal to zero, then sorts out the distinctions within this single\n\"if\" statement.  This commit simplifies the logic by providing one\n\"if\" statement for quiescent states (nesting of zero) and another \"if\"\nstatement for transitioning from one nesting level to another or the\noutermost rcu_read_unlock_trace() (negative nesting).\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/0968e8920b5b11b7a33982890ad9150e09e1cb1f"
        },
        {
          "sha": "9f3eb5fb8e468d3c3a6073d0c816405fa73c8038",
          "author": {
            "email": "paulmck@kernel.org",
            "name": "Paul E. McKenney"
          },
          "message": "rcu-tasks: Add slow-IPI indicator to RCU Tasks Trace stall warnings\n\nThis commit adds a \"I\" indicator to the RCU Tasks Trace CPU stall\nwarning when an IPI directed to a task has thus far failed to arrive.\nThis serves as a debugging aid.\n\nSigned-off-by: Paul E. McKenney <paulmck@kernel.org>\nCc: Neeraj Upadhyay <quic_neeraju@quicinc.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andrii Nakryiko <andrii@kernel.org>\nCc: Martin KaFai Lau <kafai@fb.com>\nCc: KP Singh <kpsingh@kernel.org>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9f3eb5fb8e468d3c3a6073d0c816405fa73c8038"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T03:22:53Z"
  },
  {
    "id": "23226407522",
    "type": "PushEvent",
    "actor": {
      "id": 1024025,
      "login": "torvalds",
      "display_login": "torvalds",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torvalds",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024025?"
    },
    "repo": {
      "id": 2325298,
      "name": "torvalds/linux",
      "url": "https://api.github.com/repos/torvalds/linux"
    },
    "payload": {
      "push_id": 10620002965,
      "size": 98,
      "distinct_size": 98,
      "ref": "refs/heads/master",
      "head": "c2a24a7a036b3bd3a2e6c66730dfc777cae6540a",
      "before": "569bede0cff5e98c0f862d486406b79dcada8eea",
      "commits": [
        {
          "sha": "13dc15a3f5fd7f884e4bfa8c011a0ae868df12ae",
          "author": {
            "email": "john.allen@amd.com",
            "name": "John Allen"
          },
          "message": "crypto: ccp - Use kzalloc for sev ioctl interfaces to prevent kernel memory leak\n\nFor some sev ioctl interfaces, input may be passed that is less than or\nequal to SEV_FW_BLOB_MAX_SIZE, but larger than the data that PSP\nfirmware returns. In this case, kmalloc will allocate memory that is the\nsize of the input rather than the size of the data. Since PSP firmware\ndoesn't fully overwrite the buffer, the sev ioctl interfaces with the\nissue may return uninitialized slab memory.\n\nCurrently, all of the ioctl interfaces in the ccp driver are safe, but\nto prevent future problems, change all ioctl interfaces that allocate\nmemory with kmalloc to use kzalloc and memset the data buffer to zero\nin sev_ioctl_do_platform_status.\n\nFixes: 38103671aad3 (\"crypto: ccp: Use the stack and common buffer for status commands\")\nFixes: e799035609e15 (\"crypto: ccp: Implement SEV_PEK_CSR ioctl command\")\nFixes: 76a2b524a4b1d (\"crypto: ccp: Implement SEV_PDH_CERT_EXPORT ioctl command\")\nFixes: d6112ea0cb344 (\"crypto: ccp - introduce SEV_GET_ID2 command\")\nCc: stable@vger.kernel.org\nReported-by: Andy Nguyen <theflow@google.com>\nSuggested-by: David Rientjes <rientjes@google.com>\nSuggested-by: Peter Gonda <pgonda@google.com>\nSigned-off-by: John Allen <john.allen@amd.com>\nReviewed-by: Peter Gonda <pgonda@google.com>\nAcked-by: David Rientjes <rientjes@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/13dc15a3f5fd7f884e4bfa8c011a0ae868df12ae"
        },
        {
          "sha": "d2765e1b9ac4b2d5a5d5bf17f468c9b3566c3770",
          "author": {
            "email": "dan.carpenter@oracle.com",
            "name": "Dan Carpenter"
          },
          "message": "crypto: sun8i-ss - fix error codes in allocate_flows()\n\nThese failure paths should return -ENOMEM.  Currently they return\nsuccess.\n\nFixes: 359e893e8af4 (\"crypto: sun8i-ss - rework handling of IV\")\nFixes: 8eec4563f152 (\"crypto: sun8i-ss - do not allocate memory when handling hash requests\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nAcked-by: Corentin Labbe <clabbe.montjoie@gmail.com>\nTested-by: Corentin Labbe <clabbe.montjoie@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/d2765e1b9ac4b2d5a5d5bf17f468c9b3566c3770"
        },
        {
          "sha": "6cb3f9b25c55928b95a02b9ed8e87ed653b3cce8",
          "author": {
            "email": "dan.carpenter@oracle.com",
            "name": "Dan Carpenter"
          },
          "message": "crypto: sun8i-ss - Fix error codes for dma_mapping_error()\n\nIf there is a dma_mapping_error() then return negative error codes.\nCurrently this code returns success.\n\nFixes: 801b7d572c0a (\"crypto: sun8i-ss - add hmac(sha1)\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nAcked-by: Corentin Labbe <clabbe.montjoie@gmail.com>\nTested-by: Corentin Labbe <clabbe.montjoie@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6cb3f9b25c55928b95a02b9ed8e87ed653b3cce8"
        },
        {
          "sha": "7df7563b16aa0281cb811785e4bb3681b46e2a28",
          "author": {
            "email": "u.kleine-koenig@pengutronix.de",
            "name": "Uwe Kleine-König"
          },
          "message": "crypto: atmel-ecc - Remove duplicated error reporting in .remove()\n\nReturning an error value in an i2c remove callback results in an error\nmessage being emitted by the i2c core, but otherwise it doesn't make a\ndifference. The device goes away anyhow and the devm cleanups are\ncalled.\n\nAs atmel_ecc_remove() already emits an error message on failure and the\nadditional error message by the i2c core doesn't add any useful\ninformation, change the return value to zero to suppress this message.\n\nAlso make the error message a bit more drastical because when the device\nis still busy on remove, it's likely that it will access freed memory\nsoon.\n\nThis patch is a preparation for making i2c remove callbacks return void.\n\nSigned-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>\nReviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7df7563b16aa0281cb811785e4bb3681b46e2a28"
        },
        {
          "sha": "17fee07a2ac577da18b44dd658a9c3c864281c49",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: xctr - Add XCTR support\n\nAdd a generic implementation of XCTR mode as a template.  XCTR is a\nblockcipher mode similar to CTR mode.  XCTR uses XORs and little-endian\naddition rather than big-endian arithmetic which has two advantages:  It\nis slightly faster on little-endian CPUs and it is less likely to be\nimplemented incorrect since integer overflows are not possible on\npractical input sizes.  XCTR is used as a component to implement HCTR2.\n\nMore information on XCTR mode can be found in the HCTR2 paper:\nhttps://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/17fee07a2ac577da18b44dd658a9c3c864281c49"
        },
        {
          "sha": "f3c923a09c4c4f5861b1ed53cf75673992a6ba68",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: polyval - Add POLYVAL support\n\nAdd support for POLYVAL, an ε-Δ-universal hash function similar to\nGHASH.  This patch only uses POLYVAL as a component to implement HCTR2\nmode.  It should be noted that POLYVAL was originally specified for use\nin AES-GCM-SIV (RFC 8452), but the kernel does not currently support\nthis mode.\n\nPOLYVAL is implemented as an shash algorithm.  The implementation is\nmodified from ghash-generic.c.\n\nFor more information on POLYVAL see:\nLength-preserving encryption with HCTR2:\n  https://eprint.iacr.org/2021/1441.pdf\nAES-GCM-SIV: Nonce Misuse-Resistant Authenticated Encryption:\n  https://datatracker.ietf.org/doc/html/rfc8452\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/f3c923a09c4c4f5861b1ed53cf75673992a6ba68"
        },
        {
          "sha": "7ff554ced7c7d7cf77586e07474e8633e011e2d0",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: hctr2 - Add HCTR2 support\n\nAdd support for HCTR2 as a template.  HCTR2 is a length-preserving\nencryption mode that is efficient on processors with instructions to\naccelerate AES and carryless multiplication, e.g. x86 processors with\nAES-NI and CLMUL, and ARM processors with the ARMv8 Crypto Extensions.\n\nAs a length-preserving encryption mode, HCTR2 is suitable for\napplications such as storage encryption where ciphertext expansion is\nnot possible, and thus authenticated encryption cannot be used.\nCurrently, such applications usually use XTS, or in some cases Adiantum.\nXTS has the disadvantage that it is a narrow-block mode: a bitflip will\nonly change 16 bytes in the resulting ciphertext or plaintext.  This\nreveals more information to an attacker than necessary.\n\nHCTR2 is a wide-block mode, so it provides a stronger security property:\na bitflip will change the entire message.  HCTR2 is somewhat similar to\nAdiantum, which is also a wide-block mode.  However, HCTR2 is designed\nto take advantage of existing crypto instructions, while Adiantum\ntargets devices without such hardware support.  Adiantum is also\ndesigned with longer messages in mind, while HCTR2 is designed to be\nefficient even on short messages.\n\nHCTR2 requires POLYVAL and XCTR as components.  More information on\nHCTR2 can be found here: \"Length-preserving encryption with HCTR2\":\nhttps://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7ff554ced7c7d7cf77586e07474e8633e011e2d0"
        },
        {
          "sha": "fd94fcf09957a75e25941f7dbfc84d30a63817ac",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: x86/aesni-xctr - Add accelerated implementation of XCTR\n\nAdd hardware accelerated version of XCTR for x86-64 CPUs with AESNI\nsupport.\n\nMore information on XCTR can be found in the HCTR2 paper:\n\"Length-preserving encryption with HCTR2\":\nhttps://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/fd94fcf09957a75e25941f7dbfc84d30a63817ac"
        },
        {
          "sha": "23a251cc1696e1bf68df1dbba569d2fe12469d22",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: arm64/aes-xctr - Add accelerated implementation of XCTR\n\nAdd hardware accelerated version of XCTR for ARM64 CPUs with ARMv8\nCrypto Extension support.  This XCTR implementation is based on the CTR\nimplementation in aes-modes.S.\n\nMore information on XCTR can be found in\nthe HCTR2 paper: \"Length-preserving encryption with HCTR2\":\nhttps://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/23a251cc1696e1bf68df1dbba569d2fe12469d22"
        },
        {
          "sha": "c0eb7591c1ed9cbdb0ad796bb56aed13748b55fa",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: arm64/aes-xctr - Improve readability of XCTR and CTR modes\n\nAdded some clarifying comments, changed the register allocations to make\nthe code clearer, and added register aliases.\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/c0eb7591c1ed9cbdb0ad796bb56aed13748b55fa"
        },
        {
          "sha": "34f7f6c3011276313383099156be287ac745bcea",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: x86/polyval - Add PCLMULQDQ accelerated implementation of POLYVAL\n\nAdd hardware accelerated version of POLYVAL for x86-64 CPUs with\nPCLMULQDQ support.\n\nThis implementation is accelerated using PCLMULQDQ instructions to\nperform the finite field computations.  For added efficiency, 8 blocks\nof the message are processed simultaneously by precomputing the first\n8 powers of the key.\n\nSchoolbook multiplication is used instead of Karatsuba multiplication\nbecause it was found to be slightly faster on x86-64 machines.\nMontgomery reduction must be used instead of Barrett reduction due to\nthe difference in modulus between POLYVAL's field and other finite\nfields.\n\nMore information on POLYVAL can be found in the HCTR2 paper:\n\"Length-preserving encryption with HCTR2\":\nhttps://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/34f7f6c3011276313383099156be287ac745bcea"
        },
        {
          "sha": "9d2c0b485c46c7c5f781067c60300def5d1365cb",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "crypto: arm64/polyval - Add PMULL accelerated implementation of POLYVAL\n\nAdd hardware accelerated version of POLYVAL for ARM64 CPUs with\nCrypto Extensions support.\n\nThis implementation is accelerated using PMULL instructions to perform\nthe finite field computations.  For added efficiency, 8 blocks of the\nmessage are processed simultaneously by precomputing the first 8\npowers of the key.\n\nKaratsuba multiplication is used instead of Schoolbook multiplication\nbecause it was found to be slightly faster on ARM64 CPUs.  Montgomery\nreduction must be used instead of Barrett reduction due to the\ndifference in modulus between POLYVAL's field and other finite fields.\n\nMore information on POLYVAL can be found in the HCTR2 paper:\n\"Length-preserving encryption with HCTR2\":\nhttps://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/9d2c0b485c46c7c5f781067c60300def5d1365cb"
        },
        {
          "sha": "6b2a51ff03bf0c54cbc699ee85a9a49eb203ebfc",
          "author": {
            "email": "nhuck@google.com",
            "name": "Nathan Huckleberry"
          },
          "message": "fscrypt: Add HCTR2 support for filename encryption\n\nHCTR2 is a tweakable, length-preserving encryption mode that is intended\nfor use on CPUs with dedicated crypto instructions.  HCTR2 has the\nproperty that a bitflip in the plaintext changes the entire ciphertext.\nThis property fixes a known weakness with filename encryption: when two\nfilenames in the same directory share a prefix of >= 16 bytes, with\nAES-CTS-CBC their encrypted filenames share a common substring, leaking\ninformation.  HCTR2 does not have this problem.\n\nMore information on HCTR2 can be found here: \"Length-preserving\nencryption with HCTR2\": https://eprint.iacr.org/2021/1441.pdf\n\nSigned-off-by: Nathan Huckleberry <nhuck@google.com>\nReviewed-by: Ard Biesheuvel <ardb@kernel.org>\nAcked-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/6b2a51ff03bf0c54cbc699ee85a9a49eb203ebfc"
        },
        {
          "sha": "3f3bbf22a592e8bd15d2f6d8e9a4a34e2b5028cd",
          "author": {
            "email": "Julia.Lawall@inria.fr",
            "name": "Julia Lawall"
          },
          "message": "crypto: hisilicon/sec - fix typos in comment\n\nSpelling mistakes (triple letters) in comment.\nDetected with the help of Coccinelle.\n\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/3f3bbf22a592e8bd15d2f6d8e9a4a34e2b5028cd"
        },
        {
          "sha": "cd81775a56bce2ad480ff8444e6f44f3980ceb7d",
          "author": {
            "email": "Julia.Lawall@inria.fr",
            "name": "Julia Lawall"
          },
          "message": "crypto: ccp - fix typo in comment\n\nSpelling mistake (triple letters) in comment.\nDetected with the help of Coccinelle.\n\nSigned-off-by: Julia Lawall <Julia.Lawall@inria.fr>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/cd81775a56bce2ad480ff8444e6f44f3980ceb7d"
        },
        {
          "sha": "4ad28689df853db3ee7b2656a225f1d722ee7639",
          "author": {
            "email": "sthotton@marvell.com",
            "name": "Shijith Thotton"
          },
          "message": "crypto: octeontx2 - add firmware version in devlink info\n\nAdded running firmware version information of AE, SE and IE components\nin devlink info.\n\nSigned-off-by: Shijith Thotton <sthotton@marvell.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/4ad28689df853db3ee7b2656a225f1d722ee7639"
        },
        {
          "sha": "920b0442b9f884f55f4745b53430c80e71e90275",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "crypto: memneq - move into lib/\n\nThis is used by code that doesn't need CONFIG_CRYPTO, so move this into\nlib/ with a Kconfig option so that it can be selected by whatever needs\nit.\n\nThis fixes a linker error Zheng pointed out when\nCRYPTO_MANAGER_DISABLE_TESTS!=y and CRYPTO=m:\n\n  lib/crypto/curve25519-selftest.o: In function `curve25519_selftest':\n  curve25519-selftest.c:(.init.text+0x60): undefined reference to `__crypto_memneq'\n  curve25519-selftest.c:(.init.text+0xec): undefined reference to `__crypto_memneq'\n  curve25519-selftest.c:(.init.text+0x114): undefined reference to `__crypto_memneq'\n  curve25519-selftest.c:(.init.text+0x154): undefined reference to `__crypto_memneq'\n\nReported-by: Zheng Bin <zhengbin13@huawei.com>\nCc: Eric Biggers <ebiggers@kernel.org>\nCc: stable@vger.kernel.org\nFixes: aa127963f1ca (\"crypto: lib/curve25519 - re-add selftests\")\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nReviewed-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/920b0442b9f884f55f4745b53430c80e71e90275"
        },
        {
          "sha": "2d16803c562ecc644803d42ba98a8e0aef9c014e",
          "author": {
            "email": "Jason@zx2c4.com",
            "name": "Jason A. Donenfeld"
          },
          "message": "crypto: blake2s - remove shash module\n\nBLAKE2s has no currently known use as an shash. Just remove all of this\nunnecessary plumbing. Removing this shash was something we talked about\nback when we were making BLAKE2s a built-in, but I simply never got\naround to doing it. So this completes that project.\n\nImportantly, this fixs a bug in which the lib code depends on\ncrypto_simd_disabled_for_test, causing linker errors.\n\nAlso add more alignment tests to the selftests and compare SIMD and\nnon-SIMD compression functions, to make up for what we lose from\ntestmgr.c.\n\nReported-by: gaochao <gaochao49@huawei.com>\nCc: Eric Biggers <ebiggers@kernel.org>\nCc: Ard Biesheuvel <ardb@kernel.org>\nCc: stable@vger.kernel.org\nFixes: 6048fdcc5f26 (\"lib/crypto: blake2s: include as built-in\")\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/2d16803c562ecc644803d42ba98a8e0aef9c014e"
        },
        {
          "sha": "b03c0dc0788abccc7a25ef7dff5818f4123bb992",
          "author": {
            "email": "sthotton@marvell.com",
            "name": "Shijith Thotton"
          },
          "message": "crypto: octeontx2 - fix potential null pointer access\n\nAdded missing checks to avoid null pointer dereference.\n\nThe patch fixes below issue reported by klocwork tool:\n. Pointer 'strsep( &val, \":\" )' returned from call to function 'strsep'\n  at line 1608 may be NULL and will be dereferenced at line 1608. Also\n  there are 2 similar errors on lines 1620, 1632 in otx2_cptpf_ucode.c.\n\nSigned-off-by: Shijith Thotton <sthotton@marvell.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/b03c0dc0788abccc7a25ef7dff5818f4123bb992"
        },
        {
          "sha": "7e8df1fc2d669d04c1f8a9e2d61d7afba1b43df4",
          "author": {
            "email": "wupeng58@huawei.com",
            "name": "Peng Wu"
          },
          "message": "crypto: sun8i-ss - fix a NULL vs IS_ERR() check in sun8i_ss_hashkey\n\nThe crypto_alloc_shash() function never returns NULL. It returns error\npointers.\n\nFixes: 801b7d572c0a (\"crypto: sun8i-ss - add hmac(sha1)\")\nSigned-off-by: Peng Wu <wupeng58@huawei.com>\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
          "distinct": true,
          "url": "https://api.github.com/repos/torvalds/linux/commits/7e8df1fc2d669d04c1f8a9e2d61d7afba1b43df4"
        }
      ]
    },
    "public": true,
    "created_at": "2022-08-03T00:57:25Z"
  }
]
